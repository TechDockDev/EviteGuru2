{"version":3,"file":"static/js/935.05337e65.chunk.js","mappings":"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","sources":["screen/Subadmin/AddSubAdmins.js","screen/Subadmin/SingleInput.js","../node_modules/@mui/icons-material/CheckBox.js","../node_modules/@mui/icons-material/CheckBoxOutlineBlank.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/icons-material/esm/VisibilityOff.js"],"sourcesContent":["import { Box, Button, Paper, Typography, Grid, Input, Stack, Checkbox, TextField, Autocomplete, Modal } from \"@mui/material\";\r\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport RemoveIcon from \"@mui/icons-material/Remove\";\r\nimport axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate, NavLink } from \"react-router-dom\";\r\n\r\nimport SingleInput from \"./SingleInput\";\r\nimport { DataContext } from \"../../AppContext\";\r\n\r\nexport const AddSubAdmins = () => {\r\n   const { snackbar } = useContext(DataContext);\r\n   const [formData, setFormData] = useState({\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      phone: \"\",\r\n      permission: [],\r\n      superAdmin: false,\r\n   });\r\n   const [arrayPermission, setArrayPermission] = useState([]);\r\n\r\n   const navigate = useNavigate();\r\n\r\n  \r\n// ===\r\n   const handleChange = (e, index) => {\r\n      if (e.target.name === \"permission\") {\r\n         let tempPerm = [...formData.permission];\r\n         tempPerm[index] = e.target.value;\r\n         setFormData({ ...formData, permission: tempPerm });\r\n      } else {\r\n         setFormData({ ...formData, [e.target.name]: e.target.value });\r\n      }\r\n   };\r\n   const icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\n   const checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\n   const submitHandler = async (e) => {\r\n      e.preventDefault();\r\n      try {\r\n         const tmpPermissions = [];\r\n         arrayPermission.map((p) => {\r\n            tmpPermissions.push(p.permission);\r\n         });\r\n         const { data } = await axios.post(\"/create-subadmin\", { ...formData, permission: tmpPermissions });\r\n         snackbar(data.status, data.message);\r\n         navigate(\"/admin/admin_list\");\r\n      } catch (error) {\r\n         snackbar(\"error\", error.message);\r\n      }\r\n   };\r\n\r\n   useEffect(() => {}, []);\r\n\r\n   return (\r\n      <>\r\n         <Stack width=\"100%\" margin=\"auto\" alignItems={\"center\"} p={2}>\r\n            <Paper\r\n               sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  flexDirection: \"column\",\r\n                  p: 2,\r\n                  bgcolor: \"white\",\r\n                  width: \"80%\",\r\n\r\n                  borderRadius: \"20px\",\r\n               }}\r\n               elevation={10}>\r\n               {/* title */}\r\n               <Typography\r\n                  variant=\"h1\"\r\n                  align=\"center\"\r\n                  fontWeight=\"800\"\r\n                  fontSize={\"28px\"}\r\n                  mb={2}\r\n                  sx={{\r\n                     color: \"#795da8\",\r\n                     width: \"100%\",\r\n                  }}>\r\n                  Add Admins\r\n               </Typography>\r\n               {/* title */}\r\n\r\n               {/* form element */}\r\n\r\n               <Grid\r\n                  // border=\"1px solid green\"\r\n                  width=\"90%\"\r\n                  p={1}\r\n                  container\r\n                  component=\"form\"\r\n                  onSubmit={submitHandler}\r\n                  sx={{\r\n                     display: \"flex\",\r\n                     justifyContent: \"center\",\r\n                     alignItems: \"center\",\r\n                     flexDirection: \"column\",\r\n                  }}>\r\n                  {/* == 👇 Sub-Admin Name 👇  ==*/}\r\n                  <SingleInput labelText={\"Sub-Admin Name\"} inputType={\"text\"} inputName={\"name\"} inputValue={formData.name} onChangeHandler={handleChange} labelInputId={\"name\"} requiredTrue={true} placeholderText={\"Sub-Admin name\"} />\r\n                  {/* == 👆 Sub-Admin Name 👆   ==*/}\r\n\r\n                  {/* == 👇 email 👇  ==*/}\r\n                  <SingleInput labelText={\"Email\"} inputType={\"email\"} inputName={\"email\"} inputValue={formData.email} onChangeHandler={handleChange} labelInputId={\"email\"} requiredTrue={true} placeholderText={\"Enter email\"} />\r\n                  {/* == 👆 email   ==*/}\r\n\r\n                  {/* == 👇 password 👇  ==*/}\r\n                  <SingleInput labelText={\"Password\"} inputType={\"password\"} inputName={\"password\"} inputValue={formData.password} onChangeHandler={handleChange} labelInputId={\"password\"} requiredTrue={true} placeholderText={\"Set Password\"} />\r\n                  {/* == 👆 password   ==*/}\r\n\r\n                  {/* == 👇 Phone 👇  ==*/}\r\n                  <SingleInput labelText={\"Phone\"} inputType={\"number\"} inputName={\"phone\"} inputValue={formData.phone} onChangeHandler={handleChange} labelInputId={\"phone\"} requiredTrue={true} placeholderText={\"Enter Phone No.\"} />\r\n                  {/* == 👆 Phone   ==*/}\r\n\r\n                  {/* == 👇 superAdmin 👇  ==*/}\r\n                  <Grid container mt={2}>\r\n                     <Grid\r\n                        component={\"label\"}\r\n                        htmlFor={\"superAdmin\"}\r\n                        item\r\n                        xl={4}\r\n                        lg={4}\r\n                        md={4}\r\n                        sm={4}\r\n                        xs={12}\r\n                        sx={{\r\n                           fontFamily: \"Montserrat\",\r\n                           fontSize: \"16px\",\r\n                           display: \"flex\",\r\n                           alignItems: \"center\",\r\n                        }}>\r\n                        Super Admin *\r\n                     </Grid>\r\n                     <Grid\r\n                        component={\"select\"}\r\n                        required={true}\r\n                        name=\"superAdmin\"\r\n                        value={formData.superAdmin}\r\n                        onChange={handleChange}\r\n                        id={\"superAdmin\"}\r\n                        item\r\n                        xl={8}\r\n                        lg={8}\r\n                        md={8}\r\n                        sm={8}\r\n                        xs={12}\r\n                        sx={{\r\n                           height: \"40px\",\r\n                           outline: \"none\",\r\n                           border: \"1px solid black\",\r\n                           borderRadius: \"8px\",\r\n                           paddingX: \"8px\",\r\n                           fontSize: \"16px\",\r\n                           \"&:focus\": { border: \"2px solid #795DA8\" },\r\n                        }}>\r\n                        <option value={null}>Please choose an option</option>\r\n                        <option value={true}>Yes</option>\r\n                        <option value={false}>No</option>\r\n                     </Grid>\r\n                  </Grid>\r\n                  {/* == 👆 superAdmin   ==*/}\r\n\r\n                  {/* == 👇 permission 👇  ==*/}\r\n                 {   (formData?.superAdmin === false || formData?.superAdmin === \"false\"  )&& <Grid container mt={2}>\r\n                     <Grid\r\n                        component={\"label\"}\r\n                        htmlFor={\"permission\"}\r\n                        item\r\n                        xl={4}\r\n                        lg={4}\r\n                        md={4}\r\n                        sm={4}\r\n                        xs={12}\r\n                        sx={{\r\n                           fontFamily: \"Montserrat\",\r\n                           fontSize: \"16px\",\r\n                           display: \"flex\",\r\n                           alignItems: \"center\",\r\n                        }}>\r\n                        Permission *\r\n                     </Grid>\r\n                    <Grid\r\n                        \r\n                        component={Autocomplete}\r\n                        item\r\n                        xl={8}\r\n                        lg={8}\r\n                        md={8}\r\n                        sm={8}\r\n                        xs={12}\r\n                        multiple\r\n                        sx={{\r\n                           borderRadius: \"8px\",\r\n                           \"& .MuiFormControl-root, .MuiInputBase-root\": {\r\n                              padding: \"0px\",\r\n                              height: \"100%\",\r\n                              borderRadius: \"8px\",\r\n                           },\r\n                           \"& input\": {\r\n                              paddingLeft: \"10px !important\",\r\n                           },\r\n                        }}\r\n                        id=\"permission\"\r\n                        options={subadminPermission}\r\n                        disableCloseOnSelect\r\n                        getOptionLabel={(formData, b) => formData.permission}\r\n                        onChange={(event, value) => setArrayPermission(value)}\r\n                        renderOption={(props, option, { selected }) => (\r\n                           <li\r\n                              {...props}\r\n                              style={{\r\n                                 background: \"white\",\r\n                                 color: \"#795da8\",\r\n                                 fontWeight: \"bold\",\r\n                              }}>\r\n                              <Checkbox icon={icon} checkedIcon={checkedIcon} style={{ marginRight: 8 }} checked={selected} />\r\n                              {option.permission}\r\n                           </li>\r\n                        )}\r\n                        renderInput={(params) => {\r\n                           return (\r\n                              <>\r\n                                 <TextField {...params} placeholder=\"Permission\" />\r\n                              </>\r\n                           );\r\n                        }}\r\n                     />\r\n                  </Grid>}\r\n                  {/* == 👆permission  ==*/}\r\n\r\n                  {/* buttons container */}\r\n                  <Grid item mt={3} xs={12} width=\"100%\" textAlign=\"center\">\r\n                     <Button\r\n                        disableElevation\r\n                        variant={\"contained\"}\r\n                        type=\"submit\"\r\n                        sx={{\r\n                           color: \"white\",\r\n                           width: \"100%\",\r\n                           mb: 1,\r\n                        }}\r\n                        size=\"large\">\r\n                        Submit\r\n                     </Button>\r\n                     <Button disableElevation fullWidth variant={\"outlined\"} component={NavLink} to=\"/admin/admin_list\">\r\n                        Back\r\n                        {/* {plan.buttonText} */}\r\n                     </Button>\r\n                  </Grid>\r\n               </Grid>\r\n\r\n               {/* form element */}\r\n            </Paper>\r\n         </Stack>\r\n        \r\n      </>\r\n   );\r\n};\r\n\r\nexport default AddSubAdmins;\r\n\r\nconst subadminPermission = [{ permission: \"Template\" }, { permission: \"Subscription\" }, { permission: \"Users\" }, { permission: \"Sub Admin\" }, { permission: \"Notifications\" }, { permission: \"Coupons\" },{ permission: \"Enterprise\" } ,  { permission: \"Accounts\" }];\r\n","import { Grid, IconButton, Typography } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\n\r\nconst SingleInput = ({ labelText, inputType, inputName, inputValue, onChangeHandler, labelInputId, requiredTrue, placeholderText, helperText, rows }) => {\r\n   const [showPassword, setShowPassword] = useState(false);\r\n   const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n   return (\r\n      <>\r\n         {inputType !== \"textarea\" ? (\r\n            inputType !== \"password\" ? (\r\n               <Grid container mt={2}>\r\n                  <Grid\r\n                     component={\"label\"}\r\n                     htmlFor={labelInputId}\r\n                     item\r\n                     xl={4}\r\n                     lg={4}\r\n                     md={4}\r\n                     sm={4}\r\n                     xs={12}\r\n                     sx={{\r\n                        fontFamily: \"Montserrat\",\r\n                        fontSize: \"16px\",\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                     }}>\r\n                     {labelText} {requiredTrue ? \"*\" : \"\"}\r\n                  </Grid>\r\n                  <Grid\r\n                     component={\"input\"}\r\n                     required={requiredTrue}\r\n                     type={inputType}\r\n                     name={inputName}\r\n                     value={inputValue}\r\n                     onChange={onChangeHandler}\r\n                     id={labelInputId}\r\n                     placeholder={placeholderText}\r\n                     item\r\n                     xl={8}\r\n                     lg={8}\r\n                     md={8}\r\n                     sm={8}\r\n                     xs={12}\r\n                     sx={{\r\n                        height: \"40px\",\r\n                        outline: \"none\",\r\n                        border: \"1px solid black\",\r\n                        borderRadius: \"8px\",\r\n                        paddingX: \"10px\",\r\n                        fontSize: \"16px\",\r\n                        \"&:focus\": { border: \"2px solid #795DA8\" },\r\n                     }}></Grid>\r\n                  {helperText ? (\r\n                     <Grid item xl={12} lg={12} md={12} sm={12} xs={12} sx={{ mt: 1, paddingRight: \"20px\" }}>\r\n                        <Typography textAlign={\"right\"} fontSize=\"12px\">\r\n                           {helperText}\r\n                        </Typography>\r\n                     </Grid>\r\n                  ) : (\r\n                     \"\"\r\n                  )}\r\n               </Grid>\r\n            ) : (\r\n               <Grid container mt={2} position={\"relative\"}>\r\n                  <Grid\r\n                     component={\"label\"}\r\n                     htmlFor={labelInputId}\r\n                     item\r\n                     xl={4}\r\n                     lg={4}\r\n                     md={4}\r\n                     sm={4}\r\n                     xs={12}\r\n                     sx={{\r\n                        fontFamily: \"Montserrat\",\r\n                        fontSize: \"16px\",\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                     }}>\r\n                     {labelText} {requiredTrue ? \"*\" : \"\"}\r\n                  </Grid>\r\n                  <Grid\r\n                     component={\"input\"}\r\n                     required={requiredTrue}\r\n                     type={showPassword ? \"text\" : \"password\"}\r\n                     name={inputName}\r\n                     value={inputValue}\r\n                     onChange={onChangeHandler}\r\n                     id={labelInputId}\r\n                     placeholder={placeholderText}\r\n                     item\r\n                     xl={8}\r\n                     lg={8}\r\n                     md={8}\r\n                     sm={8}\r\n                     xs={12}\r\n                     sx={{\r\n                        height: \"40px\",\r\n                        outline: \"none\",\r\n                        border: \"1px solid black\",\r\n                        borderRadius: \"8px\",\r\n                        paddingX: \"10px\",\r\n                        fontSize: \"16px\",\r\n                        \"&:focus\": { border: \"2px solid #795DA8\" },\r\n                     }}></Grid>\r\n                  {helperText ? (\r\n                     <Grid item xl={12} lg={12} md={12} sm={12} xs={12} sx={{ mt: 1, paddingRight: \"20px\" }}>\r\n                        <Typography textAlign={\"right\"} fontSize=\"12px\">\r\n                           {helperText}\r\n                        </Typography>\r\n                     </Grid>\r\n                  ) : (\r\n                     \"\"\r\n                  )}\r\n                  <IconButton aria-label=\"toggle-password-visibility\" onClick={handleClickShowPassword} sx={{position:\"absolute\",right:\"0px\"}} >\r\n                     {showPassword ? <VisibilityOff /> :<Visibility /> }\r\n                  </IconButton>\r\n               </Grid>\r\n            )\r\n         ) : (\r\n            <Grid container mt={2}>\r\n               <Grid\r\n                  component={\"label\"}\r\n                  htmlFor={labelInputId}\r\n                  item\r\n                  xl={4}\r\n                  lg={4}\r\n                  md={4}\r\n                  sm={4}\r\n                  xs={12}\r\n                  sx={{\r\n                     fontFamily: \"Montserrat\",\r\n                     fontSize: \"16px\",\r\n                     display: \"flex\",\r\n                     alignItems: \"center\",\r\n                  }}>\r\n                  {labelText} {requiredTrue ? \"*\" : \"\"}\r\n               </Grid>\r\n               <Grid\r\n                  component={\"textarea\"}\r\n                  rows={rows}\r\n                  required={requiredTrue}\r\n                  name={inputName}\r\n                  value={inputValue}\r\n                  onChange={onChangeHandler}\r\n                  id={labelInputId}\r\n                  placeholder={placeholderText}\r\n                  item\r\n                  xl={8}\r\n                  lg={8}\r\n                  md={8}\r\n                  sm={8}\r\n                  xs={12}\r\n                  sx={{\r\n                     outline: \"none\",\r\n                     border: \"1px solid black\",\r\n                     borderRadius: \"8px\",\r\n                     padding: \"10px\",\r\n                     fontSize: \"18px\",\r\n                     \"&:focus\": { border: \"2px solid #795DA8\" },\r\n                     resize: \"none\",\r\n                  }}></Grid>\r\n            </Grid>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default SingleInput;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');\nexports.default = _default;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');"],"names":["AddSubAdmins","snackbar","useContext","DataContext","_useState","useState","name","email","password","phone","permission","superAdmin","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","arrayPermission","setArrayPermission","navigate","useNavigate","handleChange","e","index","target","tempPerm","_toConsumableArray","value","_objectSpread","_defineProperty","icon","_jsx","CheckBoxOutlineBlankIcon","fontSize","checkedIcon","CheckBoxIcon","submitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","tmpPermissions","_yield$axios$post","data","wrap","_context","prev","next","preventDefault","map","p","push","axios","sent","status","message","t0","stop","_x","apply","arguments","useEffect","_Fragment","children","Stack","width","margin","alignItems","_jsxs","Paper","sx","display","justifyContent","flexDirection","bgcolor","borderRadius","elevation","Typography","variant","align","fontWeight","mb","color","Grid","container","component","onSubmit","SingleInput","labelText","inputType","inputName","inputValue","onChangeHandler","labelInputId","requiredTrue","placeholderText","mt","htmlFor","item","xl","lg","md","sm","xs","fontFamily","required","onChange","id","height","outline","border","paddingX","Autocomplete","multiple","padding","paddingLeft","options","subadminPermission","disableCloseOnSelect","getOptionLabel","b","event","renderOption","props","option","_ref2","selected","style","background","Checkbox","marginRight","checked","renderInput","params","TextField","placeholder","textAlign","Button","disableElevation","type","size","fullWidth","NavLink","to","helperText","rows","showPassword","setShowPassword","paddingRight","position","IconButton","onClick","show","right","VisibilityOff","Visibility","resize","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","createSvgIcon"],"sourceRoot":""}