{"version":3,"file":"static/js/891.29f5a99e.chunk.js","mappings":"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","sources":["screen/StickersModal.js","screen/TemplatePreview/TemplateEdit.js","url.js"],"sourcesContent":["import { Box, Menu, MenuItem, Modal, Stack, Typography } from \"@mui/material\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { DataContext } from \"../AppContext\";\r\nimport axios from \"axios\";\r\n\r\nconst StickersModal = ({ open, handleClose, addStickers }) => {\r\n   const [stickersData, setStickersData] = useState([]);\r\n   const { snackbar } = useContext(DataContext);\r\n\r\n   const getStickers = async () => {\r\n      try {\r\n         const { data } = await axios.get(\"template/stickers\");\r\n         setStickersData(data.stickers);\r\n      } catch (error) {\r\n         snackbar(\"error\", error.message);\r\n      }\r\n   };\r\n\r\n   \r\n   useEffect(() => {\r\n      getStickers();\r\n   }, []);\r\n\r\n   const style = {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n      width: { xs: \"85%\", sm: \"400px\" },\r\n      bgcolor: \"white\",\r\n      boxShadow: 24,\r\n      p: { xs: 2, sm: 4 },\r\n      outline: \"none\",\r\n      height: \"60vh\",\r\n      boxSizing: \"border-box\",\r\n      \"& img\": {\r\n         boxShadow: \"2px 5px 5px grey\",\r\n         width: \"70px\",\r\n         height: \"70px\",\r\n      },\r\n   };\r\n\r\n   return (\r\n      <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\r\n         <Box sx={style}>\r\n            <Typography variant=\"h5\" fontSize={\"20px\"} fontWeight={\"800\"} textAlign={\"center\"}>\r\n               Select sticker\r\n            </Typography>\r\n            <Stack mt={2} direction={\"row\"} flexWrap={\"wrap\"} overflow={\"auto\"}>\r\n               {stickersData?.map((stkr, index) => {\r\n                  \r\n                 return <MenuItem key={index}\r\n\r\n                     onClick={(e) => {\r\n                        handleClose();\r\n                        addStickers(e);\r\n                     }}\r\n                     value={`/images/getImage?path=/${stkr?.image}`}>\r\n                     <img alt=\"image\" src={`/images/getImage?path=/${stkr?.image}`} />\r\n                  </MenuItem>;\r\n               })}\r\n            </Stack>\r\n         </Box>\r\n      </Modal>\r\n   );\r\n};\r\n\r\nexport default StickersModal;\r\n","import {\r\n  Grid,\r\n  Button,\r\n  List,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Stack,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  IconButton,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport { FabricJSCanvas, useFabricJSEditor } from \"fabricjs-react\";\r\nimport { fabric } from \"fabric\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\r\nimport { Buffer } from \"buffer\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport InsertPhotoIcon from \"@mui/icons-material/InsertPhoto\";\r\nimport { TbTextRecognition } from \"react-icons/tb\";\r\nimport { FaRegObjectGroup } from \"react-icons/fa\";\r\nimport { FaRegObjectUngroup } from \"react-icons/fa\";\r\nimport { BsLayerBackward } from \"react-icons/bs\";\r\nimport { BsLayerForward } from \"react-icons/bs\";\r\nimport { ImMakeGroup } from \"react-icons/im\";\r\n// import InterestsIcon from \"@mui/icons-material/Interests\";// icon for add shapes\r\nimport ExtensionIcon from \"@mui/icons-material/Extension\";\r\nimport FormatBoldIcon from \"@mui/icons-material/FormatBold\";\r\nimport FormatItalicIcon from \"@mui/icons-material/FormatItalic\";\r\nimport FormatUnderlinedIcon from \"@mui/icons-material/FormatUnderlined\";\r\nimport StrikethroughSIcon from \"@mui/icons-material/StrikethroughS\";\r\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\";\r\nimport WallpaperIcon from \"@mui/icons-material/Wallpaper\";\r\nimport StickersModal from \"../StickersModal\";\r\nimport { useContext } from \"react\";\r\nimport { DataContext } from \"../../AppContext\";\r\nimport { url } from \"../../url\";\r\n\r\nconst TemplateEdit = () => {\r\n  const { snackbar } = useContext(DataContext);\r\n  const [allImages, setAllImages] = useState([]);\r\n  const [color, setColor] = useState(\"\");\r\n  const { editor, onReady, selectedObjects } = useFabricJSEditor();\r\n  const [data, setData] = useState();\r\n  const [templateData, setTemplateData] = useState();\r\n  const [addStickersModal, setAddStickersModal] = useState(false);\r\n  const { templateId } = useParams();\r\n  const [templateJson, setTemplateJson] = useState();\r\n  const [selectedFont, setSelectedFont] = useState(\"Pinyon Script\");\r\n  const fonts = [\r\n    \"Sacramento\",\r\n    \"Parisienne\",\r\n    \"Montserrat\",\r\n    \"Pinyon Script\",\r\n    \"Arial\",\r\n    \"Helvetica\",\r\n  ];\r\n\r\n  const navigate = useNavigate();\r\n  // ===========👇 Add background IMAGE👇  ===================\r\n  const setBackgroundImage = (e) => {\r\n    const reader = new FileReader();\r\n    setAllImages([...allImages, e.target.files[0]]);\r\n    // set background image options\r\n    var bgImgOptions = {\r\n      // set the background color to white\r\n      backgroundColor: \"red\",\r\n      // set the scaling mode to \"cover\"\r\n      backgroundScaleMode: \"cover\",\r\n    };\r\n    // load the background image\r\n    reader.onload = function (event) {\r\n      var imgObj = new Image();\r\n      imgObj.crossOrigin = \"Anonymous\";\r\n      imgObj.src = event.target.result;\r\n      imgObj.onload = function () {\r\n        var image = new fabric.Image(imgObj);\r\n        image.name = e.target.files[0].name;\r\n        // set the image as the background of the canvas\r\n        editor?.canvas?.setBackgroundImage(\r\n          image,\r\n          editor.canvas.renderAll.bind(editor.canvas),\r\n          bgImgOptions\r\n        );\r\n      };\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n  // ============👆Add background IMAGE👆   =================\r\n  // ==================👇 dynamically getting canvas height and width👇  =========================\r\n  let canvasEl = document.querySelector(\".canvas-container\");\r\n  let height = canvasEl?.clientHeight;\r\n  let width = canvasEl?.clientWidth;\r\n\r\n  // ===========================================\r\n\r\n  // ========== Stickers modal ============\r\n  const toggleStickersModal = () => {\r\n    setAddStickersModal(!addStickersModal);\r\n  };\r\n  // ========== For Image Upload ============\r\n\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n\r\n  console.log(\"id...\", id);\r\n\r\n  const templateDetails = useSelector((state) => state.templateData);\r\n  // const { template, loading, error } = templateDetails;\r\n  console.log(\"template data\", templateDetails);\r\n\r\n  // =================== Ading Text Fuc\r\n  const addText = () => {\r\n    const object = new fabric.IText(\"Text Message\", {\r\n      fontFamily: \"Helvetica\",\r\n      fontSize: 36,\r\n      left: width / 2,\r\n      top: height / 2,\r\n    });\r\n    editor.canvas.add(object);\r\n  };\r\n\r\n  // ========= THis Fuc For Changing TExt Color\r\n\r\n  const changeColor = (e) => {\r\n    setColor(e.target.value);\r\n    console.log(e.target.value);\r\n    const o = editor?.canvas?.getActiveObject();\r\n    o.set(\"fill\", e.target.value);\r\n    editor?.setStrokeColor(e.target.value);\r\n    editor?.canvas.renderAll();\r\n  };\r\n\r\n  //   ===========groupselected object to single group ====\r\n  const groupSelectedLayers = () => {\r\n    editor.canvas.getActiveObject().toGroup();\r\n    editor.canvas.renderAll();\r\n  };\r\n  // ====================================================\r\n  // ===============================================\r\n  // Function to group all the polyline objects into single object\r\n  function groupAllLayers() {\r\n    // Get all the objects as selection\r\n    var sel = new fabric.ActiveSelection(editor.canvas.getObjects(), {\r\n      canvas: editor.canvas,\r\n    });\r\n\r\n    // Make the objects active\r\n    editor.canvas.setActiveObject(sel);\r\n\r\n    // Group the objects\r\n    let newGroup = editor.canvas.getActiveObject().toGroup();\r\n    editor.canvas.renderAll();\r\n  }\r\n  // =================send back=======================\r\n  const moveBackward = () => {\r\n    const myObject = editor.canvas.getActiveObject();\r\n    editor.canvas.sendBackwards(myObject);\r\n    editor.canvas.discardActiveObject();\r\n  };\r\n  // =====================================\r\n\r\n  //   ============bring to top =============\r\n  const bringToTop = () => {\r\n    const myObject = editor.canvas.getActiveObject();\r\n    editor.canvas.bringToFront(myObject);\r\n    editor.canvas.renderAll();\r\n  };\r\n  // =====================================\r\n  //   ==================ungroup itetms ================\r\n  const unGroup = () => {\r\n    //  let items = groupCanvas._objects;\r\n    let newItems = editor.canvas.getActiveObject();\r\n    let items = newItems._objects;\r\n    newItems._restoreObjectsState();\r\n    editor.canvas.remove(newItems);\r\n    for (let i = 0; i < items.length; i++) {\r\n      editor.canvas.add(items[i]);\r\n    }\r\n\r\n    editor.canvas.renderAll();\r\n  };\r\n  // =====================================================\r\n  // ========add stickers =======================\r\n  const addStickers = (e) => {\r\n    fabric.Image.fromURL(\r\n      e.target.src,\r\n      (img) => {\r\n        img.scale(0.2);\r\n        img.name = decodeURI(\r\n          e.target.src.split(\"\\\\\")[e.target.src.split(\"\\\\\").length - 1]\r\n        );\r\n        editor.canvas.add(img);\r\n        editor.canvas.renderAll();\r\n      },\r\n      {\r\n        left: width / 2,\r\n        top: height / 2,\r\n      }\r\n    );\r\n  };\r\n  // ==============================================\r\n  //   ========================font family ===\r\n  const changeFont = (e) => {\r\n    console.log(\"font working>-\");\r\n    setSelectedFont(e.target.value);\r\n    const o = editor.canvas.getActiveObject().set(\"fontFamily\", e.target.value);\r\n    console.log(\"text=>\", o);\r\n    editor.canvas.renderAll();\r\n  };\r\n  // ========================================\r\n  //  ===👇 text style BOLD👇\r\n  const bold = () => {\r\n    if (editor?.canvas?.getActiveObject().fontWeight === \"normal\") {\r\n      editor?.canvas?.getActiveObject().set(\"fontWeight\", \"bold\");\r\n      editor?.canvas?.renderAll();\r\n    } else {\r\n      editor?.canvas?.getActiveObject().set(\"fontWeight\", \"normal\");\r\n      editor?.canvas?.renderAll();\r\n    }\r\n  };\r\n  // ===👆 text style BOLD👆\r\n  //  ===👇 text style ITALIC👇\r\n  const italic = () => {\r\n    if (editor?.canvas?.getActiveObject().fontStyle === \"normal\") {\r\n      editor?.canvas?.getActiveObject().set(\"fontStyle\", \"italic\");\r\n      editor?.canvas?.renderAll();\r\n    } else {\r\n      editor?.canvas?.getActiveObject().set(\"fontStyle\", \"normal\");\r\n      editor?.canvas?.renderAll();\r\n    }\r\n  };\r\n  // ===👆 text style ITALIC👆\r\n  //  ===👇 text style UNDERLINE👇\r\n  const underline = () => {\r\n    if (editor?.canvas?.getActiveObject().underline) {\r\n      editor?.canvas?.getActiveObject().set(\"underline\", false);\r\n      editor?.canvas?.renderAll();\r\n    } else {\r\n      editor?.canvas?.getActiveObject().set(\"underline\", true);\r\n      editor?.canvas?.renderAll();\r\n    }\r\n  };\r\n  // ===👆 text style UNDERLINE👆\r\n  //  ===👇 text style STRIKE THROUGH👇\r\n  const strike = () => {\r\n    if (editor?.canvas?.getActiveObject()) {\r\n      if (editor?.canvas?.getActiveObject().linethrough) {\r\n        editor?.canvas?.getActiveObject().set(\"linethrough\", false);\r\n        editor?.canvas?.renderAll();\r\n      } else {\r\n        editor?.canvas?.getActiveObject().set(\"linethrough\", true);\r\n        editor?.canvas?.renderAll();\r\n      }\r\n    } else {\r\n      alert(\"No object selected\");\r\n    }\r\n  };\r\n  // ===👆 text style STRIKE THROUGH👆\r\n  //   ========================font size ===\r\n  const changeFontSize = (e) => {\r\n    console.log(\"font working>-\");\r\n    const o = editor.canvas\r\n      .getActiveObject()\r\n      .set(\"fontSize\", e.target.value * 1);\r\n    editor.canvas.renderAll();\r\n  };\r\n  // ========================================\r\n  //  ===👇 Clone Selected object👇\r\n  const clone = () => {\r\n    editor?.canvas?.getActiveObject().clone((cloned) => {\r\n      cloned.set({\r\n        left: cloned.left + 10,\r\n        top: cloned.top + 10,\r\n        evented: true,\r\n      });\r\n      editor?.canvas?.add(cloned);\r\n    });\r\n  };\r\n  // ===👆 Clone Selected object👆\r\n  //====================To Convert JSON\r\n\r\n  const toJSON = () => {\r\n    const json = editor.canvas.toJSON();\r\n    const data = JSON.stringify(json);\r\n    console.log(data);\r\n    setData(data);\r\n  };\r\n  // =====save event template json ====\r\n  const saveTemplateData = () => {\r\n    const json = editor.canvas.toJSON();\r\n    const data = JSON.stringify(json);\r\n    const ext = \"png\";\r\n    const image = editor?.canvas?.toDataURL({\r\n      format: ext,\r\n      enableRetinaScaling: true,\r\n    });\r\n    console.log(\"data=>\", data, \"image Preview =>\", image);\r\n  };\r\n  // ==================================\r\n  //=================== This Fnc For Adding Extra Image\r\n  const onUploadImage = (e) => {\r\n    const reader = new FileReader();\r\n    setAllImages([...allImages, e.target.files[0]]);\r\n    console.log(e.target.files[0]);\r\n    reader.onload = function (event) {\r\n      var imgObj = new Image();\r\n      imgObj.crossOrigin = \"Anonymous\";\r\n      imgObj.src = event.target.result;\r\n      imgObj.onload = function () {\r\n        var image = new fabric.Image(imgObj);\r\n        editor.canvas.centerObject(image);\r\n        image.set({\r\n          scaleX: editor?.canvas.getWidth() / image.width / 2,\r\n          scaleY: editor?.canvas.getHeight() / image.height / 2,\r\n          top: 0,\r\n          left: 0,\r\n          srcFromAttribute: true,\r\n        });\r\n        image.name = e.target.files[0].name;\r\n        editor?.canvas.add(image);\r\n        editor?.canvas.renderAll();\r\n      };\r\n    };\r\n    reader.onerror = (err) => console.log(err);\r\n    reader.readAsDataURL(e.target.files[0]);\r\n\r\n    // console.log(\"clicked\");\r\n    // const image = e.target.files[0];\r\n    // if (image) {\r\n    //   setImageFunc(URL.createObjectURL(e.target.files[0]));\r\n    // }\r\n  };\r\n  // ======================\r\n  const setImageFunc = (imgUrl) => {\r\n    fabric.Image.fromURL(\r\n      imgUrl,\r\n      (img) => {\r\n        img.scale(0.2);\r\n\r\n        editor.canvas.add(img);\r\n        editor.canvas.renderAll();\r\n      },\r\n      { left: width / 2, top: height / 2 }\r\n    );\r\n  };\r\n  // ======================\r\n\r\n  //   ====load canvas from json =====\r\n  const loadCanvasFromJson = () => {\r\n    let object = new fabric.Canvas(\"canvas\");\r\n    console.log(templateData);\r\n    editor?.canvas.loadFromJSON(templateData);\r\n  };\r\n  // ==================================\r\n  // =================== This is YOur Handler + Image Downloader\r\n  const downloadImage = (e) => {\r\n    e.preventDefault();\r\n    const ext = \"png\";\r\n    const base64 = editor?.canvas?.toDataURL({\r\n      format: ext,\r\n      enableRetinaScaling: true,\r\n    });\r\n    const link = document.createElement(\"a\");\r\n    link.href = base64;\r\n    link.download = `Template_Example.${ext}`;\r\n    console.log(\"Running\", base64);\r\n    // dispatch(EditTemplate(base64));\r\n    // { THis link.Click For Dowload Editd Image , Whene You remove That Commit And that Image will Download}\r\n    link.click();\r\n  };\r\n\r\n  //   ============ This Fuc For Delete all deta in render in Fabric\r\n  const removeSelectedObject = () => {\r\n    if (selectedObjects[0] && selectedObjects[0].get(\"type\") === \"image\") {\r\n      setAllImages(\r\n        allImages.filter((file) => file.name !== selectedObjects[0].name)\r\n      );\r\n    }\r\n    editor?.canvas?.remove(editor?.canvas?.getActiveObject());\r\n    editor?.canvas?.renderAll();\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCanvasFromJson();\r\n  }, [templateData]);\r\n  // ================\r\n  // ===👇 Toolbar button 👇===\r\n  const ListItemButtonStyle = {\r\n    padding: \"5px 0px\",\r\n    transition: \"all 200ms ease\",\r\n    border: \"1px solid #E6E2E2\",\r\n    width: \"85px\",\r\n    maxWidth: \"85px\",\r\n    marginY: \"8px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    \"&:hover\": {\r\n      bgcolor: \"transparent\",\r\n      borderColor: \"#795DA8\",\r\n      \"& svg\": { color: \"#795DA8\" },\r\n      \"& span\": { color: \"#795DA8\" },\r\n    },\r\n    \"&:active\": { scale: \".9\" },\r\n  };\r\n  // ===👇 Toolbar button type 2 👇===\r\n\r\n  const ListItemButtonStyle2 = {\r\n    padding: \"0px\",\r\n    transition: \"all 200ms ease\",\r\n    // width: \"85px\",\r\n    marginY: \"8px\",\r\n    display: \"flex\",\r\n    \"& svg\": {\r\n      fontSize: \"25px\",\r\n      marginRight: \"5px\",\r\n    },\r\n    \"& span\": { fontWeight: \"500\" },\r\n    \"&:hover\": {\r\n      bgcolor: \"transparent\",\r\n      borderColor: \"#795DA8\",\r\n      \"& svg\": { color: \"#795DA8\" },\r\n      \"& span\": { color: \"#795DA8\" },\r\n    },\r\n    \"&:active\": { scale: \".9\" },\r\n  };\r\n  // ===👇 TEXT Toolbar button type 3 👇===\r\n\r\n  const ListItemButtonStyle3 = {\r\n    padding: \"0px\",\r\n    transition: \"all 200ms ease\",\r\n    marginY: \"8px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    \"& .MuiListItemIcon-root\": {\r\n      minWidth: \"\",\r\n    },\r\n    \"& svg\": {\r\n      fontSize: \"25px\",\r\n      marginRight: \"5px\",\r\n    },\r\n    \"&:hover\": {\r\n      bgcolor: \"transparent\",\r\n      borderColor: \"#795DA8\",\r\n      \"& svg\": { color: \"#795DA8\" },\r\n      \"& span\": { color: \"#795DA8\" },\r\n    },\r\n    \"&:active\": { scale: \".9\" },\r\n  };\r\n\r\n  const uploadImage = async (e) => {\r\n    try {\r\n      const formData = new FormData();\r\n      allImages.forEach((v) => {\r\n        formData.append(\"image\", v);\r\n      });\r\n      const res = await axios.post(\"/template/saveImage\", formData);\r\n      createPreview();\r\n      console.log(res);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // =======================================================\r\n  const createPreview = async () => {\r\n    const canvasPng = editor?.canvas.toDataURL({\r\n      format: \"png\",\r\n      // quality: 0.8,\r\n    });\r\n    function dataURLtoFile(dataurl, filename) {\r\n      const uint8Buffer = Buffer.from(dataurl.split(\",\")[1], \"base64\");\r\n      return new File([uint8Buffer], filename, { type: \"image/png\" });\r\n    }\r\n    // Usage example:\r\n    var file = dataURLtoFile(canvasPng, \"previewImage.png\");\r\n    saveTemplate(file);\r\n  };\r\n\r\n  async function saveTemplate(file) {\r\n    try {\r\n      fabric.Image.prototype.toObject = (function (toObject) {\r\n        return function () {\r\n          return fabric.util.object.extend(toObject.call(this), {\r\n            name: this.name,\r\n            src: `${url}/api/v1/admin/template/sendImage/${this.name}`,\r\n            crossOrigin: \"anonymous\",\r\n          });\r\n        };\r\n      })(fabric.Image.prototype.toObject);\r\n      const formData = new FormData();\r\n      formData.append(\"name\", \"badhiya template\");\r\n      formData.append(\"description\", \"arre bahut badhiya template\");\r\n      formData.append(\"templateJson\", JSON.stringify(editor?.canvas.toJSON()));\r\n      formData.append(\"previewImage\", file);\r\n      const response = await axios.patch(`/template/${templateId}`, formData);\r\n      editor.canvas.clear();\r\n      snackbar(response.data.status, response.data.message);\r\n      navigate(\"/admin/template-list\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  // ===========================================\r\n  const getTemplateJson = async () => {\r\n    try {\r\n      const { data } = await axios.get(`/template/${templateId}`);\r\n      setTemplateJson(data.template.templateJson);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    editor?.canvas?.setDimensions({ height: height, width: width });\r\n  }, [editor]);\r\n\r\n  useEffect(() => {\r\n    editor?.canvas.loadFromJSON(templateJson);\r\n  }, [templateJson]);\r\n  useEffect(() => {\r\n    getTemplateJson();\r\n  }, []);\r\n\r\n  // =======================================================\r\n  // =======================================================\r\n  // =======================================================\r\n  return (\r\n    <Box paddingX={\"10px\"} boxSizing={\"border-box\"}>\r\n      <Typography\r\n        variant=\"h1\"\r\n        align=\"center\"\r\n        fontWeight=\"800\"\r\n        fontSize={\"28px\"}\r\n        mb={2}\r\n        sx={{\r\n          color: \"#795da8\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        Edit Template\r\n      </Typography>\r\n      {editor?.canvas?.getActiveObject()?.type === \"i-text\" && (\r\n        <>\r\n          {/*  👇 TOOLS TO EDIT TEXT(VISIBLE WHEN TEXT IS SELECTED)  👇    */}\r\n          <Grid item mt={2} xs={12} overflow={\"auto\"}>\r\n            <Stack\r\n              direction={\"row\"}\r\n              alignItems={\"center\"}\r\n              justifyContent={\"center\"}\r\n              border={\"1px solid #E6E2E2\"}\r\n              paddingX={\"5px\"}\r\n              boxSizing={\"border-box\"}\r\n              width={\"100%\"}\r\n            >\r\n              {/*  👇 change font type button  👇    */}\r\n              <ListItemButton sx={{ ...ListItemButtonStyle3 }}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"font-family-select-label\">Fonts</InputLabel>\r\n                  <Select\r\n                    labelId=\"font-family-select-label\"\r\n                    id=\"font-family-select\"\r\n                    value={selectedFont}\r\n                    label=\"Font Family\"\r\n                    size=\"small\"\r\n                    onChange={changeFont}\r\n                  >\r\n                    {fonts?.map((font, index) => {\r\n                      return (\r\n                        <MenuItem key={index} value={font}>\r\n                          {font}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n              </ListItemButton>\r\n              {/* 👆 change font type button 👆   */}\r\n              {/*  👇 change font COLOR button  👇    */}\r\n              <ListItemButton\r\n                sx={{ ...ListItemButtonStyle3 }}\r\n                onClick={changeColor}\r\n              >\r\n                <input type=\"color\" onChange={changeColor} />\r\n              </ListItemButton>\r\n              {/* 👆 change font COLOR button 👆   */}\r\n              {/*  👇 Font Style BOLD  👇    */}\r\n              <ListItemButton sx={{ ...ListItemButtonStyle3 }} onClick={bold}>\r\n                <ListItemIcon>\r\n                  <FormatBoldIcon />\r\n                </ListItemIcon>\r\n              </ListItemButton>\r\n              {/* 👆 Font Style BOLD 👆   */}\r\n              {/*  👇 Font Style ITALIC  👇    */}\r\n              <ListItemButton sx={{ ...ListItemButtonStyle3 }} onClick={italic}>\r\n                <ListItemIcon>\r\n                  <FormatItalicIcon />\r\n                </ListItemIcon>\r\n              </ListItemButton>\r\n              {/* 👆 Font Style ITALIC 👆   */}\r\n              {/*  👇 Font Style UNDERLINE  👇    */}\r\n              <ListItemButton\r\n                sx={{ ...ListItemButtonStyle3 }}\r\n                onClick={underline}\r\n              >\r\n                <ListItemIcon>\r\n                  <FormatUnderlinedIcon />\r\n                </ListItemIcon>\r\n              </ListItemButton>\r\n              {/* 👆 Font Style UNDERLINE 👆   */}\r\n              {/*  👇 Font Style STRIKETHROUGH  👇    */}\r\n              <ListItemButton sx={{ ...ListItemButtonStyle3 }} onClick={strike}>\r\n                <ListItemIcon>\r\n                  <StrikethroughSIcon />\r\n                </ListItemIcon>\r\n              </ListItemButton>\r\n              {/* 👆 Font Style STRIKETHROUGH 👆   */}\r\n            </Stack>\r\n          </Grid>\r\n          {/* 👆 TOOLS TO EDIT TEXT(VISIBLE WHEN TEXT IS SELECTED) 👆   */}\r\n        </>\r\n      )}\r\n\r\n      <Grid container sx={{ width: \"100%\" }}>\r\n        {/*  👇 edit tools container  👇    */}\r\n\r\n        <Grid\r\n          item\r\n          sm={2}\r\n          xs={12}\r\n          boxSizing={\"border-box\"}\r\n          sx={{\r\n            // padding: \"20px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            boxSizing: \"border-box\",\r\n            order: { xs: 1, sm: 0 },\r\n            // border: \"1px solid green\",\r\n          }}\r\n        >\r\n          <Stack\r\n            sx={{\r\n              maxHeight: \"450px\",\r\n              overflow: \"auto\",\r\n              width: \"100%\",\r\n              boxSizing: \"border-box\",\r\n              \"&::-webkit-scrollbar\": {\r\n                width: \"8px\",\r\n              },\r\n              \"&::-webkit-scrollbar-track\": {\r\n                background: \"#CEC5DC\",\r\n                borderRadius: \"4px\",\r\n              },\r\n              \"&::-webkit-scrollbar-thumb\": {\r\n                background: \"#795DA8\",\r\n                borderRadius: \"4px\",\r\n              },\r\n              \"&::-webkit-scrollbar-thumb:hover\": {\r\n                background: \"#5a3991\",\r\n                borderRadius: \"4px\",\r\n              },\r\n            }}\r\n          >\r\n            <List\r\n              disablePadding\r\n              sx={{\r\n                width: { xs: \"1190px\", sm: \"100%\" },\r\n                display: \"flex\",\r\n                flexDirection: { xs: \"row\", sm: \"column\" },\r\n                justifyContent: { xs: \"space-around\", sm: \"center\" },\r\n                alignItems: \"center\",\r\n                boxSizing: \"border-box\",\r\n                \"& .MuiListItemIcon-root\": {\r\n                  minWidth: \"\",\r\n                },\r\n              }}\r\n            >\r\n              {/*  👇==== Add Background Image ====  👇    */}\r\n\r\n              <ListItemButton\r\n                component={\"label\"}\r\n                sx={{\r\n                  ...ListItemButtonStyle,\r\n                }}\r\n              >\r\n                <ListItemIcon\r\n                  sx={{ color: \"#667087\", \"& svg\": { fontSize: \"50px\" } }}\r\n                >\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    style={{ display: \"none\" }}\r\n                    type=\"file\"\r\n                    onChange={setBackgroundImage}\r\n                  />\r\n                  <WallpaperIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primaryTypographyProps={{\r\n                    sx: {\r\n                      color: \"black\",\r\n                      fontSize: \"12px\",\r\n                      fontFamily: \"Montserrat\",\r\n                      textAlign: \"center\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Add Background\r\n                </ListItemText>\r\n              </ListItemButton>\r\n\r\n              {/* 👆 ==== Add Background Image ==== 👆   */}\r\n              {/*  👇==== Add Photo ====  👇    */}\r\n\r\n              <ListItemButton\r\n                component={\"label\"}\r\n                sx={{\r\n                  ...ListItemButtonStyle,\r\n                }}\r\n              >\r\n                <ListItemIcon\r\n                  sx={{ color: \"#667087\", \"& svg\": { fontSize: \"50px\" } }}\r\n                >\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    style={{ display: \"none\" }}\r\n                    type=\"file\"\r\n                    onChange={onUploadImage}\r\n                  />\r\n                  <InsertPhotoIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primaryTypographyProps={{\r\n                    sx: {\r\n                      color: \"black\",\r\n                      fontSize: \"12px\",\r\n                      fontFamily: \"Montserrat\",\r\n                      textAlign: \"center\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Image\r\n                </ListItemText>\r\n              </ListItemButton>\r\n\r\n              {/* 👆 ==== Add Photo ==== 👆   */}\r\n\r\n              {/*  👇==== Add text ====  👇    */}\r\n              <ListItemButton sx={{ ...ListItemButtonStyle }} onClick={addText}>\r\n                <ListItemIcon\r\n                  sx={{ color: \"#667087\", \"& svg\": { fontSize: \"50px\" } }}\r\n                >\r\n                  <TbTextRecognition />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primaryTypographyProps={{\r\n                    sx: {\r\n                      color: \"black\",\r\n                      fontSize: \"12px\",\r\n                      fontFamily: \"Montserrat\",\r\n                      textAlign: \"center\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Text\r\n                </ListItemText>\r\n              </ListItemButton>\r\n              {/* 👆 ==== Add text ==== 👆   */}\r\n              {/*  👇==== Stickers ====  👇    */}\r\n              <ListItemButton\r\n                sx={{ ...ListItemButtonStyle }}\r\n                onClick={toggleStickersModal}\r\n              >\r\n                <ListItemIcon\r\n                  sx={{ color: \"#667087\", \"& svg\": { fontSize: \"50px\" } }}\r\n                >\r\n                  <ExtensionIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primaryTypographyProps={{\r\n                    sx: {\r\n                      color: \"black\",\r\n                      fontSize: \"12px\",\r\n                      fontFamily: \"Montserrat\",\r\n                      textAlign: \"center\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Stickers\r\n                </ListItemText>\r\n              </ListItemButton>\r\n              <StickersModal\r\n                open={addStickersModal}\r\n                handleClose={toggleStickersModal}\r\n                addStickers={addStickers}\r\n              />\r\n\r\n              {/* 👆 ==== Stickers ==== 👆   */}\r\n              <Stack\r\n                mt={1}\r\n                alignItems={\"start\"}\r\n                direction={{ xs: \"row\", sm: \"column\" }}\r\n                width={{ xs: \"890px\", sm: \"100%\" }}\r\n              >\r\n                {/*  👇==== Group Selected ====  👇    */}\r\n                <ListItemButton\r\n                  sx={{ ...ListItemButtonStyle2 }}\r\n                  onClick={groupSelectedLayers}\r\n                >\r\n                  <ListItemIcon sx={{ color: \"#667087\" }}>\r\n                    <ImMakeGroup />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primaryTypographyProps={{\r\n                      sx: {\r\n                        color: \"black\",\r\n                        fontSize: \"12px\",\r\n                        fontFamily: \"Montserrat\",\r\n                        textAlign: \"center\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    Group Selected\r\n                  </ListItemText>\r\n                </ListItemButton>\r\n\r\n                {/* 👆 ==== Group Selected ==== 👆   */}\r\n                {/*  👇==== GroupAll ====  👇    */}\r\n                <ListItemButton\r\n                  sx={{ ...ListItemButtonStyle2 }}\r\n                  onClick={groupAllLayers}\r\n                >\r\n                  <ListItemIcon sx={{ color: \"#667087\" }}>\r\n                    <FaRegObjectGroup />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primaryTypographyProps={{\r\n                      sx: {\r\n                        color: \"black\",\r\n                        fontSize: \"12px\",\r\n                        fontFamily: \"Montserrat\",\r\n                        textAlign: \"center\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    Group ALL\r\n                  </ListItemText>\r\n                </ListItemButton>\r\n\r\n                {/* 👆 ==== GroupAll ==== 👆   */}\r\n                {/*  👇==== UnGroup ====  👇    */}\r\n                <ListItemButton\r\n                  sx={{ ...ListItemButtonStyle2 }}\r\n                  onClick={unGroup}\r\n                >\r\n                  <ListItemIcon\r\n                    sx={{ color: \"#667087\", \"& svg\": { fontSize: \"50px\" } }}\r\n                  >\r\n                    <FaRegObjectUngroup />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primaryTypographyProps={{\r\n                      sx: {\r\n                        color: \"black\",\r\n                        fontSize: \"12px\",\r\n                        fontFamily: \"Montserrat\",\r\n                        textAlign: \"center\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    Ungroup\r\n                  </ListItemText>\r\n                </ListItemButton>\r\n\r\n                {/* 👆 ==== UnGroup ==== 👆   */}\r\n                {/*  👇==== Bring To Top ====  👇    */}\r\n                <ListItemButton\r\n                  onClick={bringToTop}\r\n                  sx={{ ...ListItemButtonStyle2 }}\r\n                >\r\n                  <ListItemIcon sx={{ color: \"#667087\" }}>\r\n                    <BsLayerForward />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primaryTypographyProps={{\r\n                      sx: {\r\n                        color: \"black\",\r\n                        fontSize: \"12px\",\r\n                        fontWeight: \"800\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    Bring To Top\r\n                  </ListItemText>\r\n                </ListItemButton>\r\n\r\n                {/* 👆 ==== Bring To Top ==== 👆   */}\r\n                {/*  👇==== move layer back  ====  👇    */}\r\n                <ListItemButton\r\n                  onClick={moveBackward}\r\n                  sx={{ ...ListItemButtonStyle2 }}\r\n                >\r\n                  <ListItemIcon sx={{ color: \"#667087\" }}>\r\n                    <BsLayerBackward />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primaryTypographyProps={{\r\n                      sx: {\r\n                        color: \"black\",\r\n                        fontSize: \"12px\",\r\n                        fontWeight: \"800\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    Move to back\r\n                  </ListItemText>\r\n                </ListItemButton>\r\n                {/* 👆 ==== move layer back ==== 👆   */}\r\n                {/*  👇==== Clone Object  ====  👇    */}\r\n                <ListItemButton\r\n                  onClick={clone}\r\n                  sx={{ ...ListItemButtonStyle2 }}\r\n                >\r\n                  <ListItemIcon sx={{ color: \"#667087\" }}>\r\n                    <FileCopyIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primaryTypographyProps={{\r\n                      sx: {\r\n                        color: \"black\",\r\n                        fontSize: \"12px\",\r\n                        fontWeight: \"800\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    Clone\r\n                  </ListItemText>\r\n                </ListItemButton>\r\n                {/* 👆 ==== Clone Object ==== 👆   */}\r\n                {/*  👇==== Remove ====  👇    */}\r\n                <ListItemButton\r\n                  sx={{ ...ListItemButtonStyle2 }}\r\n                  onClick={removeSelectedObject}\r\n                >\r\n                  <ListItemIcon\r\n                    sx={{ color: \"#667087\", \"& svg\": { fontSize: \"50px\" } }}\r\n                  >\r\n                    <DeleteIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primaryTypographyProps={{\r\n                      sx: {\r\n                        color: \"black\",\r\n                        fontSize: \"12px\",\r\n                        fontFamily: \"Montserrat\",\r\n                        textAlign: \"center\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    Remove\r\n                  </ListItemText>\r\n                </ListItemButton>\r\n                {/* 👆 ==== Remove ==== 👆   */}\r\n              </Stack>\r\n            </List>\r\n          </Stack>\r\n          <Button\r\n            fullWidth\r\n            disableElevation\r\n            variant=\"contained\"\r\n            //  onClick={downloadImage}\r\n            // onClick={toJSON}\r\n            onClick={uploadImage}\r\n            sx={{ color: \"#fff\", mt: 2 }}\r\n          >\r\n            Update\r\n          </Button>\r\n          <Button\r\n            fullWidth\r\n            disableElevation\r\n            variant=\"outlined\"\r\n            onClick={() => navigate(\"/admin/template-list\")}\r\n            sx={{ mt: 1 }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </Grid>\r\n        {/* 👆 edit tools container 👆   */}\r\n        {/*  👇 image container  👇    */}\r\n        <Grid\r\n          item\r\n          xl={10}\r\n          lg={10}\r\n          md={10}\r\n          sm={10}\r\n          xs={12}\r\n          sx={{\r\n            boxSizing: \"border-box\",\r\n            //  padding: \"5px\",\r\n            width: \"100%\",\r\n            height: \"70vh\",\r\n            order: 0,\r\n            paddingX: \"5px\",\r\n            \"& .fabCanvas\": {\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n              border: \"1px solid #795DA8\",\r\n              boxSizing: \"border-box\",\r\n            },\r\n            \"& .upper-canvas\": {\r\n              background: \"none\",\r\n            },\r\n          }}\r\n        >\r\n          <FabricJSCanvas className=\"fabCanvas\" onReady={onReady} />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TemplateEdit;\r\n\r\n// ***********************************************\r\n// ***********************************************\r\n// ***********************************************\r\n// ***********************************************\r\n// ***********************************************\r\n// ***********************************************\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { fabric } from \"fabric\";\r\n// import { FabricJSCanvas, useFabricJSEditor } from \"fabricjs-react\";\r\n// import axios from \"axios\";\r\n// import { Buffer } from \"buffer\";\r\n// import { useParams } from \"react-router-dom\";\r\n\r\n// const TemplateEdit = () => {\r\n//   const { editor, onReady, selectedObjects } = useFabricJSEditor();\r\n//   const [allImages, setAllImages] = useState([]);\r\n//   const [templateJson, setTemplateJson] = useState();\r\n//   const { templateId } = useParams();\r\n//   const onAddCircle = () => {\r\n//     editor?.addCircle();\r\n//   };\r\n//   const onAddRectangle = () => {\r\n//     const rectangle = new fabric.Rect({\r\n//       left: 100,\r\n//       top: 100,\r\n//       width: 200,\r\n//       height: 100,\r\n//     });\r\n//     editor?.canvas?.add(rectangle);\r\n//   };\r\n//   const deleteAll = () => {\r\n//     setAllImages([]);\r\n//     editor?.deleteAll();\r\n//   };\r\n//   const setFillColor = (e) => {\r\n//     editor?.setFillColor(e.target.value);\r\n//   };\r\n\r\n//   const addImage = (e) => {\r\n//     const reader = new FileReader();\r\n//     console.log(e.target.files[0]);\r\n//     setAllImages([...allImages, e.target.files[0]]);\r\n//     reader.onload = function (event) {\r\n//       var imgObj = new Image();\r\n//       imgObj.src = event.target.result;\r\n//       imgObj.setAttribute(\"crossOrigin\", \"anonymous\");\r\n//       imgObj.onload = function () {\r\n//         var image = new fabric.Image(imgObj);\r\n//         editor.canvas.centerObject(image);\r\n//         image.set({\r\n//           scaleX: editor?.canvas.getWidth() / image.width / 2,\r\n//           scaleY: editor?.canvas.getHeight() / image.height / 2,\r\n//           top: 0,\r\n//           left: 0,\r\n//           srcFromAttribute: true,\r\n//         });\r\n//         image.name = e.target.files[0].name;\r\n//         editor.canvas.add(image);\r\n//         editor?.canvas.renderAll();\r\n//       };\r\n//     };\r\n//     reader.readAsDataURL(e.target.files[0]);\r\n//   };\r\n//   const addText = () => {\r\n//     const text = new fabric.Textbox(\"text\", {\r\n//       editable: true,\r\n//     });\r\n//     editor?.canvas?.add(text);\r\n//   };\r\n//   const layerDown = () => {\r\n//     editor?.canvas?.sendBackwards(selectedObjects[0]);\r\n//     editor?.canvas?.sendToBack(selectedObjects[0]);\r\n//     editor?.canvas.discardActiveObject();\r\n//   };\r\n//   const layerUp = () => {\r\n//     console.log(selectedObjects);\r\n//     editor?.canvas?.bringForward(selectedObjects[0]);\r\n//     editor?.canvas?.bringToFront(selectedObjects[0]);\r\n//     editor?.canvas.discardActiveObject();\r\n//   };\r\n//   const deleteSelected = () => {\r\n//     console.log(selectedObjects[0].get(\"type\") === \"image\");\r\n//     if (selectedObjects[0] && selectedObjects[0].get(\"type\") === \"image\") {\r\n//       console.log(selectedObjects[0].name);\r\n//       setAllImages(\r\n//         allImages.filter((file) => file.name !== selectedObjects[0].name)\r\n//       );\r\n//     }\r\n//     editor?.deleteSelected();\r\n//   };\r\n//   const setBackgroundImage = (e) => {\r\n//     const reader = new FileReader();\r\n//     setAllImages([...allImages, e.target.files[0]]);\r\n//     // set background image options\r\n//     var bgImgOptions = {\r\n//       // set the background color to white\r\n//       backgroundColor: \"red\",\r\n//       // set the scaling mode to \"cover\"\r\n//       backgroundScaleMode: \"cover\",\r\n//     };\r\n//     // load the background image\r\n//     reader.onload = function (event) {\r\n//       var imgObj = new Image();\r\n//       imgObj.src = event.target.result;\r\n//       imgObj.setAttribute(\"crossOrigin\", \"anonymous\");\r\n//       imgObj.onload = function () {\r\n//         var image = new fabric.Image(imgObj);\r\n//         image.name = e.target.files[0].name;\r\n//         // set the image as the background of the canvas\r\n//         editor?.canvas?.setBackgroundImage(\r\n//           image,\r\n//           editor.canvas.renderAll.bind(editor.canvas),\r\n//           bgImgOptions\r\n//         );\r\n//       };\r\n//     };\r\n//     reader.readAsDataURL(e.target.files[0]);\r\n//   };\r\n//   const getTemplateJson = async () => {\r\n//     try {\r\n//       const { data } = await axios.get(`/template/${templateId}`);\r\n//       setTemplateJson(data.template.templateJson);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n//   useEffect(() => {\r\n//     editor?.canvas?.setDimensions({ height: 600, width: 900 });\r\n//   }, [editor]);\r\n\r\n//   useEffect(() => {\r\n//     editor?.canvas.loadFromJSON(templateJson);\r\n//   }, [templateJson]);\r\n//   useEffect(() => {\r\n//     getTemplateJson();\r\n//   }, []);\r\n//   async function saveTemplate(file) {\r\n//     try {\r\n//       fabric.Image.prototype.toObject = (function (toObject) {\r\n//         return function () {\r\n//           return fabric.util.object.extend(toObject.call(this), {\r\n//             name: this.name,\r\n//             src: `http://192.168.29.249:8085/template/sendImage/${this.name}`,\r\n//           });\r\n//         };\r\n//       })(fabric.Image.prototype.toObject);\r\n//       const formData = new FormData();\r\n//       formData.append(\"name\", \"badhiya template\");\r\n//       formData.append(\"description\", \"arre bahut badhiya template hai\");\r\n//       formData.append(\"templateJson\", JSON.stringify(editor?.canvas.toJSON()));\r\n//       formData.append(\"previewImage\", file);\r\n//       console.log(formData);\r\n//       const response = await axios.patch(`/template/${templateId}`, formData);\r\n//       console.log(editor?.canvas.toJSON());\r\n//       console.log(response);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   }\r\n//   const uploadImage = async (e) => {\r\n//     try {\r\n//       const formData = new FormData();\r\n//       allImages.forEach((v) => {\r\n//         console.log(v);\r\n//         formData.append(\"image\", v);\r\n//       });\r\n//       const res = await axios.post(\"/template/saveImage\", formData);\r\n//       console.log(res);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n//   const getPreviewImage = async () => {\r\n//     const canvasPng = editor?.canvas.toDataURL({\r\n//       format: \"png\",\r\n//     });\r\n\r\n//     // Making file object from the base64 string\r\n//     function dataURLtoFile(dataurl, filename) {\r\n//       const uint8Buffer = Buffer.from(dataurl.split(\",\")[1], \"base64\");\r\n//       return new File([uint8Buffer], filename, { type: \"image/png\" });\r\n//     }\r\n\r\n//     // Usage example:\r\n//     var file = dataURLtoFile(canvasPng, \"previewImage.png\");\r\n//     saveTemplate(file);\r\n//   };\r\n//   return (\r\n//     <div>\r\n//       <button onClick={onAddCircle}>Add circle</button>\r\n//       <button onClick={onAddRectangle}>Add Rectangle</button>\r\n//       <button onClick={deleteAll}>Delete all</button>\r\n//       <button onClick={addText}>Add Text</button>\r\n//       <button onClick={layerDown}>Layer Down</button>\r\n//       <button onClick={layerUp}>Layer Up</button>\r\n//       <button onClick={deleteSelected}>Delete</button>\r\n//       <button onClick={uploadImage}>Upload Images</button>\r\n//       <button onClick={getPreviewImage}>Preview Image</button>\r\n//       <label htmlFor=\"img\">Add Image</label>\r\n//       <input\r\n//         type=\"file\"\r\n//         id=\"img\"\r\n//         accept=\"image/png, image/jpeg ,image/jpg\"\r\n//         onChange={addImage}\r\n//       ></input>\r\n//       <label htmlFor=\"img\">Add Background Image</label>\r\n//       <input\r\n//         type=\"file\"\r\n//         id=\"img\"\r\n//         accept=\"image/png, image/jpeg ,image/jpg\"\r\n//         crossOrigin=\"anonymous\"\r\n//         onChange={setBackgroundImage}\r\n//       ></input>\r\n//       <label htmlFor=\"favcolor\">Select your favorite color:</label>\r\n//       <input\r\n//         type=\"color\"\r\n//         id=\"favcolor\"\r\n//         name=\"favcolor\"\r\n//         // value=\r\n//         onChange={setFillColor}\r\n//       ></input>\r\n//       <FabricJSCanvas className=\"sample-canvas\" onReady={onReady} />\r\n//     </div>\r\n//   );\r\n// };\r\n// export default TemplateEdit;\r\n","export const url = \"http://localhost:8085\";\r\n"],"names":["_ref","open","handleClose","addStickers","_useState","useState","_useState2","_slicedToArray","stickersData","setStickersData","snackbar","useContext","DataContext","getStickers","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","sent","stickers","t0","message","stop","apply","arguments","useEffect","_jsx","Modal","onClose","children","_jsxs","Box","sx","position","top","left","transform","width","xs","sm","bgcolor","boxShadow","p","outline","height","boxSizing","Typography","variant","fontSize","fontWeight","textAlign","Stack","mt","direction","flexWrap","overflow","map","stkr","index","MenuItem","onClick","e","value","concat","image","alt","src","_editor$canvas32","_editor$canvas32$getA","allImages","setAllImages","_useState3","_useState4","setColor","_useFabricJSEditor","useFabricJSEditor","editor","onReady","selectedObjects","_useState5","_useState6","_useState7","_useState8","templateData","_useState9","_useState10","addStickersModal","setAddStickersModal","templateId","useParams","_useState11","_useState12","templateJson","setTemplateJson","_useState13","_useState14","selectedFont","setSelectedFont","fonts","navigate","useNavigate","canvasEl","document","querySelector","clientHeight","clientWidth","toggleStickersModal","id","useDispatch","console","log","templateDetails","useSelector","state","changeColor","_editor$canvas2","target","canvas","getActiveObject","set","setStrokeColor","renderAll","fabric","loadFromJSON","ListItemButtonStyle","padding","transition","border","maxWidth","marginY","display","flexDirection","borderColor","color","scale","ListItemButtonStyle2","marginRight","ListItemButtonStyle3","justifyContent","minWidth","uploadImage","formData","res","FormData","forEach","v","append","createPreview","_x","_callee2","canvasPng","dataURLtoFile","_context2","dataurl","filename","uint8Buffer","Buffer","split","File","type","toDataURL","format","saveTemplate","_x2","_saveTemplate","_callee4","file","response","_context4","toObject","call","this","name","url","crossOrigin","JSON","stringify","toJSON","clear","status","getTemplateJson","_ref3","_callee3","_data","_context3","template","_editor$canvas31","setDimensions","paddingX","align","mb","_Fragment","Grid","item","alignItems","ListItemButton","_objectSpread","FormControl","fullWidth","InputLabel","Select","labelId","label","size","onChange","o","font","_editor$canvas3","_editor$canvas4","_editor$canvas5","_editor$canvas6","_editor$canvas7","ListItemIcon","FormatBoldIcon","_editor$canvas8","_editor$canvas9","_editor$canvas10","_editor$canvas11","_editor$canvas12","fontStyle","FormatItalicIcon","_editor$canvas13","_editor$canvas14","_editor$canvas15","_editor$canvas16","_editor$canvas17","underline","FormatUnderlinedIcon","_editor$canvas18","_editor$canvas19","_editor$canvas20","_editor$canvas21","_editor$canvas22","_editor$canvas23","linethrough","alert","StrikethroughSIcon","container","order","maxHeight","background","borderRadius","List","disablePadding","component","accept","style","reader","FileReader","_toConsumableArray","files","bgImgOptions","backgroundColor","backgroundScaleMode","onload","event","imgObj","Image","result","_editor$canvas","setBackgroundImage","bind","readAsDataURL","WallpaperIcon","ListItemText","primaryTypographyProps","fontFamily","centerObject","scaleX","getWidth","scaleY","getHeight","srcFromAttribute","add","onerror","err","InsertPhotoIcon","object","TbTextRecognition","ExtensionIcon","StickersModal","img","decodeURI","length","toGroup","ImMakeGroup","sel","getObjects","setActiveObject","FaRegObjectGroup","newItems","items","_objects","_restoreObjectsState","remove","i","FaRegObjectUngroup","myObject","bringToFront","BsLayerForward","sendBackwards","discardActiveObject","BsLayerBackward","_editor$canvas24","clone","cloned","_editor$canvas25","evented","FileCopyIcon","_editor$canvas28","_editor$canvas29","_editor$canvas30","get","filter","DeleteIcon","Button","disableElevation","xl","lg","md","FabricJSCanvas","className"],"sourceRoot":""}