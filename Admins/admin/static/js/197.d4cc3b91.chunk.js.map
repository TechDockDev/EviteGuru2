{"version":3,"file":"static/js/197.d4cc3b91.chunk.js","mappings":"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","sources":["screen/PaymentDetails/PaymentDetails.js"],"sourcesContent":["import { Stack, Typography } from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { DataContext } from \"../../AppContext\";\r\nimport axios from \"axios\";\r\n\r\nconst PaymentDetails = () => {\r\n   const [loading, setLoading] = useState(false);\r\n   const { snackbar } = useContext(DataContext);\r\n   const [paymentsData, setPaymentsData] = useState([])\r\n   // ===\r\n   const getPaymentsData = async () => {\r\n      try {\r\n         const { data } = await axios.get(\"/transactions/get\");\r\n         // console.log('-->',data.payments);\r\n         \r\n         setPaymentsData(data.payments)\r\n      } catch (error) {\r\n         snackbar(\"error\", error.message);\r\n      }\r\n   };\r\n   // ===\r\n   useEffect(() => {\r\n      getPaymentsData();\r\n   }, []);\r\n\r\n   // ===\r\n   const columns = [\r\n      {\r\n         field: \"user\",\r\n         headerName: \"User Name\",\r\n         width: 200,\r\n         valueGetter:(params)=>{\r\n             return params.row?.user?.name\r\n         }\r\n      },\r\n      {\r\n         field: \"email\",\r\n         headerName: \"E-mail\",\r\n         width: 200,\r\n         valueGetter:(params)=>{\r\n            return params.row?.user?.email\r\n        }\r\n      },\r\n      {\r\n         field: \"amount\",\r\n         headerName: \"Amount\",\r\n         width: 90,\r\n      },\r\n\r\n      {\r\n         field: \"startDate\",\r\n         headerName: \"Start Date\",\r\n         width: 100,\r\n         valueGetter:(params)=>{\r\n            const date = new Date(params.row?.createdAt).toLocaleDateString('en-GB')\r\n            return date\r\n        }\r\n      },\r\n      {\r\n         field: \"plan\",\r\n         headerName: \"Plan\",\r\n         width: 120,\r\n         valueGetter:(params)=>{\r\n            return params.row?.plan?.name\r\n        }\r\n      },\r\n      {\r\n         field: \"planType\",\r\n         headerName: \"Plan Type\",\r\n         width: 90,\r\n         valueGetter:(params)=>{\r\n            return params.row?.planType\r\n        }\r\n      },\r\n   ];\r\n\r\n   return (\r\n      <Stack padding={\"0px 20px 30px 20px\"}>\r\n         <Typography\r\n            variant=\"h1\"\r\n            align=\"center\"\r\n            fontWeight=\"800\"\r\n            fontSize={\"28px\"}\r\n            mb={2}\r\n            sx={{\r\n               color: \"#795da8\",\r\n               width: \"100%\",\r\n            }}>\r\n            Payment details\r\n         </Typography>\r\n         <DataGrid\r\n            columns={columns}\r\n            rows={paymentsData}\r\n            autoHeight={true}\r\n            pageSizeOptions={[6]}\r\n            getRowId={(row) => row?._id}\r\n            loading={loading}\r\n            disableRowSelectionOnClick={true}\r\n            onRowClick={(row) => console.log(row)}\r\n            initialState={{\r\n               pagination: { paginationModel: { pageSize: 10 } },\r\n             }}\r\n            sx={{\r\n               border: \"2px solid #795DA8\",\r\n               \"&.MuiDataGrid-root .MuiDataGrid-cell:focus-within\": {\r\n                  outline: \"none !important\",\r\n               },\r\n               \"& .MuiDataGrid-columnHeaderTitle\": {\r\n                  fontWeight: \"600\",\r\n               },\r\n            }}\r\n         />\r\n      </Stack>\r\n   );\r\n};\r\n\r\nexport default PaymentDetails;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","loading","snackbar","useContext","DataContext","_useState3","_useState4","paymentsData","setPaymentsData","getPaymentsData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","sent","payments","t0","message","stop","apply","arguments","useEffect","columns","field","headerName","width","valueGetter","params","_params$row","_params$row$user","row","user","name","_params$row2","_params$row2$user","email","_params$row3","Date","createdAt","toLocaleDateString","_params$row4","_params$row4$plan","plan","_params$row5","planType","_jsxs","Stack","padding","children","_jsx","Typography","variant","align","fontWeight","fontSize","mb","sx","color","DataGrid","rows","autoHeight","pageSizeOptions","getRowId","_id","disableRowSelectionOnClick","onRowClick","console","log","initialState","pagination","paginationModel","pageSize","border","outline"],"sourceRoot":""}