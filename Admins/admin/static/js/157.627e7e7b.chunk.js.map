{"version":3,"file":"static/js/157.627e7e7b.chunk.js","mappings":"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","sources":["screen/AdminTemplateCreateScreen.js","screen/Dialogue.js","screen/StickersModal.js","url.js"],"sourcesContent":["import {\r\n  Grid,\r\n  Button,\r\n  List,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Stack,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  IconButton,\r\n  Box,\r\n  Modal,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { FabricJSCanvas, useFabricJSEditor } from \"fabricjs-react\";\r\nimport { fabric } from \"fabric\";\r\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Buffer } from \"buffer\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport InsertPhotoIcon from \"@mui/icons-material/InsertPhoto\";\r\nimport { TbTextRecognition } from \"react-icons/tb\";\r\nimport { FaRegObjectGroup } from \"react-icons/fa\";\r\nimport { FaRegObjectUngroup } from \"react-icons/fa\";\r\nimport { BsLayerBackward } from \"react-icons/bs\";\r\nimport { BsLayerForward } from \"react-icons/bs\";\r\nimport { ImMakeGroup } from \"react-icons/im\";\r\n// import InterestsIcon from \"@mui/icons-material/Interests\";// icon for add shapes\r\nimport ExtensionIcon from \"@mui/icons-material/Extension\";\r\nimport StickersModal from \"./StickersModal\";\r\nimport FormatBoldIcon from \"@mui/icons-material/FormatBold\";\r\nimport FormatItalicIcon from \"@mui/icons-material/FormatItalic\";\r\nimport FormatUnderlinedIcon from \"@mui/icons-material/FormatUnderlined\";\r\nimport StrikethroughSIcon from \"@mui/icons-material/StrikethroughS\";\r\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\";\r\nimport WallpaperIcon from \"@mui/icons-material/Wallpaper\";\r\nimport { DataContext } from \"../AppContext\";\r\nimport { url } from \"../url\";\r\nimport Dialogue from \"./Dialogue\";\r\n\r\nconst AdminTemplateCreateScreen = () => {\r\n  const [descModal, setDescModal] = useState(false);\r\n  const [templateName, setTemplateName] = useState(\"\");\r\n  const [templateDesc, setTemplateDesc] = useState(\"\");\r\n  const { snackbar } = useContext(DataContext);\r\n  const navigate = useNavigate();\r\n  const ref = useRef(null);\r\n  const [allImages, setAllImages] = useState([]);\r\n  const [color, setColor] = useState(\"\");\r\n  const { editor, onReady, selectedObjects } = useFabricJSEditor();\r\n  const [data, setData] = useState();\r\n  const [templateData, setTemplateData] = useState();\r\n  const [addStickersModal, setAddStickersModal] = useState(false);\r\n  const [selectedFont, setSelectedFont] = useState(\"Pinyon Script\");\r\n  const [dialogueOpen, setDialogueOpen] = useState(false);\r\n  const [isLandscape, setIsLandscape] = useState(false);\r\n  const [screenSize, setScreenSize] = useState({\r\n    width: ref?.current?.clientWidth,\r\n    height: ref?.current?.clientHeight,\r\n  });\r\n  console.log(\"screen=>\", screenSize);\r\n  const handleShowDialogue = () => {\r\n    setDialogueOpen(!dialogueOpen);\r\n  };\r\n  const fonts = [\r\n    \"Sacramento\",\r\n    \"Parisienne\",\r\n    \"Montserrat\",\r\n    \"Pinyon Script\",\r\n    \"Arial\",\r\n    \"Helvetica\",\r\n  ];\r\n  // ==================👇 dynamically getting canvas height and width👇  =========================\r\n  let canvasEl = document.querySelector(\".canvas-container\");\r\n  let height = canvasEl?.clientHeight;\r\n  let width = canvasEl?.clientWidth;\r\n\r\n  // ===========👇 Add background IMAGE👇  ===================\r\n  const setBackgroundImage = (e) => {\r\n    const reader = new FileReader();\r\n    console.log(\"img=>\",e.target.files[0].width)\r\n    setAllImages([...allImages, e.target.files[0]]);\r\n\r\n    reader.onload = function (event) {\r\n      var imgObj = new Image();\r\n      imgObj.crossOrigin = \"Anonymous\";\r\n      imgObj.src = event.target.result;\r\n      imgObj.width = width;\r\n      console.log(\"=>\", imgObj.width);\r\n      console.log(\"allImages=>\", allImages);\r\n      const scaleFactor = Math.min(\r\n        width / imgObj.width,\r\n        height / imgObj.height\r\n      );\r\n      // console.log(scaleFactor);\r\n\r\n      // imgObj.scale(scaleFactor);\r\n\r\n      imgObj.onload = function () {\r\n        var image = new fabric.Image(imgObj);\r\n        image.name = e.target.files[0].name;\r\n        // image.scale(scaleFactor)\r\n        // console.log(height);\r\n        // console.log(width);\r\n\r\n        editor?.canvas?.setBackgroundImage(\r\n          image,\r\n          editor.canvas.renderAll.bind(editor.canvas),\r\n          {\r\n            scaleX: editor.canvas.width / image.width,\r\n            scaleY: editor.canvas.height / image.height,\r\n          }\r\n        );\r\n      };\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n  // ============👆Add background IMAGE👆   =================\r\n\r\n  // ===========================================\r\n\r\n  // ========== Stickers modal ============\r\n  const toggleStickersModal = () => {\r\n    setAddStickersModal(!addStickersModal);\r\n  };\r\n  // ========== For Image Upload ============\r\n\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n\r\n  // console.log(\"id...\", id);\r\n\r\n  const templateDetails = useSelector((state) => state.templateData);\r\n  // const { template, loading, error } = templateDetails;\r\n  // console.log(\"template data\", templateDetails);\r\n\r\n  // =================== Ading Text Fuc\r\n  const addText = () => {\r\n    const object = new fabric.IText(\"Text Message\", {\r\n      fontFamily: \"Helvetica\",\r\n      fontSize: 36,\r\n      left: width / 2,\r\n      top: height / 2,\r\n    });\r\n    editor.canvas.add(object);\r\n  };\r\n\r\n  // ========= THis Fuc For Changing TExt Color\r\n\r\n  const changeColor = (e) => {\r\n    setColor(e.target.value);\r\n    // console.log(e.target.value);\r\n    const o = editor?.canvas?.getActiveObject();\r\n    o.set(\"fill\", e.target.value);\r\n    editor?.setStrokeColor(e.target.value);\r\n    editor?.canvas.renderAll();\r\n  };\r\n\r\n  //   ===========groupselected object to single group ====\r\n  const groupSelectedLayers = () => {\r\n    editor.canvas.getActiveObject().toGroup();\r\n    editor.canvas.renderAll();\r\n  };\r\n  // ====================================================\r\n  // ===============================================\r\n  // Function to group all the polyline objects into single object\r\n  function groupAllLayers() {\r\n    // Get all the objects as selection\r\n    var sel = new fabric.ActiveSelection(editor.canvas.getObjects(), {\r\n      canvas: editor.canvas,\r\n    });\r\n\r\n    // Make the objects active\r\n    editor.canvas.setActiveObject(sel);\r\n\r\n    // Group the objects\r\n    let newGroup = editor.canvas.getActiveObject().toGroup();\r\n    editor.canvas.renderAll();\r\n  }\r\n  // =================send back=======================\r\n  const moveBackward = () => {\r\n    const myObject = editor.canvas.getActiveObject();\r\n    editor.canvas.sendBackwards(myObject);\r\n    editor.canvas.discardActiveObject();\r\n  };\r\n  // =====================================\r\n\r\n  //   ============bring to top =============\r\n  const bringToTop = () => {\r\n    const myObject = editor.canvas.getActiveObject();\r\n    editor.canvas.bringToFront(myObject);\r\n    editor.canvas.renderAll();\r\n  };\r\n  // =====================================\r\n  //   ==================ungroup itetms ================\r\n  const unGroup = () => {\r\n    //  let items = groupCanvas._objects;\r\n    let newItems = editor.canvas.getActiveObject();\r\n    let items = newItems._objects;\r\n    newItems._restoreObjectsState();\r\n    editor.canvas.remove(newItems);\r\n    for (let i = 0; i < items.length; i++) {\r\n      editor.canvas.add(items[i]);\r\n    }\r\n\r\n    editor.canvas.renderAll();\r\n  };\r\n  // =====================================================\r\n  // ========add stickers =======================\r\n  const addStickers = (e) => {\r\n    fabric.Image.fromURL(\r\n      e.target.src,\r\n      (img) => {\r\n        img.scale(0.2);\r\n        img.name = decodeURI(\r\n          e.target.src.split(\"\\\\\")[e.target.src.split(\"\\\\\").length - 1]\r\n        );\r\n        editor.canvas.add(img);\r\n        // editor.canvas.renderAll();\r\n      },\r\n      {\r\n        left: width / 2,\r\n        top: height / 2,\r\n      }\r\n    );\r\n  };\r\n  // ==============================================\r\n  //   ========================font family ===\r\n  const changeFont = (e) => {\r\n    // console.log(\"font working>-\");\r\n    setSelectedFont(e.target.value);\r\n    const o = editor.canvas.getActiveObject().set(\"fontFamily\", e.target.value);\r\n    // console.log(\"text=>\", o);\r\n    editor.canvas.renderAll();\r\n  };\r\n  // ========================================\r\n  //  ===👇 text style BOLD👇\r\n  const bold = () => {\r\n    if (editor?.canvas?.getActiveObject().fontWeight === \"normal\") {\r\n      editor?.canvas?.getActiveObject().set(\"fontWeight\", \"bold\");\r\n      editor?.canvas?.renderAll();\r\n    } else {\r\n      editor?.canvas?.getActiveObject().set(\"fontWeight\", \"normal\");\r\n      editor?.canvas?.renderAll();\r\n    }\r\n  };\r\n  // ===👆 text style BOLD👆\r\n  //  ===👇 text style ITALIC👇\r\n  const italic = () => {\r\n    if (editor?.canvas?.getActiveObject().fontStyle === \"normal\") {\r\n      editor?.canvas?.getActiveObject().set(\"fontStyle\", \"italic\");\r\n      editor?.canvas?.renderAll();\r\n    } else {\r\n      editor?.canvas?.getActiveObject().set(\"fontStyle\", \"normal\");\r\n      editor?.canvas?.renderAll();\r\n    }\r\n  };\r\n  // ===👆 text style ITALIC👆\r\n  //  ===👇 text style UNDERLINE👇\r\n  const underline = () => {\r\n    if (editor?.canvas?.getActiveObject().underline) {\r\n      editor?.canvas?.getActiveObject().set(\"underline\", false);\r\n      editor?.canvas?.renderAll();\r\n    } else {\r\n      editor?.canvas?.getActiveObject().set(\"underline\", true);\r\n      editor?.canvas?.renderAll();\r\n    }\r\n  };\r\n  // ===👆 text style UNDERLINE👆\r\n  //  ===👇 text style STRIKE THROUGH👇\r\n  const strike = () => {\r\n    if (editor?.canvas?.getActiveObject()) {\r\n      if (editor?.canvas?.getActiveObject().linethrough) {\r\n        editor?.canvas?.getActiveObject().set(\"linethrough\", false);\r\n        editor?.canvas?.renderAll();\r\n      } else {\r\n        editor?.canvas?.getActiveObject().set(\"linethrough\", true);\r\n        editor?.canvas?.renderAll();\r\n      }\r\n    } else {\r\n      alert(\"No object selected\");\r\n    }\r\n  };\r\n  // ===👆 text style STRIKE THROUGH👆\r\n  //   ========================font size ===\r\n  const changeFontSize = (e) => {\r\n    // console.log(\"font working>-\");\r\n    const o = editor.canvas\r\n      .getActiveObject()\r\n      .set(\"fontSize\", e.target.value * 1);\r\n    editor.canvas.renderAll();\r\n  };\r\n  // ========================================\r\n  //  ===👇 Clone Selected object👇\r\n  const clone = () => {\r\n    editor?.canvas?.getActiveObject().clone((cloned) => {\r\n      cloned.set({\r\n        left: cloned.left + 10,\r\n        top: cloned.top + 10,\r\n        evented: true,\r\n      });\r\n      editor?.canvas?.add(cloned);\r\n    });\r\n  };\r\n  // ===👆 Clone Selected object👆\r\n  //====================To Convert JSON\r\n\r\n  const toJSON = () => {\r\n    const json = editor.canvas.toJSON();\r\n    const data = JSON.stringify(json);\r\n    // console.log(data);\r\n    setData(data);\r\n  };\r\n  // =====save event template json ====\r\n  const saveTemplateData = () => {\r\n    const json = editor.canvas.toJSON();\r\n    const data = JSON.stringify(json);\r\n    const ext = \"png\";\r\n    const image = editor?.canvas?.toDataURL({\r\n      format: ext,\r\n      enableRetinaScaling: true,\r\n    });\r\n    // console.log(\"data=>\", data, \"image Preview =>\", image);\r\n  };\r\n  // ==================================\r\n  //=================== This Fnc For Adding Extra Image\r\n  const onUploadImage = (e) => {\r\n    const reader = new FileReader();\r\n    setAllImages([...allImages, e.target.files[0]]);\r\n    // console.log(e.target.files[0]);\r\n    reader.onload = function (event) {\r\n      var imgObj = new Image();\r\n      imgObj.crossOrigin = \"Anonymous\";\r\n      imgObj.src = event.target.result;\r\n      imgObj.onload = function () {\r\n        var image = new fabric.Image(imgObj);\r\n        editor.canvas.centerObject(image);\r\n        image.set({\r\n          scaleX: editor?.canvas.getWidth() / image.width / 2,\r\n          scaleY: editor?.canvas.getHeight() / image.height / 2,\r\n          top: 0,\r\n          left: 0,\r\n          srcFromAttribute: true,\r\n        });\r\n        image.name = e.target.files[0].name;\r\n        editor?.canvas.add(image);\r\n        editor?.canvas.renderAll();\r\n      };\r\n    };\r\n    reader.onerror = (err) => console.log(err);\r\n    reader.readAsDataURL(e.target.files[0]);\r\n\r\n    // console.log(\"clicked\");\r\n    // const image = e.target.files[0];\r\n    // if (image) {\r\n    //   setImageFunc(URL.createObjectURL(e.target.files[0]));\r\n    // }\r\n  };\r\n  // ======================\r\n  const setImageFunc = (imgUrl) => {\r\n    fabric.Image.fromURL(\r\n      imgUrl,\r\n      (img) => {\r\n        img.scale(0.2);\r\n\r\n        editor.canvas.add(img);\r\n        editor.canvas.renderAll();\r\n      },\r\n      { left: width / 2, top: height / 2 }\r\n    );\r\n  };\r\n  // ======================\r\n\r\n  //   ====load canvas from json =====\r\n  const loadCanvasFromJson = () => {\r\n    let object = new fabric.Canvas(\"canvas\");\r\n    // console.log(templateData);\r\n    editor?.canvas.loadFromJSON(templateData);\r\n  };\r\n  // ==================================\r\n  // =================== This is YOur Handler + Image Downloader\r\n  const downloadImage = (e) => {\r\n    e.preventDefault();\r\n    const ext = \"png\";\r\n    const base64 = editor?.canvas?.toDataURL({\r\n      format: ext,\r\n      enableRetinaScaling: true,\r\n    });\r\n    const link = document.createElement(\"a\");\r\n    link.href = base64;\r\n    link.download = `Template_Example.${ext}`;\r\n    // console.log(\"Running\", base64);\r\n    // dispatch(EditTemplate(base64));\r\n    // { THis link.Click For Dowload Editd Image , Whene You remove That Commit And that Image will Download}\r\n    link.click();\r\n  };\r\n\r\n  //   ============ This Fuc For Delete all deta in render in Fabric\r\n  const removeSelectedObject = () => {\r\n    if (selectedObjects[0] && selectedObjects[0].get(\"type\") === \"image\") {\r\n      setAllImages(\r\n        allImages.filter((file) => file.name !== selectedObjects[0].name)\r\n      );\r\n    }\r\n    editor?.canvas?.remove(editor?.canvas?.getActiveObject());\r\n    editor?.canvas?.renderAll();\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCanvasFromJson();\r\n    handleOrientationChange();\r\n  }, [templateData]);\r\n  // ================\r\n  useEffect(() => {\r\n    handleOrientationChange();\r\n\r\n    if (isLandscape) {\r\n      document.getElementById(\"d-parent\").style.zoom = \"35%\";\r\n    }\r\n    window.addEventListener(\"resize\", handleOrientationChange);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleOrientationChange);\r\n      // document.getElementById(\"d-parent\").style.zoom = \"100%\";\r\n    };\r\n  }, []);\r\n  const toggleDescModal = () => {\r\n    setTemplateName(\"\");\r\n    setTemplateDesc(\"\");\r\n    setDescModal(!descModal);\r\n  };\r\n\r\n  // ================\r\n\r\n  // ===👇 Toolbar button 👇===\r\n  const ListItemButtonStyle = {\r\n    padding: \"5px 0px\",\r\n    transition: \"all 200ms ease\",\r\n    border: \"1px solid #E6E2E2\",\r\n    width: \"85px\",\r\n    maxWidth: \"85px\",\r\n    marginY: \"8px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    \"&:hover\": {\r\n      bgcolor: \"transparent\",\r\n      borderColor: \"#795DA8\",\r\n      \"& svg\": { color: \"#795DA8\" },\r\n      \"& span\": { color: \"#795DA8\" },\r\n    },\r\n    \"&:active\": { scale: \".9\" },\r\n  };\r\n  // ===👇 Toolbar button type 2 👇===\r\n\r\n  const ListItemButtonStyle2 = {\r\n    padding: \"0px\",\r\n    transition: \"all 200ms ease\",\r\n    // width: \"85px\",\r\n    marginY: \"8px\",\r\n    display: \"flex\",\r\n    \"& svg\": {\r\n      fontSize: \"25px\",\r\n      marginRight: \"5px\",\r\n    },\r\n    \"& span\": { fontWeight: \"500\" },\r\n    \"&:hover\": {\r\n      bgcolor: \"transparent\",\r\n      borderColor: \"#795DA8\",\r\n      \"& svg\": { color: \"#795DA8\" },\r\n      \"& span\": { color: \"#795DA8\" },\r\n    },\r\n    \"&:active\": { scale: \".9\" },\r\n  };\r\n  // ===👇 TEXT Toolbar button type 3 👇===\r\n\r\n  const ListItemButtonStyle3 = {\r\n    padding: \"0px\",\r\n    transition: \"all 200ms ease\",\r\n    marginY: \"8px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    \"& .MuiListItemIcon-root\": {\r\n      minWidth: \"\",\r\n    },\r\n    \"& svg\": {\r\n      fontSize: \"25px\",\r\n      marginRight: \"5px\",\r\n    },\r\n    \"&:hover\": {\r\n      bgcolor: \"transparent\",\r\n      borderColor: \"#795DA8\",\r\n      \"& svg\": { color: \"#795DA8\" },\r\n      \"& span\": { color: \"#795DA8\" },\r\n    },\r\n    \"&:active\": { scale: \".9\" },\r\n  };\r\n\r\n  const uploadImage = async (e) => {\r\n    try {\r\n      const formData = new FormData();\r\n      allImages.forEach((v) => {\r\n        formData.append(\"image\", v);\r\n      });\r\n      const res = await axios.post(\"/template/saveImage\", formData);\r\n      createPreview();\r\n      console.log(res);\r\n    } catch (error) {\r\n      // console.log(error);\r\n    }\r\n  };\r\n\r\n  // =======================================================\r\n  const createPreview = async () => {\r\n    const canvasPng = editor?.canvas.toDataURL({\r\n      format: \"png\",\r\n      // quality: 0.8,\r\n      quality: 1,\r\n      width: 475,\r\n      height: 600,\r\n      pixelRatio: 3,\r\n      multiplier: 2,\r\n    });\r\n    function dataURLtoFile(dataurl, filename) {\r\n      const uint8Buffer = Buffer.from(dataurl.split(\",\")[1], \"base64\");\r\n      return new File([uint8Buffer], filename, { type: \"image/png\" });\r\n    }\r\n    // Usage example:\r\n    var file = dataURLtoFile(canvasPng, \"previewImage.png\");\r\n    saveTemplate(file);\r\n  };\r\n\r\n  async function saveTemplate(file) {\r\n    try {\r\n      fabric.Image.prototype.toObject = (function (toObject) {\r\n        return function () {\r\n          return fabric.util.object.extend(toObject.call(this), {\r\n            name: this.name,\r\n            src: `${url}/api/v1/admin/template/sendImage/${this.name}`,\r\n            crossOrigin: \"anonymous\",\r\n          });\r\n        };\r\n      })(fabric.Image.prototype.toObject);\r\n      const formData = new FormData();\r\n\r\n      formData.append(\"templateJson\", JSON.stringify(editor?.canvas.toJSON()));\r\n      formData.append(\"previewImage\", file);\r\n      formData.append(\"name\", templateName);\r\n      formData.append(\"description\", templateDesc);\r\n      const response = await axios.post(\"/template/create\", formData);\r\n      // console.log(editor?.canvas.toJSON());\r\n      snackbar(response.data.status, response.data.message);\r\n      navigate(\"/admin/template-list\");\r\n      editor.canvas.clear();\r\n      toggleDescModal();\r\n    } catch (error) {\r\n      snackbar(\"error\", error.message);\r\n    }\r\n  }\r\n\r\n  const handleOrientationChange = () => {\r\n    const isSmallScreen = window.innerWidth < 550; // Adjust the breakpoint as needed\r\n    const isPortrait = window.matchMedia(\"(orientation: portrait)\").matches;\r\n    console.log(\"windowlenth=>\", isSmallScreen, \" isPortRait=>\", isPortrait);\r\n    if (isSmallScreen) {\r\n      setIsLandscape(true);\r\n      document.getElementById(\"d-parent\").style.zoom = \"35%\";\r\n      handleShowDialogue();\r\n    } else {\r\n      document.getElementById(\"d-parent\").style.zoom = \"100%\";\r\n      setIsLandscape(false);\r\n      setDialogueOpen(false);\r\n    }\r\n  };\r\n\r\n  // =======================================================\r\n  // =======================================================\r\n  // =======================================================\r\n  return (\r\n    <>\r\n      <Box paddingX={\"10px\"} boxSizing={\"border-box\"} id=\"d-parent\">\r\n        <Typography\r\n          variant=\"h1\"\r\n          align=\"center\"\r\n          fontWeight=\"800\"\r\n          fontSize={\"28px\"}\r\n          mb={2}\r\n          sx={{\r\n            color: \"#795da8\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          Create Template\r\n        </Typography>\r\n        {editor?.canvas?.getActiveObject()?.type === \"i-text\" && (\r\n          <>\r\n            {/*  👇 TOOLS TO EDIT TEXT(VISIBLE WHEN TEXT IS SELECTED)  👇    */}\r\n            <Grid item mt={2} xs={12} overflow={\"auto\"}>\r\n              <Stack\r\n                direction={\"row\"}\r\n                alignItems={\"center\"}\r\n                justifyContent={\"center\"}\r\n                border={\"1px solid #E6E2E2\"}\r\n                paddingX={\"5px\"}\r\n                boxSizing={\"border-box\"}\r\n                width={\"100%\"}\r\n              >\r\n                {/*  👇 change font type button  👇    */}\r\n                <ListItemButton sx={{ ...ListItemButtonStyle3 }}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel id=\"font-family-select-label\">Fonts</InputLabel>\r\n                    <Select\r\n                      labelId=\"font-family-select-label\"\r\n                      sx={{ \".MuiSelect-select\": { color: \"black\" } }}\r\n                      id=\"font-family-select\"\r\n                      value={selectedFont}\r\n                      label=\"Font Family\"\r\n                      size=\"small\"\r\n                      onChange={changeFont}\r\n                    >\r\n                      {fonts?.map((font, index) => {\r\n                        return (\r\n                          <MenuItem key={index} value={font}>\r\n                            {font}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </ListItemButton>\r\n                {/* 👆 change font type button 👆   */}\r\n                {/*  👇 change font COLOR button  👇    */}\r\n                <ListItemButton\r\n                  sx={{ ...ListItemButtonStyle3 }}\r\n                  onClick={changeColor}\r\n                >\r\n                  <input type=\"color\" onChange={changeColor} />\r\n                </ListItemButton>\r\n                {/* 👆 change font COLOR button 👆   */}\r\n                {/*  👇 Font Style BOLD  👇    */}\r\n                <ListItemButton sx={{ ...ListItemButtonStyle3 }} onClick={bold}>\r\n                  <ListItemIcon>\r\n                    <FormatBoldIcon />\r\n                  </ListItemIcon>\r\n                </ListItemButton>\r\n                {/* 👆 Font Style BOLD 👆   */}\r\n                {/*  👇 Font Style ITALIC  👇    */}\r\n                <ListItemButton\r\n                  sx={{ ...ListItemButtonStyle3 }}\r\n                  onClick={italic}\r\n                >\r\n                  <ListItemIcon>\r\n                    <FormatItalicIcon />\r\n                  </ListItemIcon>\r\n                </ListItemButton>\r\n                {/* 👆 Font Style ITALIC 👆   */}\r\n                {/*  👇 Font Style UNDERLINE  👇    */}\r\n                <ListItemButton\r\n                  sx={{ ...ListItemButtonStyle3 }}\r\n                  onClick={underline}\r\n                >\r\n                  <ListItemIcon>\r\n                    <FormatUnderlinedIcon />\r\n                  </ListItemIcon>\r\n                </ListItemButton>\r\n                {/* 👆 Font Style UNDERLINE 👆   */}\r\n                {/*  👇 Font Style STRIKETHROUGH  👇    */}\r\n                <ListItemButton\r\n                  sx={{ ...ListItemButtonStyle3 }}\r\n                  onClick={strike}\r\n                >\r\n                  <ListItemIcon>\r\n                    <StrikethroughSIcon />\r\n                  </ListItemIcon>\r\n                </ListItemButton>\r\n                {/* 👆 Font Style STRIKETHROUGH 👆   */}\r\n              </Stack>\r\n            </Grid>\r\n            {/* 👆 TOOLS TO EDIT TEXT(VISIBLE WHEN TEXT IS SELECTED) 👆   */}\r\n          </>\r\n        )}\r\n\r\n        <Grid container sx={{ width: \"100%\" }}>\r\n          {/*  👇 edit tools container  👇    */}\r\n\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            xs={12}\r\n            boxSizing={\"border-box\"}\r\n            sx={{\r\n              // padding: \"20px\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              boxSizing: \"border-box\",\r\n              order: { xs: 1, sm: 0 },\r\n              // border: \"1px solid green\",\r\n            }}\r\n          >\r\n            <Stack\r\n              sx={{\r\n                maxHeight: \"450px\",\r\n                overflow: \"auto\",\r\n                width: \"100%\",\r\n                boxSizing: \"border-box\",\r\n                \"&::-webkit-scrollbar\": {\r\n                  width: \"8px\",\r\n                },\r\n                \"&::-webkit-scrollbar-track\": {\r\n                  background: \"#CEC5DC\",\r\n                  borderRadius: \"4px\",\r\n                },\r\n                \"&::-webkit-scrollbar-thumb\": {\r\n                  background: \"#795DA8\",\r\n                  borderRadius: \"4px\",\r\n                },\r\n                \"&::-webkit-scrollbar-thumb:hover\": {\r\n                  background: \"#5a3991\",\r\n                  borderRadius: \"4px\",\r\n                },\r\n              }}\r\n            >\r\n              <List\r\n                disablePadding\r\n                sx={{\r\n                  width: { xs: \"1190px\", sm: \"100%\" },\r\n                  display: \"flex\",\r\n                  flexDirection: { xs: \"row\", sm: \"column\" },\r\n                  justifyContent: { xs: \"space-around\", sm: \"center\" },\r\n                  alignItems: \"center\",\r\n                  boxSizing: \"border-box\",\r\n                  \"& .MuiListItemIcon-root\": {\r\n                    minWidth: \"\",\r\n                  },\r\n                }}\r\n              >\r\n                {/*  👇==== Add Background Image ====  👇    */}\r\n\r\n                <ListItemButton\r\n                  component={\"label\"}\r\n                  sx={{\r\n                    ...ListItemButtonStyle,\r\n                  }}\r\n                >\r\n                  <ListItemIcon\r\n                    sx={{ color: \"#667087\", \"& svg\": { fontSize: \"50px\" } }}\r\n                  >\r\n                    <input\r\n                      accept=\"image/*\"\r\n                      style={{ display: \"none\" }}\r\n                      type=\"file\"\r\n                      onChange={setBackgroundImage}\r\n                    />\r\n                    <WallpaperIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primaryTypographyProps={{\r\n                      sx: {\r\n                        color: \"black\",\r\n                        fontSize: \"12px\",\r\n                        fontFamily: \"Montserrat\",\r\n                        textAlign: \"center\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    Add Background\r\n                  </ListItemText>\r\n                </ListItemButton>\r\n\r\n                {/* 👆 ==== Add Background Image ==== 👆   */}\r\n                {/*  👇==== Add Photo ====  👇    */}\r\n\r\n                <ListItemButton\r\n                  component={\"label\"}\r\n                  sx={{\r\n                    ...ListItemButtonStyle,\r\n                  }}\r\n                >\r\n                  <ListItemIcon\r\n                    sx={{ color: \"#667087\", \"& svg\": { fontSize: \"50px\" } }}\r\n                  >\r\n                    <input\r\n                      accept=\"image/*\"\r\n                      style={{ display: \"none\" }}\r\n                      type=\"file\"\r\n                      onChange={onUploadImage}\r\n                    />\r\n                    <InsertPhotoIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primaryTypographyProps={{\r\n                      sx: {\r\n                        color: \"black\",\r\n                        fontSize: \"12px\",\r\n                        fontFamily: \"Montserrat\",\r\n                        textAlign: \"center\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    Image\r\n                  </ListItemText>\r\n                </ListItemButton>\r\n\r\n                {/* 👆 ==== Add Photo ==== 👆   */}\r\n\r\n                {/*  👇==== Add text ====  👇    */}\r\n                <ListItemButton\r\n                  sx={{ ...ListItemButtonStyle }}\r\n                  onClick={addText}\r\n                >\r\n                  <ListItemIcon\r\n                    sx={{ color: \"#667087\", \"& svg\": { fontSize: \"50px\" } }}\r\n                  >\r\n                    <TbTextRecognition />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primaryTypographyProps={{\r\n                      sx: {\r\n                        color: \"black\",\r\n                        fontSize: \"12px\",\r\n                        fontFamily: \"Montserrat\",\r\n                        textAlign: \"center\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    Text\r\n                  </ListItemText>\r\n                </ListItemButton>\r\n                {/* 👆 ==== Add text ==== 👆   */}\r\n                {/*  👇==== Stickers ====  👇    */}\r\n                <ListItemButton\r\n                  sx={{ ...ListItemButtonStyle }}\r\n                  onClick={toggleStickersModal}\r\n                >\r\n                  <ListItemIcon\r\n                    sx={{ color: \"#667087\", \"& svg\": { fontSize: \"50px\" } }}\r\n                  >\r\n                    <ExtensionIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primaryTypographyProps={{\r\n                      sx: {\r\n                        color: \"black\",\r\n                        fontSize: \"12px\",\r\n                        fontFamily: \"Montserrat\",\r\n                        textAlign: \"center\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    Stickers\r\n                  </ListItemText>\r\n                </ListItemButton>\r\n                <StickersModal\r\n                  open={addStickersModal}\r\n                  handleClose={toggleStickersModal}\r\n                  addStickers={addStickers}\r\n                />\r\n\r\n                {/* 👆 ==== Stickers ==== 👆   */}\r\n                <Stack\r\n                  mt={1}\r\n                  alignItems={\"start\"}\r\n                  direction={{ xs: \"row\", sm: \"column\" }}\r\n                  width={{ xs: \"890px\", sm: \"100%\" }}\r\n                >\r\n                  {/*  👇==== Group Selected ====  👇    */}\r\n                  <ListItemButton\r\n                    sx={{ ...ListItemButtonStyle2 }}\r\n                    onClick={groupSelectedLayers}\r\n                  >\r\n                    <ListItemIcon sx={{ color: \"#667087\" }}>\r\n                      <ImMakeGroup />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primaryTypographyProps={{\r\n                        sx: {\r\n                          color: \"black\",\r\n                          fontSize: \"12px\",\r\n                          fontFamily: \"Montserrat\",\r\n                          textAlign: \"center\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      Group Selected\r\n                    </ListItemText>\r\n                  </ListItemButton>\r\n\r\n                  {/* 👆 ==== Group Selected ==== 👆   */}\r\n                  {/*  👇==== GroupAll ====  👇    */}\r\n                  <ListItemButton\r\n                    sx={{ ...ListItemButtonStyle2 }}\r\n                    onClick={groupAllLayers}\r\n                  >\r\n                    <ListItemIcon sx={{ color: \"#667087\" }}>\r\n                      <FaRegObjectGroup />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primaryTypographyProps={{\r\n                        sx: {\r\n                          color: \"black\",\r\n                          fontSize: \"12px\",\r\n                          fontFamily: \"Montserrat\",\r\n                          textAlign: \"center\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      Group ALL\r\n                    </ListItemText>\r\n                  </ListItemButton>\r\n\r\n                  {/* 👆 ==== GroupAll ==== 👆   */}\r\n                  {/*  👇==== UnGroup ====  👇    */}\r\n                  <ListItemButton\r\n                    sx={{ ...ListItemButtonStyle2 }}\r\n                    onClick={unGroup}\r\n                  >\r\n                    <ListItemIcon\r\n                      sx={{ color: \"#667087\", \"& svg\": { fontSize: \"50px\" } }}\r\n                    >\r\n                      <FaRegObjectUngroup />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primaryTypographyProps={{\r\n                        sx: {\r\n                          color: \"black\",\r\n                          fontSize: \"12px\",\r\n                          fontFamily: \"Montserrat\",\r\n                          textAlign: \"center\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      Ungroup\r\n                    </ListItemText>\r\n                  </ListItemButton>\r\n\r\n                  {/* 👆 ==== UnGroup ==== 👆   */}\r\n                  {/*  👇==== Bring To Top ====  👇    */}\r\n                  <ListItemButton\r\n                    onClick={bringToTop}\r\n                    sx={{ ...ListItemButtonStyle2 }}\r\n                  >\r\n                    <ListItemIcon sx={{ color: \"#667087\" }}>\r\n                      <BsLayerForward />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primaryTypographyProps={{\r\n                        sx: {\r\n                          color: \"black\",\r\n                          fontSize: \"12px\",\r\n                          fontWeight: \"800\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      Bring To Top\r\n                    </ListItemText>\r\n                  </ListItemButton>\r\n\r\n                  {/* 👆 ==== Bring To Top ==== 👆   */}\r\n                  {/*  👇==== move layer back  ====  👇    */}\r\n                  <ListItemButton\r\n                    onClick={moveBackward}\r\n                    sx={{ ...ListItemButtonStyle2 }}\r\n                  >\r\n                    <ListItemIcon sx={{ color: \"#667087\" }}>\r\n                      <BsLayerBackward />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primaryTypographyProps={{\r\n                        sx: {\r\n                          color: \"black\",\r\n                          fontSize: \"12px\",\r\n                          fontWeight: \"800\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      Move to back\r\n                    </ListItemText>\r\n                  </ListItemButton>\r\n                  {/* 👆 ==== move layer back ==== 👆   */}\r\n                  {/*  👇==== Clone Object  ====  👇    */}\r\n                  <ListItemButton\r\n                    onClick={clone}\r\n                    sx={{ ...ListItemButtonStyle2 }}\r\n                  >\r\n                    <ListItemIcon sx={{ color: \"#667087\" }}>\r\n                      <FileCopyIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primaryTypographyProps={{\r\n                        sx: {\r\n                          color: \"black\",\r\n                          fontSize: \"12px\",\r\n                          fontWeight: \"800\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      Clone\r\n                    </ListItemText>\r\n                  </ListItemButton>\r\n                  {/* 👆 ==== Clone Object ==== 👆   */}\r\n                  {/*  👇==== Remove ====  👇    */}\r\n                  <ListItemButton\r\n                    sx={{ ...ListItemButtonStyle2 }}\r\n                    onClick={removeSelectedObject}\r\n                  >\r\n                    <ListItemIcon\r\n                      sx={{ color: \"#667087\", \"& svg\": { fontSize: \"50px\" } }}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primaryTypographyProps={{\r\n                        sx: {\r\n                          color: \"black\",\r\n                          fontSize: \"12px\",\r\n                          fontFamily: \"Montserrat\",\r\n                          textAlign: \"center\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      Remove\r\n                    </ListItemText>\r\n                  </ListItemButton>\r\n                  {/* 👆 ==== Remove ==== 👆   */}\r\n                </Stack>\r\n              </List>\r\n            </Stack>\r\n            <Button\r\n              fullWidth\r\n              disableElevation\r\n              variant=\"contained\"\r\n              //  onClick={downloadImage}\r\n              // onClick={toJSON}\r\n              onClick={toggleDescModal}\r\n              sx={{ color: \"#fff\", mt: 2 }}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              onClick={() => navigate(-1)}\r\n              fullWidth\r\n              disableElevation\r\n              variant=\"outlined\"\r\n              // onClick={}\r\n              sx={{ mt: 1 }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n          {/* 👆 edit tools container 👆   */}\r\n          {/*  👇 image container  👇    */}\r\n          <Grid\r\n            item\r\n            xl={10}\r\n            lg={10}\r\n            md={10}\r\n            sm={10}\r\n            xs={12}\r\n            sx={{\r\n              boxSizing: \"border-box\",\r\n              //  padding: \"5px\",\r\n              width: \"100%\",\r\n              // height: \"70vh\",\r\n              order: 0,\r\n              paddingX: \"5px\",\r\n              \"& .fabCanvas\": {\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                border: \"1px solid #795DA8\",\r\n                boxSizing: \"border-box\",\r\n              },\r\n              \"& .upper-canvas\": {\r\n                background: \"none\",\r\n              },\r\n            }}\r\n          >\r\n            <Box\r\n              width={{ md: \"475px\", sm: \"475px\", xs: \"475px\" }}\r\n              height={\"600px\"}\r\n              ref={ref}\r\n              sx={{ margin: \"auto\", border: \"1px solid black\" }}\r\n            >\r\n              <FabricJSCanvas className=\"fabCanvas\" onReady={onReady} />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      {/* =========== Modal for name and description =========== */}\r\n      <Modal open={descModal} closeAfterTransition>\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: 400,\r\n            bgcolor: \"white\",\r\n            border: \"2px solid #795DA8\",\r\n            borderRadius: \"8px\",\r\n            boxShadow: 24,\r\n            p: 4,\r\n          }}\r\n        >\r\n          <>\r\n            <form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                uploadImage();\r\n              }}\r\n            >\r\n              <Grid container sx={{ p: 1 }}>\r\n                <Typography\r\n                  variant=\"h1\"\r\n                  align=\"center\"\r\n                  fontWeight=\"800\"\r\n                  fontSize={\"28px\"}\r\n                  mb={2}\r\n                  sx={{\r\n                    color: \"#795da8\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  Title and Description\r\n                </Typography>\r\n                <Grid item xs={12} sx={{ mb: 4 }}>\r\n                  {/* NAME */}\r\n                  <FormControl fullWidth>\r\n                    <TextField\r\n                      size=\"small\"\r\n                      label=\"Template Name\"\r\n                      type=\"text\"\r\n                      placeholder=\"Enter template name\"\r\n                      value={templateName}\r\n                      required\r\n                      onChange={(e) => setTemplateName(e.target.value)}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ mb: 4 }}>\r\n                  {/* DESCRIPTION */}\r\n                  <FormControl id=\"description\" fullWidth>\r\n                    <TextField\r\n                      size=\"small\"\r\n                      type=\"text\"\r\n                      label=\"Description\"\r\n                      id=\"description\"\r\n                      name=\"templateDesc\"\r\n                      placeholder=\"Enter description\"\r\n                      multiline\r\n                      maxRows={4}\r\n                      value={templateDesc}\r\n                      required\r\n                      onChange={(e) => setTemplateDesc(e.target.value)}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Button\r\n                  disableElevation\r\n                  sx={{ m: \"auto\", color: \"white\" }}\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n                <Button\r\n                  disableElevation\r\n                  sx={{ m: \"auto\" }}\r\n                  variant=\"outlined\"\r\n                  onClick={toggleDescModal}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Grid>\r\n            </form>\r\n          </>\r\n        </Box>\r\n      </Modal>\r\n      <Dialogue open={dialogueOpen} handleClose={handleShowDialogue} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminTemplateCreateScreen;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport ScreenRotationIcon from \"@mui/icons-material/ScreenRotation\";\r\nconst Dialogue = (props) => {\r\n  return (\r\n    <Dialog\r\n      open={props?.open}\r\n      onClose={props?.handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">\r\n        <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n          {/* <Typography> {\"Rotate Screen\"}</Typography> */}\r\n          This device is incompatible to Create Template\r\n          {/* <ScreenRotationIcon /> */}\r\n        </Stack>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {/* Let device to be in landscape mode , just to experience better template\r\n          design interface, */}\r\n          You will not able to edit templates in small screen devices, use\r\n          bigger screen device to edit\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      {/* <DialogActions>\r\n        \r\n        <Button onClick={props?.handleClose} autoFocus>\r\n          ok\r\n        </Button>\r\n      </DialogActions> */}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Dialogue;\r\n","import { Box, Menu, MenuItem, Modal, Stack, Typography } from \"@mui/material\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { DataContext } from \"../AppContext\";\r\nimport axios from \"axios\";\r\n\r\nconst StickersModal = ({ open, handleClose, addStickers }) => {\r\n   const [stickersData, setStickersData] = useState([]);\r\n   const { snackbar } = useContext(DataContext);\r\n\r\n   const getStickers = async () => {\r\n      try {\r\n         const { data } = await axios.get(\"template/stickers\");\r\n         setStickersData(data.stickers);\r\n      } catch (error) {\r\n         snackbar(\"error\", error.message);\r\n      }\r\n   };\r\n\r\n   \r\n   useEffect(() => {\r\n      getStickers();\r\n   }, []);\r\n\r\n   const style = {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n      width: { xs: \"85%\", sm: \"400px\" },\r\n      bgcolor: \"white\",\r\n      boxShadow: 24,\r\n      p: { xs: 2, sm: 4 },\r\n      outline: \"none\",\r\n      height: \"60vh\",\r\n      boxSizing: \"border-box\",\r\n      \"& img\": {\r\n         boxShadow: \"2px 5px 5px grey\",\r\n         width: \"70px\",\r\n         height: \"70px\",\r\n      },\r\n   };\r\n\r\n   return (\r\n      <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\r\n         <Box sx={style}>\r\n            <Typography variant=\"h5\" fontSize={\"20px\"} fontWeight={\"800\"} textAlign={\"center\"}>\r\n               Select sticker\r\n            </Typography>\r\n            <Stack mt={2} direction={\"row\"} flexWrap={\"wrap\"} overflow={\"auto\"}>\r\n               {stickersData?.map((stkr, index) => {\r\n                  \r\n                 return <MenuItem key={index}\r\n\r\n                     onClick={(e) => {\r\n                        handleClose();\r\n                        addStickers(e);\r\n                     }}\r\n                     value={`/images/getImage?path=/${stkr?.image}`}>\r\n                     <img alt=\"image\" src={`/images/getImage?path=/${stkr?.image}`} />\r\n                  </MenuItem>;\r\n               })}\r\n            </Stack>\r\n         </Box>\r\n      </Modal>\r\n   );\r\n};\r\n\r\nexport default StickersModal;\r\n","// export const url = \"http://192.168.29.149:8085\";\r\nexport const url = \"http://3.20.225.149:8085\";\r\n"],"names":["_ref$current","_ref$current2","_editor$canvas31","_editor$canvas31$getA","_useState","useState","_useState2","_slicedToArray","descModal","setDescModal","_useState3","_useState4","templateName","setTemplateName","_useState5","_useState6","templateDesc","setTemplateDesc","snackbar","useContext","DataContext","navigate","useNavigate","ref","useRef","_useState7","_useState8","allImages","setAllImages","_useState9","_useState10","setColor","_useFabricJSEditor","useFabricJSEditor","editor","onReady","selectedObjects","_useState11","_useState12","_useState13","_useState14","templateData","_useState15","_useState16","addStickersModal","setAddStickersModal","_useState17","_useState18","selectedFont","setSelectedFont","_useState19","_useState20","dialogueOpen","setDialogueOpen","_useState21","_useState22","isLandscape","setIsLandscape","_useState23","width","current","clientWidth","height","clientHeight","_useState24","screenSize","console","log","handleShowDialogue","fonts","canvasEl","document","querySelector","toggleStickersModal","changeColor","useDispatch","useParams","id","useSelector","state","e","_editor$canvas2","target","value","canvas","getActiveObject","set","setStrokeColor","renderAll","useEffect","fabric","loadFromJSON","handleOrientationChange","getElementById","style","zoom","window","addEventListener","removeEventListener","toggleDescModal","ListItemButtonStyle","padding","transition","border","maxWidth","marginY","display","flexDirection","bgcolor","borderColor","color","scale","ListItemButtonStyle2","fontSize","marginRight","fontWeight","ListItemButtonStyle3","justifyContent","minWidth","uploadImage","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","res","wrap","_context","prev","next","FormData","forEach","v","append","axios","sent","createPreview","t0","stop","_x","apply","arguments","_ref2","_callee2","canvasPng","dataURLtoFile","_context2","dataurl","filename","uint8Buffer","Buffer","split","File","type","toDataURL","format","quality","pixelRatio","multiplier","saveTemplate","_x2","_saveTemplate","_callee3","file","response","_context3","toObject","call","this","name","src","concat","url","crossOrigin","JSON","stringify","toJSON","data","status","message","clear","isSmallScreen","innerWidth","isPortrait","matchMedia","matches","_jsxs","_Fragment","children","Box","paddingX","boxSizing","_jsx","Typography","variant","align","mb","sx","Grid","item","mt","xs","overflow","Stack","direction","alignItems","ListItemButton","_objectSpread","FormControl","fullWidth","InputLabel","Select","labelId","label","size","onChange","map","font","index","MenuItem","onClick","_editor$canvas3","_editor$canvas4","_editor$canvas5","_editor$canvas6","_editor$canvas7","ListItemIcon","FormatBoldIcon","_editor$canvas8","_editor$canvas9","_editor$canvas10","_editor$canvas11","_editor$canvas12","fontStyle","FormatItalicIcon","_editor$canvas13","_editor$canvas14","_editor$canvas15","_editor$canvas16","_editor$canvas17","underline","FormatUnderlinedIcon","_editor$canvas18","_editor$canvas19","_editor$canvas20","_editor$canvas21","_editor$canvas22","_editor$canvas23","linethrough","alert","StrikethroughSIcon","container","sm","order","maxHeight","background","borderRadius","List","disablePadding","component","accept","reader","FileReader","files","_toConsumableArray","onload","event","imgObj","Image","result","Math","min","_editor$canvas","image","setBackgroundImage","bind","scaleX","scaleY","readAsDataURL","WallpaperIcon","ListItemText","primaryTypographyProps","fontFamily","textAlign","centerObject","getWidth","getHeight","top","left","srcFromAttribute","add","onerror","err","InsertPhotoIcon","object","TbTextRecognition","ExtensionIcon","StickersModal","open","handleClose","addStickers","img","decodeURI","length","toGroup","ImMakeGroup","sel","getObjects","setActiveObject","FaRegObjectGroup","newItems","items","_objects","_restoreObjectsState","remove","i","FaRegObjectUngroup","myObject","bringToFront","BsLayerForward","sendBackwards","discardActiveObject","BsLayerBackward","_editor$canvas24","clone","cloned","_editor$canvas25","evented","FileCopyIcon","_editor$canvas28","_editor$canvas29","_editor$canvas30","get","filter","DeleteIcon","Button","disableElevation","xl","lg","md","margin","FabricJSCanvas","className","Modal","closeAfterTransition","position","transform","boxShadow","p","onSubmit","preventDefault","TextField","placeholder","required","multiline","maxRows","m","Dialogue","props","Dialog","onClose","DialogTitle","spacing","DialogContent","DialogContentText","stickersData","setStickersData","getStickers","_yield$axios$get","stickers","outline","flexWrap","stkr","alt"],"sourceRoot":""}