{"version":3,"file":"static/js/891.88d191ec.chunk.js","mappings":"8LA6CA,IAjCiB,SAACA,GAChB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CACLC,KAAW,OAALH,QAAK,IAALA,OAAK,EAALA,EAAOG,KACbC,QAAc,OAALJ,QAAK,IAALA,OAAK,EAALA,EAAOK,YAChB,kBAAgB,qBAChB,mBAAiB,2BAA0BC,SAAA,EAE3CC,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAACC,GAAG,qBAAoBH,UAClCC,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CAACC,UAAW,MAAOC,WAAY,SAAUC,QAAS,EAAEP,SACL,sDAKvDC,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CAAAR,UACZC,EAAAA,EAAAA,KAACQ,EAAAA,EAAiB,CAACN,GAAG,2BAA0BH,SAEzB,sGAa/B,C,6JCwBA,IA9DsB,SAAHU,GAA4C,IAAtCb,EAAIa,EAAJb,KAAME,EAAWW,EAAXX,YAAaY,EAAWD,EAAXC,YACzCC,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC5BI,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,SAEFG,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAESC,EAAAA,EAAAA,IAAU,qBAAqB,KAAD,EAAAN,EAAAG,EAAAI,KAA7CN,EAAID,EAAJC,KACRX,EAAgBW,EAAKO,UAAUL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAE/BZ,EAAS,QAASY,EAAAM,GAAMC,SAAS,yBAAAP,EAAAQ,OAAA,GAAAZ,EAAA,kBAEtC,kBAPgB,OAAAJ,EAAAiB,MAAA,KAAAC,UAAA,MAUjBC,EAAAA,EAAAA,YAAU,WACPpB,GACH,GAAG,IAqBH,OACGpB,EAAAA,EAAAA,KAACyC,EAAAA,EAAK,CAAC7C,KAAMA,EAAMC,QAASC,EAAa,kBAAgB,oBAAoB,mBAAiB,0BAAyBC,UACpHL,EAAAA,EAAAA,MAACgD,EAAAA,EAAG,CAACC,GArBG,CACXC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,CAAEC,GAAI,MAAOC,GAAI,SACxBC,QAAS,QACTC,UAAW,GACXC,EAAG,CAAEJ,GAAI,EAAGC,GAAI,GAChBI,QAAS,OACTC,OAAQ,OACRC,UAAW,aACX,QAAS,CACNJ,UAAW,mBACXJ,MAAO,OACPO,OAAQ,SAMOxD,SAAA,EACZC,EAAAA,EAAAA,KAACyD,EAAAA,EAAU,CAACC,QAAQ,KAAKC,SAAU,OAAQC,WAAY,MAAOC,UAAW,SAAS9D,SAAC,oBAGnFC,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CAAC2D,GAAI,EAAG1D,UAAW,MAAO2D,SAAU,OAAQC,SAAU,OAAOjE,SACnD,OAAZgB,QAAY,IAAZA,OAAY,EAAZA,EAAckD,KAAI,SAACC,EAAMC,GAExB,OAAOnE,EAAAA,EAAAA,KAACoE,EAAAA,EAAQ,CAEZC,QAAS,SAACC,GACPxE,IACAY,EAAY4D,EACf,EACAC,MAAK,0BAAAC,OAAgC,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMO,OAAQ1E,UAC/CC,EAAAA,EAAAA,KAAA,OAAK0E,IAAI,QAAQC,IAAG,0BAAAH,OAAgC,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMO,UAPpCN,EASxB,UAKf,C,sdCihCA,UAriCqB,WAAO,IAADS,EAAAC,EAAAC,EAAAC,EACnBC,GAAMC,EAAAA,EAAAA,QAAO,MACXhE,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,SACRN,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCuE,EAASrE,EAAA,GAAEsE,EAAYtE,EAAA,GAC9BuE,GAA0BxE,EAAAA,EAAAA,UAAS,IAAGyE,IAAAvE,EAAAA,EAAAA,GAAAsE,EAAA,GAAxBE,IAAFD,GAAA,GAAUA,GAAA,IACtBE,IAA6CC,EAAAA,EAAAA,KAArCC,GAAMF,GAANE,OAAQC,GAAOH,GAAPG,QAASC,GAAeJ,GAAfI,gBACzBC,IAAwBhF,EAAAA,EAAAA,YAAUiF,IAAA/E,EAAAA,EAAAA,GAAA8E,GAAA,GAClCE,IADWD,GAAA,GAASA,GAAA,IACoBjF,EAAAA,EAAAA,aAAUmF,IAAAjF,EAAAA,EAAAA,GAAAgF,GAAA,GAA3CE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,IAAgDtF,EAAAA,EAAAA,WAAS,GAAMuF,IAAArF,EAAAA,EAAAA,GAAAoF,GAAA,GAAxDE,GAAgBD,GAAA,GAAEE,GAAmBF,GAAA,GACpCG,IAAeC,EAAAA,EAAAA,MAAfD,WACRE,IAAwC5F,EAAAA,EAAAA,YAAU6F,IAAA3F,EAAAA,EAAAA,GAAA0F,GAAA,GAA3CE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,IAAwChG,EAAAA,EAAAA,UAAS,iBAAgBiG,IAAA/F,EAAAA,EAAAA,GAAA8F,GAAA,GAA1DE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GAC9BG,GAAQ,CACZ,aACA,aACA,aACA,gBACA,QACA,aAEFC,IAAwCrG,EAAAA,EAAAA,WAAS,GAAMsG,IAAApG,EAAAA,EAAAA,GAAAmG,GAAA,GAAhDE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,IAAsCzG,EAAAA,EAAAA,WAAS,GAAM0G,IAAAxG,EAAAA,EAAAA,GAAAuG,GAAA,GAA9CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAClCG,IAAoC7G,EAAAA,EAAAA,UAAS,CAC3CoC,MAAU,OAAHgC,QAAG,IAAHA,GAAY,QAATJ,EAAHI,EAAK0C,eAAO,IAAA9C,OAAT,EAAHA,EAAc+C,YACrBpE,OAAW,OAAHyB,QAAG,IAAHA,GAAY,QAATH,EAAHG,EAAK0C,eAAO,IAAA7C,OAAT,EAAHA,EAAc+C,eACtBC,IAAA/G,EAAAA,EAAAA,GAAA2G,GAAA,GAHKK,GAAUD,GAAA,GAAeA,GAAA,GAIhCE,QAAQC,IAAI,WAAYF,IACxB,IAAMG,GAAqB,WACzBb,IAAiBD,GACnB,EACMe,IAAWC,EAAAA,EAAAA,MAEbC,GAAWC,SAASC,cAAc,qBAClC/E,GAAiB,OAAR6E,SAAQ,IAARA,QAAQ,EAARA,GAAUR,aACnB5E,GAAgB,OAARoF,SAAQ,IAARA,QAAQ,EAARA,GAAUT,YA+ChBY,GAAsB,WAC1BlC,IAAqBD,GACvB,EAIQlG,KADSsI,EAAAA,EAAAA,OACFjC,EAAAA,EAAAA,MAAPrG,IAER6H,QAAQC,IAAI,QAAS9H,IAOrB,IAYMuI,GAAc,SAACnE,GAAO,IAADoE,EACzBpD,GAAShB,EAAEqE,OAAOpE,OAClBwD,QAAQC,IAAI1D,EAAEqE,OAAOpE,QACL,OAANkB,SAAM,IAANA,IAAc,QAARiD,EAANjD,GAAQmD,cAAM,IAAAF,OAAR,EAANA,EAAgBG,mBACxBC,IAAI,OAAQxE,EAAEqE,OAAOpE,OACjB,OAANkB,SAAM,IAANA,IAAAA,GAAQsD,eAAezE,EAAEqE,OAAOpE,OAC1B,OAANkB,SAAM,IAANA,IAAAA,GAAQmD,OAAOI,WACjB,EAwBA,IAyOMC,GAAsB,CAC1BC,QAAS,UACTC,WAAY,iBACZC,OAAQ,oBACRpG,MAAO,OACPqG,SAAU,OACVC,QAAS,MACTC,QAAS,OACTC,cAAe,SACf,UAAW,CACTrG,QAAS,cACTsG,YAAa,UACb,QAAS,CAAEC,MAAO,WAClB,SAAU,CAAEA,MAAO,YAErB,WAAY,CAAEC,MAAO,OAIjBC,GAAuB,CAC3BV,QAAS,MACTC,WAAY,iBAEZG,QAAS,MACTC,QAAS,OACT,QAAS,CACP5F,SAAU,OACVkG,YAAa,OAEf,SAAU,CAAEjG,WAAY,OACxB,UAAW,CACTT,QAAS,cACTsG,YAAa,UACb,QAAS,CAAEC,MAAO,WAClB,SAAU,CAAEA,MAAO,YAErB,WAAY,CAAEC,MAAO,OAIjBG,GAAuB,CAC3BZ,QAAS,MACTC,WAAY,iBACZG,QAAS,MACTC,QAAS,OACTQ,eAAgB,SAChB,0BAA2B,CACzBC,SAAU,IAEZ,QAAS,CACPrG,SAAU,OACVkG,YAAa,OAEf,UAAW,CACT1G,QAAS,cACTsG,YAAa,UACb,QAAS,CAAEC,MAAO,WAClB,SAAU,CAAEA,MAAO,YAErB,WAAY,CAAEC,MAAO,OAGjBM,GAAW,eAAAxJ,GAAAa,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO6C,GAAC,IAAA4F,EAAAC,EAAA,OAAA5I,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKrB,OALqBF,EAAAC,KAAA,EAElBoI,EAAW,IAAIE,SACrBlF,EAAUmF,SAAQ,SAACC,GACjBJ,EAASK,OAAO,QAASD,EAC3B,IAAGzI,EAAAE,KAAA,EACeC,EAAAA,EAAAA,KAAW,sBAAuBkI,GAAU,KAAD,EAAvDC,EAAGtI,EAAAI,KACTuI,KACAzC,QAAQC,IAAImC,GAAKtI,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAEjBkG,QAAQC,IAAGnG,EAAAM,IAAQ,yBAAAN,EAAAQ,OAAA,GAAAZ,EAAA,mBAEtB,gBAZgBgJ,GAAA,OAAAhK,EAAA6B,MAAA,KAAAC,UAAA,KAeXiI,GAAa,eAAAnJ,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkJ,IAAA,IAAAC,EAUXC,EAAa,OAAArJ,EAAAA,EAAAA,KAAAK,MAAC,SAADiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,OAAb6I,EAAa,SAACE,EAASC,GAC9B,IAAMC,EAAcC,EAAAA,GAAAA,KAAYH,EAAQI,MAAM,KAAK,GAAI,UACvD,OAAO,IAAIC,KAAK,CAACH,GAAcD,EAAU,CAAEK,KAAM,aACnD,EAZMT,EAAkB,OAANlF,SAAM,IAANA,QAAM,EAANA,GAAQmD,OAAOyC,UAAU,CACzCC,OAAQ,MAERC,QAAS,EACTvI,MAAO,IACPO,OAAQ,IACRiI,WAAY,EACZC,WAAY,IAQdC,GADWd,EAAcD,EAAW,qBACjB,wBAAAE,EAAAxI,OAAA,GAAAqI,EAAA,KACpB,kBAjBkB,OAAArJ,EAAAiB,MAAA,KAAAC,UAAA,KAiBjB,SAEamJ,GAAYC,GAAA,OAAAC,GAAAtJ,MAAC,KAADC,UAAA,CAwB3B,SAAAqJ,KADC,OACDA,IAAAtK,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAxBA,SAAAqK,EAA4BC,GAAI,IAAA5B,EAAA6B,EAAA,OAAAxK,EAAAA,EAAAA,KAAAK,MAAA,SAAAoK,GAAA,cAAAA,EAAAlK,KAAAkK,EAAAjK,MAAA,OAeU,OAfViK,EAAAlK,KAAA,EAE5BmK,EAAAA,OAAAA,MAAAA,UAAAA,SAAmC,SAAUC,GAC3C,OAAO,WACL,OAAOD,EAAAA,OAAAA,KAAAA,OAAAA,OAA0BC,EAASC,KAAKC,MAAO,CACpDC,KAAMD,KAAKC,KACX1H,IAAI,GAADH,OAAK8H,EAAAA,EAAG,qCAAA9H,OAAoC4H,KAAKC,MACpDE,YAAa,aAEjB,CACF,CARmC,CAQhCN,EAAAA,OAAAA,MAAAA,UAAAA,WACG/B,EAAW,IAAIE,UACZG,OAAO,OAAoB,OAAZvE,SAAY,IAAZA,QAAY,EAAZA,GAAcqG,MACtCnC,EAASK,OAAO,cAA2B,OAAZvE,SAAY,IAAZA,QAAY,EAAZA,GAAcwG,aAC7CtC,EAASK,OAAO,eAAgBkC,KAAKC,UAAgB,OAANjH,SAAM,IAANA,QAAM,EAANA,GAAQmD,OAAO+D,WAC9DzC,EAASK,OAAO,eAAgBuB,GAAME,EAAAjK,KAAA,EACfC,EAAAA,EAAAA,MAAY,aAADwC,OAAc8B,IAAc4D,GAAU,KAAD,EAAjE6B,EAAQC,EAAA/J,KACdwD,GAAOmD,OAAOgE,QACd3L,EAAS8K,EAASpK,KAAKkL,OAAQd,EAASpK,KAAKS,SAC7C8F,GAAS,wBAAwB8D,EAAAjK,KAAA,iBAAAiK,EAAAlK,KAAA,GAAAkK,EAAA7J,GAAA6J,EAAA,SAEjCjE,QAAQC,IAAGgE,EAAA7J,IAAQ,yBAAA6J,EAAA3J,OAAA,GAAAwJ,EAAA,oBAEtBvJ,MAAA,KAAAC,UAAA,CAED,IAAMuK,GAAe,eAAAC,GAAAzL,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAwL,IAAA,IAAAtL,EAAAuL,EAAA,OAAA1L,EAAAA,EAAAA,KAAAK,MAAA,SAAAsL,GAAA,cAAAA,EAAApL,KAAAoL,EAAAnL,MAAA,cAAAmL,EAAApL,KAAA,EAAAoL,EAAAnL,KAAA,EAEGC,EAAAA,EAAAA,IAAU,aAADwC,OAAc8B,KAAc,KAAD,EAAA5E,EAAAwL,EAAAjL,KAAnDN,EAAID,EAAJC,KACRoG,QAAQC,IAAI,SAAUrG,GACtBsE,GAAgBtE,EAAKwL,UACrBxG,GAAgBhF,EAAKwL,SAASzG,cAAcwG,EAAAnL,KAAA,iBAAAmL,EAAApL,KAAA,GAAAoL,EAAA/K,GAAA+K,EAAA,SAE5CnF,QAAQC,IAAGkF,EAAA/K,IAAQ,yBAAA+K,EAAA7K,OAAA,GAAA2K,EAAA,mBAEtB,kBAToB,OAAAD,EAAAzK,MAAA,KAAAC,UAAA,KAWf6K,GAA0B,WAC9B,IAAMC,EAAgBC,OAAOC,WAAa,IACpCC,EAAaF,OAAOG,WAAW,2BAA2BC,QAChE3F,QAAQC,IAAI,gBAAiBqF,EAAe,gBAAiBG,GACzDH,GACF7F,IAAe,GACfa,SAASsF,eAAe,YAAYC,MAAMC,KAAO,MACjD5F,OAEAI,SAASsF,eAAe,YAAYC,MAAMC,KAAO,OACjDrG,IAAe,GACfJ,IAAgB,GAEpB,EA6BA,OAxBA5E,EAAAA,EAAAA,YAAU,WACF,OAANiD,SAAM,IAANA,IAAAA,GAAQmD,OAAOkF,aAAapH,GAC9B,GAAG,CAACA,MACJlE,EAAAA,EAAAA,YAAU,WACRsK,IACF,GAAG,KAEHtK,EAAAA,EAAAA,YAAU,WAQR,OAPA4K,KAEI7F,KACFc,SAASsF,eAAe,YAAYC,MAAMC,KAAO,OAEnDP,OAAOS,iBAAiB,SAAUX,IAE3B,WACLE,OAAOU,oBAAoB,SAAUZ,GAEvC,CACF,GAAG,KAMD1N,EAAAA,EAAAA,MAAAuO,EAAAA,SAAA,CAAAlO,SAAA,EACEL,EAAAA,EAAAA,MAACgD,EAAAA,EAAG,CAACwL,SAAU,OAAQ1K,UAAW,aAActD,GAAG,WAAUH,SAAA,EAC3DC,EAAAA,EAAAA,KAACyD,EAAAA,EAAU,CACTC,QAAQ,KACRyK,MAAM,SACNtK,UAAW,SACXD,WAAW,MACXD,SAAU,OACVyK,GAAI,EACJzL,GAAI,CACF+G,MAAO,UACP1G,MAAO,QACPjD,SACH,kBAG4C,YAAtC,OAAN0F,SAAM,IAANA,IAAc,QAARX,EAANW,GAAQmD,cAAM,IAAA9D,GAAmB,QAAnBC,EAAdD,EAAgB+D,yBAAiB,IAAA9D,OAA3B,EAANA,EAAmCqG,QAClCpL,EAAAA,EAAAA,KAAAiO,EAAAA,SAAA,CAAAlO,UAEEC,EAAAA,EAAAA,KAACqO,EAAAA,GAAI,CAACC,MAAI,EAACxK,GAAI,EAAGb,GAAI,GAAIe,SAAU,OAAOjE,UACzCL,EAAAA,EAAAA,MAACS,EAAAA,EAAK,CACJC,UAAW,MACXC,WAAY,SACZ0J,eAAgB,SAChBX,OAAQ,oBACR8E,SAAU,MACV1K,UAAW,aACXR,MAAO,OAAOjD,SAAA,EAGdC,EAAAA,EAAAA,KAACuO,EAAAA,EAAc,CAAC5L,IAAE6L,EAAAA,EAAAA,GAAA,GAAO1E,IAAuB/J,UAC9CL,EAAAA,EAAAA,MAAC+O,EAAAA,EAAW,CAACC,WAAS,EAAA3O,SAAA,EACpBC,EAAAA,EAAAA,KAAC2O,EAAAA,EAAU,CAACzO,GAAG,2BAA0BH,SAAC,WAC1CC,EAAAA,EAAAA,KAAC4O,EAAAA,EAAM,CACLC,QAAQ,2BACR3O,GAAG,qBACHqE,MAAOuC,GACPgI,MAAM,cACNC,KAAK,QACLC,SA/YD,SAAC1K,GAClByD,QAAQC,IAAI,kBACZjB,GAAgBzC,EAAEqE,OAAOpE,OACzB,IAAM0K,EAAIxJ,GAAOmD,OAAOC,kBAAkBC,IAAI,aAAcxE,EAAEqE,OAAOpE,OACrEwD,QAAQC,IAAI,SAAUiH,GACtBxJ,GAAOmD,OAAOI,WAChB,EAyYyCjJ,SAEf,OAALiH,SAAK,IAALA,QAAK,EAALA,GAAO/C,KAAI,SAACiL,EAAM/K,GACjB,OACEnE,EAAAA,EAAAA,KAACoE,EAAAA,EAAQ,CAAaG,MAAO2K,EAAKnP,SAC/BmP,GADY/K,EAInB,YAMNnE,EAAAA,EAAAA,KAACuO,EAAAA,EAAc,CACb5L,IAAE6L,EAAAA,EAAAA,GAAA,GAAO1E,IACTzF,QAASoE,GAAY1I,UAErBC,EAAAA,EAAAA,KAAA,SAAOoL,KAAK,QAAQ4D,SAAUvG,QAIhCzI,EAAAA,EAAAA,KAACuO,EAAAA,EAAc,CAAC5L,IAAE6L,EAAAA,EAAAA,GAAA,GAAO1E,IAAwBzF,QA5ZlD,WAAO,IAAD8K,EAC8CC,EAAAC,EAGxDC,EAAAC,EAH8C,YAA3C,OAAN9J,SAAM,IAANA,IAAc,QAAR0J,EAAN1J,GAAQmD,cAAM,IAAAuG,OAAR,EAANA,EAAgBtG,kBAAkBjF,aAC9B,OAAN6B,SAAM,IAANA,IAAc,QAAR2J,EAAN3J,GAAQmD,cAAM,IAAAwG,GAAdA,EAAgBvG,kBAAkBC,IAAI,aAAc,QAC9C,OAANrD,SAAM,IAANA,IAAc,QAAR4J,EAAN5J,GAAQmD,cAAM,IAAAyG,GAAdA,EAAgBrG,cAEV,OAANvD,SAAM,IAANA,IAAc,QAAR6J,EAAN7J,GAAQmD,cAAM,IAAA0G,GAAdA,EAAgBzG,kBAAkBC,IAAI,aAAc,UAC9C,OAANrD,SAAM,IAANA,IAAc,QAAR8J,EAAN9J,GAAQmD,cAAM,IAAA2G,GAAdA,EAAgBvG,YAEpB,EAoZ6EjJ,UAC7DC,EAAAA,EAAAA,KAACwP,EAAAA,EAAY,CAAAzP,UACXC,EAAAA,EAAAA,KAACyP,EAAAA,EAAc,SAKnBzP,EAAAA,EAAAA,KAACuO,EAAAA,EAAc,CACb5L,IAAE6L,EAAAA,EAAAA,GAAA,GAAO1E,IACTzF,QA1ZD,WAAO,IAADqL,EAC2CC,EAAAC,EAGvDC,EAAAC,EAH6C,YAA1C,OAANrK,SAAM,IAANA,IAAc,QAARiK,EAANjK,GAAQmD,cAAM,IAAA8G,OAAR,EAANA,EAAgB7G,kBAAkBkH,YAC9B,OAANtK,SAAM,IAANA,IAAc,QAARkK,EAANlK,GAAQmD,cAAM,IAAA+G,GAAdA,EAAgB9G,kBAAkBC,IAAI,YAAa,UAC7C,OAANrD,SAAM,IAANA,IAAc,QAARmK,EAANnK,GAAQmD,cAAM,IAAAgH,GAAdA,EAAgB5G,cAEV,OAANvD,SAAM,IAANA,IAAc,QAARoK,EAANpK,GAAQmD,cAAM,IAAAiH,GAAdA,EAAgBhH,kBAAkBC,IAAI,YAAa,UAC7C,OAANrD,SAAM,IAANA,IAAc,QAARqK,EAANrK,GAAQmD,cAAM,IAAAkH,GAAdA,EAAgB9G,YAEpB,EAkZgCjJ,UAEhBC,EAAAA,EAAAA,KAACwP,EAAAA,EAAY,CAAAzP,UACXC,EAAAA,EAAAA,KAACgQ,EAAAA,EAAgB,SAKrBhQ,EAAAA,EAAAA,KAACuO,EAAAA,EAAc,CACb5L,IAAE6L,EAAAA,EAAAA,GAAA,GAAO1E,IACTzF,QAzZE,WAAO,IAAD4L,EAC2BC,EAAAC,EAG1CC,EAAAC,EAHG,OAAN5K,SAAM,IAANA,IAAc,QAARwK,EAANxK,GAAQmD,cAAM,IAAAqH,GAAdA,EAAgBpH,kBAAkByH,WAC9B,OAAN7K,SAAM,IAANA,IAAc,QAARyK,EAANzK,GAAQmD,cAAM,IAAAsH,GAAdA,EAAgBrH,kBAAkBC,IAAI,aAAa,GAC7C,OAANrD,SAAM,IAANA,IAAc,QAAR0K,EAAN1K,GAAQmD,cAAM,IAAAuH,GAAdA,EAAgBnH,cAEV,OAANvD,SAAM,IAANA,IAAc,QAAR2K,EAAN3K,GAAQmD,cAAM,IAAAwH,GAAdA,EAAgBvH,kBAAkBC,IAAI,aAAa,GAC7C,OAANrD,SAAM,IAANA,IAAc,QAAR4K,EAAN5K,GAAQmD,cAAM,IAAAyH,GAAdA,EAAgBrH,YAEpB,EAiZmCjJ,UAEnBC,EAAAA,EAAAA,KAACwP,EAAAA,EAAY,CAAAzP,UACXC,EAAAA,EAAAA,KAACuQ,EAAAA,EAAoB,SAKzBvQ,EAAAA,EAAAA,KAACuO,EAAAA,EAAc,CACb5L,IAAE6L,EAAAA,EAAAA,GAAA,GAAO1E,IACTzF,QAxZD,WAAO,IAADmM,EACoBC,EACcC,EAAAC,EAG5CC,EAAAC,EAJC,OAANpL,SAAM,IAANA,IAAc,QAAR+K,EAAN/K,GAAQmD,cAAM,IAAA4H,GAAdA,EAAgB3H,kBACR,OAANpD,SAAM,IAANA,IAAc,QAARgL,EAANhL,GAAQmD,cAAM,IAAA6H,GAAdA,EAAgB5H,kBAAkBiI,aAC9B,OAANrL,SAAM,IAANA,IAAc,QAARiL,EAANjL,GAAQmD,cAAM,IAAA8H,GAAdA,EAAgB7H,kBAAkBC,IAAI,eAAe,GAC/C,OAANrD,SAAM,IAANA,IAAc,QAARkL,EAANlL,GAAQmD,cAAM,IAAA+H,GAAdA,EAAgB3H,cAEV,OAANvD,SAAM,IAANA,IAAc,QAARmL,EAANnL,GAAQmD,cAAM,IAAAgI,GAAdA,EAAgB/H,kBAAkBC,IAAI,eAAe,GAC/C,OAANrD,SAAM,IAANA,IAAc,QAARoL,EAANpL,GAAQmD,cAAM,IAAAiI,GAAdA,EAAgB7H,aAGlB+H,MAAM,qBAEV,EA4YgChR,UAEhBC,EAAAA,EAAAA,KAACwP,EAAAA,EAAY,CAAAzP,UACXC,EAAAA,EAAAA,KAACgR,EAAAA,EAAkB,gBAU/BtR,EAAAA,EAAAA,MAAC2O,EAAAA,GAAI,CAAC4C,WAAS,EAACtO,GAAI,CAAEK,MAAO,QAASjD,SAAA,EAGpCL,EAAAA,EAAAA,MAAC2O,EAAAA,GAAI,CACHC,MAAI,EACJpL,GAAI,EACJD,GAAI,GACJO,UAAW,aACXb,GAAI,CAEF4G,QAAS,OACTC,cAAe,SACfO,eAAgB,SAChB1J,WAAY,SACZmD,UAAW,aACX0N,MAAO,CAAEjO,GAAI,EAAGC,GAAI,IAEpBnD,SAAA,EAEFC,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CACJwC,GAAI,CACFwO,UAAW,QACXnN,SAAU,OACVhB,MAAO,OACPQ,UAAW,aACX,uBAAwB,CACtBR,MAAO,OAET,6BAA8B,CAC5BoO,WAAY,UACZC,aAAc,OAEhB,6BAA8B,CAC5BD,WAAY,UACZC,aAAc,OAEhB,mCAAoC,CAClCD,WAAY,UACZC,aAAc,QAEhBtR,UAEFL,EAAAA,EAAAA,MAAC4R,EAAAA,EAAI,CACHC,gBAAc,EACd5O,GAAI,CACFK,MAAO,CAAEC,GAAI,SAAUC,GAAI,QAC3BqG,QAAS,OACTC,cAAe,CAAEvG,GAAI,MAAOC,GAAI,UAChC6G,eAAgB,CAAE9G,GAAI,eAAgBC,GAAI,UAC1C7C,WAAY,SACZmD,UAAW,aACX,0BAA2B,CACzBwG,SAAU,KAEZjK,SAAA,EAIFL,EAAAA,EAAAA,MAAC6O,EAAAA,EAAc,CACbiD,UAAW,QACX7O,IAAE6L,EAAAA,EAAAA,GAAA,GACGvF,IACHlJ,SAAA,EAEFL,EAAAA,EAAAA,MAAC8P,EAAAA,EAAY,CACX7M,GAAI,CAAE+G,MAAO,UAAW,QAAS,CAAE/F,SAAU,SAAW5D,SAAA,EAExDC,EAAAA,EAAAA,KAAA,SACEyR,OAAO,UACP7D,MAAO,CAAErE,QAAS,QAClB6B,KAAK,OACL4D,SA9qBO,SAAC1K,GAC1B,IAAMoN,EAAS,IAAIC,WACnBxM,EAAa,GAADX,QAAAoN,EAAAA,EAAAA,GAAK1M,GAAS,CAAEZ,EAAEqE,OAAOkJ,MAAM,MAS3CH,EAAOI,OAAS,SAAUC,GACxB,IAAIC,EAAS,IAAIC,MACjBD,EAAOzF,YAAc,YACrByF,EAAOrN,IAAMoN,EAAMpJ,OAAOuJ,OAC1BF,EAAOhP,MAAQA,GACKmP,KAAKC,IACvBpP,GAAQgP,EAAOhP,MACfO,GAASyO,EAAOzO,QAElByO,EAAOF,OAAS,WAAa,IAADO,EACtB5N,EAAQ,IAAIwH,EAAAA,OAAAA,MAAa+F,GAC7BvN,EAAM4H,KAAO/H,EAAEqE,OAAOkJ,MAAM,GAAGxF,KAEzB,OAAN5G,SAAM,IAANA,IAAc,QAAR4M,EAAN5M,GAAQmD,cAAM,IAAAyJ,GAAdA,EAAgBC,mBACd7N,EACAgB,GAAOmD,OAAOI,UAAUuJ,KAAK9M,GAAOmD,QAEpC,CACE4J,OAAQ/M,GAAOmD,OAAO5F,MAAQyB,EAAMzB,MACpCyP,OAAQhN,GAAOmD,OAAOrF,OAASkB,EAAMlB,QAG3C,CACF,EACAmO,EAAOgB,cAAcpO,EAAEqE,OAAOkJ,MAAM,GACtC,KA4oBkB7R,EAAAA,EAAAA,KAAC2S,EAAAA,EAAa,QAEhB3S,EAAAA,EAAAA,KAAC4S,EAAAA,EAAY,CACXC,uBAAwB,CACtBlQ,GAAI,CACF+G,MAAO,QACP/F,SAAU,OACVmP,WAAY,aACZjP,UAAW,WAEb9D,SACH,uBAQHL,EAAAA,EAAAA,MAAC6O,EAAAA,EAAc,CACbiD,UAAW,QACX7O,IAAE6L,EAAAA,EAAAA,GAAA,GACGvF,IACHlJ,SAAA,EAEFL,EAAAA,EAAAA,MAAC8P,EAAAA,EAAY,CACX7M,GAAI,CAAE+G,MAAO,UAAW,QAAS,CAAE/F,SAAU,SAAW5D,SAAA,EAExDC,EAAAA,EAAAA,KAAA,SACEyR,OAAO,UACP7D,MAAO,CAAErE,QAAS,QAClB6B,KAAK,OACL4D,SAtdE,SAAC1K,GACrB,IAAMoN,EAAS,IAAIC,WACnBxM,EAAa,GAADX,QAAAoN,EAAAA,EAAAA,GAAK1M,GAAS,CAAEZ,EAAEqE,OAAOkJ,MAAM,MAC3C9J,QAAQC,IAAI1D,EAAEqE,OAAOkJ,MAAM,IAC3BH,EAAOI,OAAS,SAAUC,GACxB,IAAIC,EAAS,IAAIC,MACjBD,EAAOzF,YAAc,YACrByF,EAAOrN,IAAMoN,EAAMpJ,OAAOuJ,OAC1BF,EAAOF,OAAS,WACd,IAAIrN,EAAQ,IAAIwH,EAAAA,OAAAA,MAAa+F,GAC7BvM,GAAOmD,OAAOmK,aAAatO,GAC3BA,EAAMqE,IAAI,CACR0J,QAAc,OAAN/M,SAAM,IAANA,QAAM,EAANA,GAAQmD,OAAOoK,YAAavO,EAAMzB,MAAQ,EAClDyP,QAAc,OAANhN,SAAM,IAANA,QAAM,EAANA,GAAQmD,OAAOqK,aAAcxO,EAAMlB,OAAS,EACpDV,IAAK,EACLC,KAAM,EACNoQ,kBAAkB,IAEpBzO,EAAM4H,KAAO/H,EAAEqE,OAAOkJ,MAAM,GAAGxF,KACzB,OAAN5G,SAAM,IAANA,IAAAA,GAAQmD,OAAOuK,IAAI1O,GACb,OAANgB,SAAM,IAANA,IAAAA,GAAQmD,OAAOI,WACjB,CACF,EACA0I,EAAO0B,QAAU,SAACC,GAAG,OAAKtL,QAAQC,IAAIqL,EAAK,EAC3C3B,EAAOgB,cAAcpO,EAAEqE,OAAOkJ,MAAM,GAOtC,KAybkB7R,EAAAA,EAAAA,KAACsT,EAAAA,EAAe,QAElBtT,EAAAA,EAAAA,KAAC4S,EAAAA,EAAY,CACXC,uBAAwB,CACtBlQ,GAAI,CACF+G,MAAO,QACP/F,SAAU,OACVmP,WAAY,aACZjP,UAAW,WAEb9D,SACH,cAQHL,EAAAA,EAAAA,MAAC6O,EAAAA,EAAc,CACb5L,IAAE6L,EAAAA,EAAAA,GAAA,GAAOvF,IACT5E,QA1qBA,WACd,IAAMkP,EAAS,IAAItH,EAAAA,OAAAA,MAAa,eAAgB,CAC9C6G,WAAY,YACZnP,SAAU,GACVb,KAAME,GAAQ,EACdH,IAAKU,GAAS,IAEhBkC,GAAOmD,OAAOuK,IAAII,EACpB,EAkqBiCxT,SAAA,EAEjBC,EAAAA,EAAAA,KAACwP,EAAAA,EAAY,CACX7M,GAAI,CAAE+G,MAAO,UAAW,QAAS,CAAE/F,SAAU,SAAW5D,UAExDC,EAAAA,EAAAA,KAACwT,EAAAA,IAAiB,OAEpBxT,EAAAA,EAAAA,KAAC4S,EAAAA,EAAY,CACXC,uBAAwB,CACtBlQ,GAAI,CACF+G,MAAO,QACP/F,SAAU,OACVmP,WAAY,aACZjP,UAAW,WAEb9D,SACH,aAMHL,EAAAA,EAAAA,MAAC6O,EAAAA,EAAc,CACb5L,IAAE6L,EAAAA,EAAAA,GAAA,GAAOvF,IACT5E,QAASkE,GAAoBxI,SAAA,EAE7BC,EAAAA,EAAAA,KAACwP,EAAAA,EAAY,CACX7M,GAAI,CAAE+G,MAAO,UAAW,QAAS,CAAE/F,SAAU,SAAW5D,UAExDC,EAAAA,EAAAA,KAACyT,EAAAA,EAAa,OAEhBzT,EAAAA,EAAAA,KAAC4S,EAAAA,EAAY,CACXC,uBAAwB,CACtBlQ,GAAI,CACF+G,MAAO,QACP/F,SAAU,OACVmP,WAAY,aACZjP,UAAW,WAEb9D,SACH,iBAIHC,EAAAA,EAAAA,KAAC0T,EAAAA,EAAa,CACZ9T,KAAMwG,GACNtG,YAAayI,GACb7H,YAjpBI,SAAC4D,GACnB2H,EAAAA,OAAAA,MAAAA,QACE3H,EAAEqE,OAAOhE,KACT,SAACgP,GACCA,EAAIhK,MAAM,IACVgK,EAAItH,KAAOuH,UACTtP,EAAEqE,OAAOhE,IAAIuG,MAAM,MAAM5G,EAAEqE,OAAOhE,IAAIuG,MAAM,MAAM2I,OAAS,IAE7DpO,GAAOmD,OAAOuK,IAAIQ,GAClBlO,GAAOmD,OAAOI,WAChB,GACA,CACElG,KAAME,GAAQ,EACdH,IAAKU,GAAS,GAGpB,KAqoBc7D,EAAAA,EAAAA,MAACS,EAAAA,EAAK,CACJ2D,GAAI,EACJzD,WAAY,QACZD,UAAW,CAAE6C,GAAI,MAAOC,GAAI,UAC5BF,MAAO,CAAEC,GAAI,QAASC,GAAI,QAASnD,SAAA,EAGnCL,EAAAA,EAAAA,MAAC6O,EAAAA,EAAc,CACb5L,IAAE6L,EAAAA,EAAAA,GAAA,GAAO5E,IACTvF,QAhtBU,WAC1BoB,GAAOmD,OAAOC,kBAAkBiL,UAChCrO,GAAOmD,OAAOI,WAChB,EA6sB+CjJ,SAAA,EAE7BC,EAAAA,EAAAA,KAACwP,EAAAA,EAAY,CAAC7M,GAAI,CAAE+G,MAAO,WAAY3J,UACrCC,EAAAA,EAAAA,KAAC+T,EAAAA,IAAW,OAEd/T,EAAAA,EAAAA,KAAC4S,EAAAA,EAAY,CACXC,uBAAwB,CACtBlQ,GAAI,CACF+G,MAAO,QACP/F,SAAU,OACVmP,WAAY,aACZjP,UAAW,WAEb9D,SACH,uBAOHL,EAAAA,EAAAA,MAAC6O,EAAAA,EAAc,CACb5L,IAAE6L,EAAAA,EAAAA,GAAA,GAAO5E,IACTvF,QAhuBlB,WAEE,IAAI2P,EAAM,IAAI/H,EAAAA,OAAAA,gBAAuBxG,GAAOmD,OAAOqL,aAAc,CAC/DrL,OAAQnD,GAAOmD,SAIjBnD,GAAOmD,OAAOsL,gBAAgBF,GAGfvO,GAAOmD,OAAOC,kBAAkBiL,UAC/CrO,GAAOmD,OAAOI,WAChB,EAotB0CjJ,SAAA,EAExBC,EAAAA,EAAAA,KAACwP,EAAAA,EAAY,CAAC7M,GAAI,CAAE+G,MAAO,WAAY3J,UACrCC,EAAAA,EAAAA,KAACmU,EAAAA,IAAgB,OAEnBnU,EAAAA,EAAAA,KAAC4S,EAAAA,EAAY,CACXC,uBAAwB,CACtBlQ,GAAI,CACF+G,MAAO,QACP/F,SAAU,OACVmP,WAAY,aACZjP,UAAW,WAEb9D,SACH,kBAOHL,EAAAA,EAAAA,MAAC6O,EAAAA,EAAc,CACb5L,IAAE6L,EAAAA,EAAAA,GAAA,GAAO5E,IACTvF,QA1tBF,WAEd,IAAI+P,EAAW3O,GAAOmD,OAAOC,kBACzBwL,EAAQD,EAASE,SACrBF,EAASG,uBACT9O,GAAOmD,OAAO4L,OAAOJ,GACrB,IAAK,IAAIK,EAAI,EAAGA,EAAIJ,EAAMR,OAAQY,IAChChP,GAAOmD,OAAOuK,IAAIkB,EAAMI,IAG1BhP,GAAOmD,OAAOI,WAChB,EA+sBmCjJ,SAAA,EAEjBC,EAAAA,EAAAA,KAACwP,EAAAA,EAAY,CACX7M,GAAI,CAAE+G,MAAO,UAAW,QAAS,CAAE/F,SAAU,SAAW5D,UAExDC,EAAAA,EAAAA,KAAC0U,EAAAA,IAAkB,OAErB1U,EAAAA,EAAAA,KAAC4S,EAAAA,EAAY,CACXC,uBAAwB,CACtBlQ,GAAI,CACF+G,MAAO,QACP/F,SAAU,OACVmP,WAAY,aACZjP,UAAW,WAEb9D,SACH,gBAOHL,EAAAA,EAAAA,MAAC6O,EAAAA,EAAc,CACblK,QAzvBC,WACjB,IAAMsQ,EAAWlP,GAAOmD,OAAOC,kBAC/BpD,GAAOmD,OAAOgM,aAAaD,GAC3BlP,GAAOmD,OAAOI,WAChB,EAsvBkBrG,IAAE6L,EAAAA,EAAAA,GAAA,GAAO5E,IAAuB7J,SAAA,EAEhCC,EAAAA,EAAAA,KAACwP,EAAAA,EAAY,CAAC7M,GAAI,CAAE+G,MAAO,WAAY3J,UACrCC,EAAAA,EAAAA,KAAC6U,EAAAA,IAAc,OAEjB7U,EAAAA,EAAAA,KAAC4S,EAAAA,EAAY,CACXC,uBAAwB,CACtBlQ,GAAI,CACF+G,MAAO,QACP/F,SAAU,OACVC,WAAY,QAEd7D,SACH,qBAOHL,EAAAA,EAAAA,MAAC6O,EAAAA,EAAc,CACblK,QAvxBG,WACnB,IAAMsQ,EAAWlP,GAAOmD,OAAOC,kBAC/BpD,GAAOmD,OAAOkM,cAAcH,GAC5BlP,GAAOmD,OAAOmM,qBAChB,EAoxBkBpS,IAAE6L,EAAAA,EAAAA,GAAA,GAAO5E,IAAuB7J,SAAA,EAEhCC,EAAAA,EAAAA,KAACwP,EAAAA,EAAY,CAAC7M,GAAI,CAAE+G,MAAO,WAAY3J,UACrCC,EAAAA,EAAAA,KAACgV,EAAAA,IAAe,OAElBhV,EAAAA,EAAAA,KAAC4S,EAAAA,EAAY,CACXC,uBAAwB,CACtBlQ,GAAI,CACF+G,MAAO,QACP/F,SAAU,OACVC,WAAY,QAEd7D,SACH,qBAMHL,EAAAA,EAAAA,MAAC6O,EAAAA,EAAc,CACblK,QA1rBJ,WAAO,IAAD4Q,EACZ,OAANxP,SAAM,IAANA,IAAc,QAARwP,EAANxP,GAAQmD,cAAM,IAAAqM,GAAdA,EAAgBpM,kBAAkBqM,OAAM,SAACC,GAAY,IAADC,EAClDD,EAAOrM,IAAI,CACThG,KAAMqS,EAAOrS,KAAO,GACpBD,IAAKsS,EAAOtS,IAAM,GAClBwS,SAAS,IAEL,OAAN5P,SAAM,IAANA,IAAc,QAAR2P,EAAN3P,GAAQmD,cAAM,IAAAwM,GAAdA,EAAgBjC,IAAIgC,EACtB,GACF,EAkrBkBxS,IAAE6L,EAAAA,EAAAA,GAAA,GAAO5E,IAAuB7J,SAAA,EAEhCC,EAAAA,EAAAA,KAACwP,EAAAA,EAAY,CAAC7M,GAAI,CAAE+G,MAAO,WAAY3J,UACrCC,EAAAA,EAAAA,KAACsV,EAAAA,EAAY,OAEftV,EAAAA,EAAAA,KAAC4S,EAAAA,EAAY,CACXC,uBAAwB,CACtBlQ,GAAI,CACF+G,MAAO,QACP/F,SAAU,OACVC,WAAY,QAEd7D,SACH,cAMHL,EAAAA,EAAAA,MAAC6O,EAAAA,EAAc,CACb5L,IAAE6L,EAAAA,EAAAA,GAAA,GAAO5E,IACTvF,QAxmBW,WAAO,IAADkR,EAAAC,EAAAC,EAC7B9P,GAAgB,IAAyC,UAAnCA,GAAgB,GAAG+P,IAAI,SAC/CvQ,EACED,EAAUyQ,QAAO,SAAC7J,GAAI,OAAKA,EAAKO,OAAS1G,GAAgB,GAAG0G,IAAI,KAG9D,OAAN5G,SAAM,IAANA,IAAc,QAAR8P,EAAN9P,GAAQmD,cAAM,IAAA2M,GAAdA,EAAgBf,OAAa,OAAN/O,SAAM,IAANA,IAAc,QAAR+P,EAAN/P,GAAQmD,cAAM,IAAA4M,OAAR,EAANA,EAAgB3M,mBACjC,OAANpD,SAAM,IAANA,IAAc,QAARgQ,EAANhQ,GAAQmD,cAAM,IAAA6M,GAAdA,EAAgBzM,WAClB,EAgmBgDjJ,SAAA,EAE9BC,EAAAA,EAAAA,KAACwP,EAAAA,EAAY,CACX7M,GAAI,CAAE+G,MAAO,UAAW,QAAS,CAAE/F,SAAU,SAAW5D,UAExDC,EAAAA,EAAAA,KAAC4V,EAAAA,EAAU,OAEb5V,EAAAA,EAAAA,KAAC4S,EAAAA,EAAY,CACXC,uBAAwB,CACtBlQ,GAAI,CACF+G,MAAO,QACP/F,SAAU,OACVmP,WAAY,aACZjP,UAAW,WAEb9D,SACH,uBAQTC,EAAAA,EAAAA,KAAC6V,EAAAA,EAAM,CACLnH,WAAS,EACToH,kBAAgB,EAChBpS,QAAQ,YAGRW,QAAS4F,GACTtH,GAAI,CAAE+G,MAAO,OAAQ5F,GAAI,GAAI/D,SAC9B,YAGDC,EAAAA,EAAAA,KAAC6V,EAAAA,EAAM,CACLnH,WAAS,EACToH,kBAAgB,EAChBpS,QAAQ,WACRW,QAAS,kBAAM6D,GAAS,uBAAuB,EAC/CvF,GAAI,CAAEmB,GAAI,GAAI/D,SACf,eAMHC,EAAAA,EAAAA,KAACqO,EAAAA,GAAI,CACHC,MAAI,EACJyH,GAAI,GACJC,GAAI,GACJC,GAAI,GACJ/S,GAAI,GACJD,GAAI,GACJN,GAAI,CACFa,UAAW,aAEXR,MAAO,OAEPkO,MAAO,EACPhD,SAAU,MACV,eAAgB,CACd3K,OAAQ,OACRP,MAAO,OACPoG,OAAQ,oBACR5F,UAAW,cAEb,kBAAmB,CACjB4N,WAAY,SAEdrR,UAEFC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAG,CACFM,MAAO,CAAEiT,GAAI,QAAS/S,GAAI,QAASD,GAAI,SACvCM,OAAQ,QACRyB,IAAKA,EACLrC,GAAI,CAAEuT,OAAQ,OAAQ9M,OAAQ,mBAAoBrJ,UAElDC,EAAAA,EAAAA,KAACmW,EAAAA,EAAc,CAACC,UAAU,YAAY1Q,QAASA,gBAKvD1F,EAAAA,EAAAA,KAACqW,EAAAA,EAAQ,CAACzW,KAAMuH,GAAcrH,YAAamI,OAGjD,C,oEC/kCO,IAAMqE,EAAM,0B","sources":["screen/Dialogue.js","screen/StickersModal.js","screen/TemplatePreview/TemplateEdit.js","url.js"],"sourcesContent":["import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport ScreenRotationIcon from \"@mui/icons-material/ScreenRotation\";\r\nconst Dialogue = (props) => {\r\n  return (\r\n    <Dialog\r\n      open={props?.open}\r\n      onClose={props?.handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">\r\n        <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n          {/* <Typography> {\"Rotate Screen\"}</Typography> */}\r\n          This device is incompatible to Create Template\r\n          {/* <ScreenRotationIcon /> */}\r\n        </Stack>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {/* Let device to be in landscape mode , just to experience better template\r\n          design interface, */}\r\n          You will not able to edit templates in small screen devices, use\r\n          bigger screen device to edit\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      {/* <DialogActions>\r\n        \r\n        <Button onClick={props?.handleClose} autoFocus>\r\n          ok\r\n        </Button>\r\n      </DialogActions> */}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Dialogue;\r\n","import { Box, Menu, MenuItem, Modal, Stack, Typography } from \"@mui/material\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { DataContext } from \"../AppContext\";\r\nimport axios from \"axios\";\r\n\r\nconst StickersModal = ({ open, handleClose, addStickers }) => {\r\n   const [stickersData, setStickersData] = useState([]);\r\n   const { snackbar } = useContext(DataContext);\r\n\r\n   const getStickers = async () => {\r\n      try {\r\n         const { data } = await axios.get(\"template/stickers\");\r\n         setStickersData(data.stickers);\r\n      } catch (error) {\r\n         snackbar(\"error\", error.message);\r\n      }\r\n   };\r\n\r\n   \r\n   useEffect(() => {\r\n      getStickers();\r\n   }, []);\r\n\r\n   const style = {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n      width: { xs: \"85%\", sm: \"400px\" },\r\n      bgcolor: \"white\",\r\n      boxShadow: 24,\r\n      p: { xs: 2, sm: 4 },\r\n      outline: \"none\",\r\n      height: \"60vh\",\r\n      boxSizing: \"border-box\",\r\n      \"& img\": {\r\n         boxShadow: \"2px 5px 5px grey\",\r\n         width: \"70px\",\r\n         height: \"70px\",\r\n      },\r\n   };\r\n\r\n   return (\r\n      <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\r\n         <Box sx={style}>\r\n            <Typography variant=\"h5\" fontSize={\"20px\"} fontWeight={\"800\"} textAlign={\"center\"}>\r\n               Select sticker\r\n            </Typography>\r\n            <Stack mt={2} direction={\"row\"} flexWrap={\"wrap\"} overflow={\"auto\"}>\r\n               {stickersData?.map((stkr, index) => {\r\n                  \r\n                 return <MenuItem key={index}\r\n\r\n                     onClick={(e) => {\r\n                        handleClose();\r\n                        addStickers(e);\r\n                     }}\r\n                     value={`/images/getImage?path=/${stkr?.image}`}>\r\n                     <img alt=\"image\" src={`/images/getImage?path=/${stkr?.image}`} />\r\n                  </MenuItem>;\r\n               })}\r\n            </Stack>\r\n         </Box>\r\n      </Modal>\r\n   );\r\n};\r\n\r\nexport default StickersModal;\r\n","import {\r\n  Grid,\r\n  Button,\r\n  List,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Stack,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  IconButton,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport { FabricJSCanvas, useFabricJSEditor } from \"fabricjs-react\";\r\nimport { fabric } from \"fabric\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\r\nimport { Buffer } from \"buffer\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport InsertPhotoIcon from \"@mui/icons-material/InsertPhoto\";\r\nimport { TbTextRecognition } from \"react-icons/tb\";\r\nimport { FaRegObjectGroup } from \"react-icons/fa\";\r\nimport { FaRegObjectUngroup } from \"react-icons/fa\";\r\nimport { BsLayerBackward } from \"react-icons/bs\";\r\nimport { BsLayerForward } from \"react-icons/bs\";\r\nimport { ImMakeGroup } from \"react-icons/im\";\r\n// import InterestsIcon from \"@mui/icons-material/Interests\";// icon for add shapes\r\nimport ExtensionIcon from \"@mui/icons-material/Extension\";\r\nimport FormatBoldIcon from \"@mui/icons-material/FormatBold\";\r\nimport FormatItalicIcon from \"@mui/icons-material/FormatItalic\";\r\nimport FormatUnderlinedIcon from \"@mui/icons-material/FormatUnderlined\";\r\nimport StrikethroughSIcon from \"@mui/icons-material/StrikethroughS\";\r\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\";\r\nimport WallpaperIcon from \"@mui/icons-material/Wallpaper\";\r\nimport StickersModal from \"../StickersModal\";\r\nimport { useContext } from \"react\";\r\nimport { DataContext } from \"../../AppContext\";\r\nimport { url } from \"../../url\";\r\nimport Dialogue from \"../Dialogue\";\r\n\r\nconst TemplateEdit = () => {\r\n  const ref = useRef(null);\r\n  const { snackbar } = useContext(DataContext);\r\n  const [allImages, setAllImages] = useState([]);\r\n  const [color, setColor] = useState(\"\");\r\n  const { editor, onReady, selectedObjects } = useFabricJSEditor();\r\n  const [data, setData] = useState();\r\n  const [templateData, setTemplateData] = useState();\r\n  const [addStickersModal, setAddStickersModal] = useState(false);\r\n  const { templateId } = useParams();\r\n  const [templateJson, setTemplateJson] = useState();\r\n  const [selectedFont, setSelectedFont] = useState(\"Pinyon Script\");\r\n  const fonts = [\r\n    \"Sacramento\",\r\n    \"Parisienne\",\r\n    \"Montserrat\",\r\n    \"Pinyon Script\",\r\n    \"Arial\",\r\n    \"Helvetica\",\r\n  ];\r\n  const [dialogueOpen, setDialogueOpen] = useState(false);\r\n  const [isLandscape, setIsLandscape] = useState(false);\r\n  const [screenSize, setScreenSize] = useState({\r\n    width: ref?.current?.clientWidth,\r\n    height: ref?.current?.clientHeight,\r\n  });\r\n  console.log(\"screen=>\", screenSize);\r\n  const handleShowDialogue = () => {\r\n    setDialogueOpen(!dialogueOpen);\r\n  };\r\n  const navigate = useNavigate();\r\n  // ===========👇 Add background IMAGE👇  ===================\r\n  let canvasEl = document.querySelector(\".canvas-container\");\r\n  let height = canvasEl?.clientHeight;\r\n  let width = canvasEl?.clientWidth;\r\n  const setBackgroundImage = (e) => {\r\n    const reader = new FileReader();\r\n    setAllImages([...allImages, e.target.files[0]]);\r\n    \r\n    var bgImgOptions = {\r\n     \r\n      backgroundColor: \"red\",\r\n      \r\n      backgroundScaleMode: \"cover\",\r\n    };\r\n   \r\n    reader.onload = function (event) {\r\n      var imgObj = new Image();\r\n      imgObj.crossOrigin = \"Anonymous\";\r\n      imgObj.src = event.target.result;\r\n      imgObj.width = width;\r\n      const scaleFactor = Math.min(\r\n        width / imgObj.width,\r\n        height / imgObj.height\r\n      );\r\n      imgObj.onload = function () {\r\n        var image = new fabric.Image(imgObj);\r\n        image.name = e.target.files[0].name;\r\n        \r\n        editor?.canvas?.setBackgroundImage(\r\n          image,\r\n          editor.canvas.renderAll.bind(editor.canvas),\r\n          // bgImgOptions,\r\n          {\r\n            scaleX: editor.canvas.width / image.width,\r\n            scaleY: editor.canvas.height / image.height,\r\n          }\r\n        );\r\n      };\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n  // ============👆Add background IMAGE👆   =================\r\n  // ==================👇 dynamically getting canvas height and width👇  =========================\r\n  // let canvasEl = document.querySelector(\".canvas-container\");\r\n  // let height = canvasEl?.clientHeight;\r\n  // let width = canvasEl?.clientWidth;\r\n\r\n  // ===========================================\r\n\r\n  // ========== Stickers modal ============\r\n  const toggleStickersModal = () => {\r\n    setAddStickersModal(!addStickersModal);\r\n  };\r\n  // ========== For Image Upload ============\r\n\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n\r\n  console.log(\"id...\", id);\r\n\r\n  // const templateDetails = useSelector((state) => state.templateData);\r\n  // const { template, loading, error } = templateDetails;\r\n  // console.log(\"template data\", templateDetails);\r\n\r\n  // =================== Ading Text Fuc\r\n  const addText = () => {\r\n    const object = new fabric.IText(\"Text Message\", {\r\n      fontFamily: \"Helvetica\",\r\n      fontSize: 36,\r\n      left: width / 2,\r\n      top: height / 2,\r\n    });\r\n    editor.canvas.add(object);\r\n  };\r\n\r\n  // ========= THis Fuc For Changing TExt Color\r\n\r\n  const changeColor = (e) => {\r\n    setColor(e.target.value);\r\n    console.log(e.target.value);\r\n    const o = editor?.canvas?.getActiveObject();\r\n    o.set(\"fill\", e.target.value);\r\n    editor?.setStrokeColor(e.target.value);\r\n    editor?.canvas.renderAll();\r\n  };\r\n\r\n  //   ===========groupselected object to single group ====\r\n  const groupSelectedLayers = () => {\r\n    editor.canvas.getActiveObject().toGroup();\r\n    editor.canvas.renderAll();\r\n  };\r\n  // ====================================================\r\n  // ===============================================\r\n  // Function to group all the polyline objects into single object\r\n  function groupAllLayers() {\r\n    // Get all the objects as selection\r\n    var sel = new fabric.ActiveSelection(editor.canvas.getObjects(), {\r\n      canvas: editor.canvas,\r\n    });\r\n\r\n    // Make the objects active\r\n    editor.canvas.setActiveObject(sel);\r\n\r\n    // Group the objects\r\n    let newGroup = editor.canvas.getActiveObject().toGroup();\r\n    editor.canvas.renderAll();\r\n  }\r\n  // =================send back=======================\r\n  const moveBackward = () => {\r\n    const myObject = editor.canvas.getActiveObject();\r\n    editor.canvas.sendBackwards(myObject);\r\n    editor.canvas.discardActiveObject();\r\n  };\r\n  // =====================================\r\n\r\n  //   ============bring to top =============\r\n  const bringToTop = () => {\r\n    const myObject = editor.canvas.getActiveObject();\r\n    editor.canvas.bringToFront(myObject);\r\n    editor.canvas.renderAll();\r\n  };\r\n  // =====================================\r\n  //   ==================ungroup itetms ================\r\n  const unGroup = () => {\r\n    //  let items = groupCanvas._objects;\r\n    let newItems = editor.canvas.getActiveObject();\r\n    let items = newItems._objects;\r\n    newItems._restoreObjectsState();\r\n    editor.canvas.remove(newItems);\r\n    for (let i = 0; i < items.length; i++) {\r\n      editor.canvas.add(items[i]);\r\n    }\r\n\r\n    editor.canvas.renderAll();\r\n  };\r\n  // =====================================================\r\n  // ========add stickers =======================\r\n  const addStickers = (e) => {\r\n    fabric.Image.fromURL(\r\n      e.target.src,\r\n      (img) => {\r\n        img.scale(0.2);\r\n        img.name = decodeURI(\r\n          e.target.src.split(\"\\\\\")[e.target.src.split(\"\\\\\").length - 1]\r\n        );\r\n        editor.canvas.add(img);\r\n        editor.canvas.renderAll();\r\n      },\r\n      {\r\n        left: width / 2,\r\n        top: height / 2,\r\n      }\r\n    );\r\n  };\r\n  // ==============================================\r\n  //   ========================font family ===\r\n  const changeFont = (e) => {\r\n    console.log(\"font working>-\");\r\n    setSelectedFont(e.target.value);\r\n    const o = editor.canvas.getActiveObject().set(\"fontFamily\", e.target.value);\r\n    console.log(\"text=>\", o);\r\n    editor.canvas.renderAll();\r\n  };\r\n  // ========================================\r\n  //  ===👇 text style BOLD👇\r\n  const bold = () => {\r\n    if (editor?.canvas?.getActiveObject().fontWeight === \"normal\") {\r\n      editor?.canvas?.getActiveObject().set(\"fontWeight\", \"bold\");\r\n      editor?.canvas?.renderAll();\r\n    } else {\r\n      editor?.canvas?.getActiveObject().set(\"fontWeight\", \"normal\");\r\n      editor?.canvas?.renderAll();\r\n    }\r\n  };\r\n  // ===👆 text style BOLD👆\r\n  //  ===👇 text style ITALIC👇\r\n  const italic = () => {\r\n    if (editor?.canvas?.getActiveObject().fontStyle === \"normal\") {\r\n      editor?.canvas?.getActiveObject().set(\"fontStyle\", \"italic\");\r\n      editor?.canvas?.renderAll();\r\n    } else {\r\n      editor?.canvas?.getActiveObject().set(\"fontStyle\", \"normal\");\r\n      editor?.canvas?.renderAll();\r\n    }\r\n  };\r\n  // ===👆 text style ITALIC👆\r\n  //  ===👇 text style UNDERLINE👇\r\n  const underline = () => {\r\n    if (editor?.canvas?.getActiveObject().underline) {\r\n      editor?.canvas?.getActiveObject().set(\"underline\", false);\r\n      editor?.canvas?.renderAll();\r\n    } else {\r\n      editor?.canvas?.getActiveObject().set(\"underline\", true);\r\n      editor?.canvas?.renderAll();\r\n    }\r\n  };\r\n  // ===👆 text style UNDERLINE👆\r\n  //  ===👇 text style STRIKE THROUGH👇\r\n  const strike = () => {\r\n    if (editor?.canvas?.getActiveObject()) {\r\n      if (editor?.canvas?.getActiveObject().linethrough) {\r\n        editor?.canvas?.getActiveObject().set(\"linethrough\", false);\r\n        editor?.canvas?.renderAll();\r\n      } else {\r\n        editor?.canvas?.getActiveObject().set(\"linethrough\", true);\r\n        editor?.canvas?.renderAll();\r\n      }\r\n    } else {\r\n      alert(\"No object selected\");\r\n    }\r\n  };\r\n  // ===👆 text style STRIKE THROUGH👆\r\n  //   ========================font size ===\r\n  const changeFontSize = (e) => {\r\n    console.log(\"font working>-\");\r\n    const o = editor.canvas\r\n      .getActiveObject()\r\n      .set(\"fontSize\", e.target.value * 1);\r\n    editor.canvas.renderAll();\r\n  };\r\n  // ========================================\r\n  //  ===👇 Clone Selected object👇\r\n  const clone = () => {\r\n    editor?.canvas?.getActiveObject().clone((cloned) => {\r\n      cloned.set({\r\n        left: cloned.left + 10,\r\n        top: cloned.top + 10,\r\n        evented: true,\r\n      });\r\n      editor?.canvas?.add(cloned);\r\n    });\r\n  };\r\n  // ===👆 Clone Selected object👆\r\n  //====================To Convert JSON\r\n\r\n  const toJSON = () => {\r\n    const json = editor.canvas.toJSON();\r\n    const data = JSON.stringify(json);\r\n    console.log(data);\r\n    setData(data);\r\n  };\r\n  // =====save event template json ====\r\n  const saveTemplateData = () => {\r\n    const json = editor.canvas.toJSON();\r\n    const data = JSON.stringify(json);\r\n    const ext = \"png\";\r\n    const image = editor?.canvas?.toDataURL({\r\n      format: ext,\r\n      enableRetinaScaling: true,\r\n    });\r\n    console.log(\"data=>\", data, \"image Preview =>\", image);\r\n  };\r\n  // ==================================\r\n  //=================== This Fnc For Adding Extra Image\r\n  const onUploadImage = (e) => {\r\n    const reader = new FileReader();\r\n    setAllImages([...allImages, e.target.files[0]]);\r\n    console.log(e.target.files[0]);\r\n    reader.onload = function (event) {\r\n      var imgObj = new Image();\r\n      imgObj.crossOrigin = \"Anonymous\";\r\n      imgObj.src = event.target.result;\r\n      imgObj.onload = function () {\r\n        var image = new fabric.Image(imgObj);\r\n        editor.canvas.centerObject(image);\r\n        image.set({\r\n          scaleX: editor?.canvas.getWidth() / image.width / 2,\r\n          scaleY: editor?.canvas.getHeight() / image.height / 2,\r\n          top: 0,\r\n          left: 0,\r\n          srcFromAttribute: true,\r\n        });\r\n        image.name = e.target.files[0].name;\r\n        editor?.canvas.add(image);\r\n        editor?.canvas.renderAll();\r\n      };\r\n    };\r\n    reader.onerror = (err) => console.log(err);\r\n    reader.readAsDataURL(e.target.files[0]);\r\n\r\n    // console.log(\"clicked\");\r\n    // const image = e.target.files[0];\r\n    // if (image) {\r\n    //   setImageFunc(URL.createObjectURL(e.target.files[0]));\r\n    // }\r\n  };\r\n  // ======================\r\n  const setImageFunc = (imgUrl) => {\r\n    fabric.Image.fromURL(\r\n      imgUrl,\r\n      (img) => {\r\n        img.scale(0.2);\r\n\r\n        editor.canvas.add(img);\r\n        editor.canvas.renderAll();\r\n      },\r\n      { left: width / 2, top: height / 2 }\r\n    );\r\n  };\r\n  // ======================\r\n\r\n  //   ====load canvas from json =====\r\n  const loadCanvasFromJson = () => {\r\n    let object = new fabric.Canvas(\"canvas\");\r\n    console.log(templateData);\r\n    editor?.canvas.loadFromJSON(templateData);\r\n  };\r\n  // ==================================\r\n  // =================== This is YOur Handler + Image Downloader\r\n  const downloadImage = (e) => {\r\n    e.preventDefault();\r\n    const ext = \"png\";\r\n    const base64 = editor?.canvas?.toDataURL({\r\n      format: ext,\r\n      enableRetinaScaling: true,\r\n    });\r\n    const link = document.createElement(\"a\");\r\n    link.href = base64;\r\n    link.download = `Template_Example.${ext}`;\r\n    console.log(\"Running\", base64);\r\n    // dispatch(EditTemplate(base64));\r\n    // { THis link.Click For Dowload Editd Image , Whene You remove That Commit And that Image will Download}\r\n    link.click();\r\n  };\r\n\r\n  //   ============ This Fuc For Delete all deta in render in Fabric\r\n  const removeSelectedObject = () => {\r\n    if (selectedObjects[0] && selectedObjects[0].get(\"type\") === \"image\") {\r\n      setAllImages(\r\n        allImages.filter((file) => file.name !== selectedObjects[0].name)\r\n      );\r\n    }\r\n    editor?.canvas?.remove(editor?.canvas?.getActiveObject());\r\n    editor?.canvas?.renderAll();\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   loadCanvasFromJson();\r\n  // }, [templateData]);\r\n  // ================\r\n  // ===👇 Toolbar button 👇===\r\n  const ListItemButtonStyle = {\r\n    padding: \"5px 0px\",\r\n    transition: \"all 200ms ease\",\r\n    border: \"1px solid #E6E2E2\",\r\n    width: \"85px\",\r\n    maxWidth: \"85px\",\r\n    marginY: \"8px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    \"&:hover\": {\r\n      bgcolor: \"transparent\",\r\n      borderColor: \"#795DA8\",\r\n      \"& svg\": { color: \"#795DA8\" },\r\n      \"& span\": { color: \"#795DA8\" },\r\n    },\r\n    \"&:active\": { scale: \".9\" },\r\n  };\r\n  // ===👇 Toolbar button type 2 👇===\r\n\r\n  const ListItemButtonStyle2 = {\r\n    padding: \"0px\",\r\n    transition: \"all 200ms ease\",\r\n    // width: \"85px\",\r\n    marginY: \"8px\",\r\n    display: \"flex\",\r\n    \"& svg\": {\r\n      fontSize: \"25px\",\r\n      marginRight: \"5px\",\r\n    },\r\n    \"& span\": { fontWeight: \"500\" },\r\n    \"&:hover\": {\r\n      bgcolor: \"transparent\",\r\n      borderColor: \"#795DA8\",\r\n      \"& svg\": { color: \"#795DA8\" },\r\n      \"& span\": { color: \"#795DA8\" },\r\n    },\r\n    \"&:active\": { scale: \".9\" },\r\n  };\r\n  // ===👇 TEXT Toolbar button type 3 👇===\r\n\r\n  const ListItemButtonStyle3 = {\r\n    padding: \"0px\",\r\n    transition: \"all 200ms ease\",\r\n    marginY: \"8px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    \"& .MuiListItemIcon-root\": {\r\n      minWidth: \"\",\r\n    },\r\n    \"& svg\": {\r\n      fontSize: \"25px\",\r\n      marginRight: \"5px\",\r\n    },\r\n    \"&:hover\": {\r\n      bgcolor: \"transparent\",\r\n      borderColor: \"#795DA8\",\r\n      \"& svg\": { color: \"#795DA8\" },\r\n      \"& span\": { color: \"#795DA8\" },\r\n    },\r\n    \"&:active\": { scale: \".9\" },\r\n  };\r\n\r\n  const uploadImage = async (e) => {\r\n    try {\r\n      const formData = new FormData();\r\n      allImages.forEach((v) => {\r\n        formData.append(\"image\", v);\r\n      });\r\n      const res = await axios.post(\"/template/saveImage\", formData);\r\n      createPreview();\r\n      console.log(res);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // =======================================================\r\n  const createPreview = async () => {\r\n    const canvasPng = editor?.canvas.toDataURL({\r\n      format: \"png\",\r\n      // quality: 0.8,\r\n      quality: 1,\r\n      width: 475,\r\n      height: 600,\r\n      pixelRatio: 3,\r\n      multiplier: 2,\r\n    });\r\n    function dataURLtoFile(dataurl, filename) {\r\n      const uint8Buffer = Buffer.from(dataurl.split(\",\")[1], \"base64\");\r\n      return new File([uint8Buffer], filename, { type: \"image/png\" });\r\n    }\r\n    // Usage example:\r\n    var file = dataURLtoFile(canvasPng, \"previewImage.png\");\r\n    saveTemplate(file);\r\n  };\r\n\r\n  async function saveTemplate(file) {\r\n    try {\r\n      fabric.Image.prototype.toObject = (function (toObject) {\r\n        return function () {\r\n          return fabric.util.object.extend(toObject.call(this), {\r\n            name: this.name,\r\n            src: `${url}/api/v1/admin/template/sendImage/${this.name}`,\r\n            crossOrigin: \"anonymous\",\r\n          });\r\n        };\r\n      })(fabric.Image.prototype.toObject);\r\n      const formData = new FormData();\r\n      formData.append(\"name\", templateData?.name);\r\n      formData.append(\"description\", templateData?.description);\r\n      formData.append(\"templateJson\", JSON.stringify(editor?.canvas.toJSON()));\r\n      formData.append(\"previewImage\", file);\r\n      const response = await axios.patch(`/template/${templateId}`, formData);\r\n      editor.canvas.clear();\r\n      snackbar(response.data.status, response.data.message);\r\n      navigate(\"/admin/template-list\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  // ===========================================\r\n  const getTemplateJson = async () => {\r\n    try {\r\n      const { data } = await axios.get(`/template/${templateId}`);\r\n      console.log(\"data=>\", data);\r\n      setTemplateData(data.template);\r\n      setTemplateJson(data.template.templateJson);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleOrientationChange = () => {\r\n    const isSmallScreen = window.innerWidth < 550; // Adjust the breakpoint as needed\r\n    const isPortrait = window.matchMedia(\"(orientation: portrait)\").matches;\r\n    console.log(\"windowlenth=>\", isSmallScreen, \" isPortRait=>\", isPortrait);\r\n    if (isSmallScreen) {\r\n      setIsLandscape(true);\r\n      document.getElementById(\"d-parent\").style.zoom = \"35%\";\r\n      handleShowDialogue();\r\n    } else {\r\n      document.getElementById(\"d-parent\").style.zoom = \"100%\";\r\n      setIsLandscape(false);\r\n      setDialogueOpen(false);\r\n    }\r\n  };\r\n  // useEffect(() => {\r\n  //   editor?.canvas?.setDimensions({ height: height, width: width });\r\n  // }, [editor]);\r\n\r\n  useEffect(() => {\r\n    editor?.canvas.loadFromJSON(templateJson);\r\n  }, [templateJson]);\r\n  useEffect(() => {\r\n    getTemplateJson();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleOrientationChange();\r\n\r\n    if (isLandscape) {\r\n      document.getElementById(\"d-parent\").style.zoom = \"35%\";\r\n    }\r\n    window.addEventListener(\"resize\", handleOrientationChange);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleOrientationChange);\r\n      // document.getElementById(\"d-parent\").style.zoom = \"100%\";\r\n    };\r\n  }, []);\r\n\r\n  // =======================================================\r\n  // =======================================================\r\n  // =======================================================\r\n  return (\r\n    <>\r\n      <Box paddingX={\"10px\"} boxSizing={\"border-box\"} id=\"d-parent\" >\r\n        <Typography\r\n          variant=\"h1\"\r\n          align=\"center\"\r\n          textAlign={\"center\"}\r\n          fontWeight=\"800\"\r\n          fontSize={\"28px\"}\r\n          mb={2}\r\n          sx={{\r\n            color: \"#795da8\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          Edit Template\r\n        </Typography>\r\n        {editor?.canvas?.getActiveObject()?.type === \"i-text\" && (\r\n          <>\r\n            {/*  👇 TOOLS TO EDIT TEXT(VISIBLE WHEN TEXT IS SELECTED)  👇    */}\r\n            <Grid item mt={2} xs={12} overflow={\"auto\"}>\r\n              <Stack\r\n                direction={\"row\"}\r\n                alignItems={\"center\"}\r\n                justifyContent={\"center\"}\r\n                border={\"1px solid #E6E2E2\"}\r\n                paddingX={\"5px\"}\r\n                boxSizing={\"border-box\"}\r\n                width={\"100%\"}\r\n              >\r\n                {/*  👇 change font type button  👇    */}\r\n                <ListItemButton sx={{ ...ListItemButtonStyle3 }}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel id=\"font-family-select-label\">Fonts</InputLabel>\r\n                    <Select\r\n                      labelId=\"font-family-select-label\"\r\n                      id=\"font-family-select\"\r\n                      value={selectedFont}\r\n                      label=\"Font Family\"\r\n                      size=\"small\"\r\n                      onChange={changeFont}\r\n                    >\r\n                      {fonts?.map((font, index) => {\r\n                        return (\r\n                          <MenuItem key={index} value={font}>\r\n                            {font}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </ListItemButton>\r\n                {/* 👆 change font type button 👆   */}\r\n                {/*  👇 change font COLOR button  👇    */}\r\n                <ListItemButton\r\n                  sx={{ ...ListItemButtonStyle3 }}\r\n                  onClick={changeColor}\r\n                >\r\n                  <input type=\"color\" onChange={changeColor} />\r\n                </ListItemButton>\r\n                {/* 👆 change font COLOR button 👆   */}\r\n                {/*  👇 Font Style BOLD  👇    */}\r\n                <ListItemButton sx={{ ...ListItemButtonStyle3 }} onClick={bold}>\r\n                  <ListItemIcon>\r\n                    <FormatBoldIcon />\r\n                  </ListItemIcon>\r\n                </ListItemButton>\r\n                {/* 👆 Font Style BOLD 👆   */}\r\n                {/*  👇 Font Style ITALIC  👇    */}\r\n                <ListItemButton\r\n                  sx={{ ...ListItemButtonStyle3 }}\r\n                  onClick={italic}\r\n                >\r\n                  <ListItemIcon>\r\n                    <FormatItalicIcon />\r\n                  </ListItemIcon>\r\n                </ListItemButton>\r\n                {/* 👆 Font Style ITALIC 👆   */}\r\n                {/*  👇 Font Style UNDERLINE  👇    */}\r\n                <ListItemButton\r\n                  sx={{ ...ListItemButtonStyle3 }}\r\n                  onClick={underline}\r\n                >\r\n                  <ListItemIcon>\r\n                    <FormatUnderlinedIcon />\r\n                  </ListItemIcon>\r\n                </ListItemButton>\r\n                {/* 👆 Font Style UNDERLINE 👆   */}\r\n                {/*  👇 Font Style STRIKETHROUGH  👇    */}\r\n                <ListItemButton\r\n                  sx={{ ...ListItemButtonStyle3 }}\r\n                  onClick={strike}\r\n                >\r\n                  <ListItemIcon>\r\n                    <StrikethroughSIcon />\r\n                  </ListItemIcon>\r\n                </ListItemButton>\r\n                {/* 👆 Font Style STRIKETHROUGH 👆   */}\r\n              </Stack>\r\n            </Grid>\r\n            {/* 👆 TOOLS TO EDIT TEXT(VISIBLE WHEN TEXT IS SELECTED) 👆   */}\r\n          </>\r\n        )}\r\n\r\n        <Grid container sx={{ width: \"100%\" }}>\r\n          {/*  👇 edit tools container  👇    */}\r\n\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            xs={12}\r\n            boxSizing={\"border-box\"}\r\n            sx={{\r\n              // padding: \"20px\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              boxSizing: \"border-box\",\r\n              order: { xs: 1, sm: 0 },\r\n              // border: \"1px solid green\",\r\n            }}\r\n          >\r\n            <Stack\r\n              sx={{\r\n                maxHeight: \"450px\",\r\n                overflow: \"auto\",\r\n                width: \"100%\",\r\n                boxSizing: \"border-box\",\r\n                \"&::-webkit-scrollbar\": {\r\n                  width: \"8px\",\r\n                },\r\n                \"&::-webkit-scrollbar-track\": {\r\n                  background: \"#CEC5DC\",\r\n                  borderRadius: \"4px\",\r\n                },\r\n                \"&::-webkit-scrollbar-thumb\": {\r\n                  background: \"#795DA8\",\r\n                  borderRadius: \"4px\",\r\n                },\r\n                \"&::-webkit-scrollbar-thumb:hover\": {\r\n                  background: \"#5a3991\",\r\n                  borderRadius: \"4px\",\r\n                },\r\n              }}\r\n            >\r\n              <List\r\n                disablePadding\r\n                sx={{\r\n                  width: { xs: \"1190px\", sm: \"100%\" },\r\n                  display: \"flex\",\r\n                  flexDirection: { xs: \"row\", sm: \"column\" },\r\n                  justifyContent: { xs: \"space-around\", sm: \"center\" },\r\n                  alignItems: \"center\",\r\n                  boxSizing: \"border-box\",\r\n                  \"& .MuiListItemIcon-root\": {\r\n                    minWidth: \"\",\r\n                  },\r\n                }}\r\n              >\r\n                {/*  👇==== Add Background Image ====  👇    */}\r\n\r\n                <ListItemButton\r\n                  component={\"label\"}\r\n                  sx={{\r\n                    ...ListItemButtonStyle,\r\n                  }}\r\n                >\r\n                  <ListItemIcon\r\n                    sx={{ color: \"#667087\", \"& svg\": { fontSize: \"50px\" } }}\r\n                  >\r\n                    <input\r\n                      accept=\"image/*\"\r\n                      style={{ display: \"none\" }}\r\n                      type=\"file\"\r\n                      onChange={setBackgroundImage}\r\n                    />\r\n                    <WallpaperIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primaryTypographyProps={{\r\n                      sx: {\r\n                        color: \"black\",\r\n                        fontSize: \"12px\",\r\n                        fontFamily: \"Montserrat\",\r\n                        textAlign: \"center\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    Add Background\r\n                  </ListItemText>\r\n                </ListItemButton>\r\n\r\n                {/* 👆 ==== Add Background Image ==== 👆   */}\r\n                {/*  👇==== Add Photo ====  👇    */}\r\n\r\n                <ListItemButton\r\n                  component={\"label\"}\r\n                  sx={{\r\n                    ...ListItemButtonStyle,\r\n                  }}\r\n                >\r\n                  <ListItemIcon\r\n                    sx={{ color: \"#667087\", \"& svg\": { fontSize: \"50px\" } }}\r\n                  >\r\n                    <input\r\n                      accept=\"image/*\"\r\n                      style={{ display: \"none\" }}\r\n                      type=\"file\"\r\n                      onChange={onUploadImage}\r\n                    />\r\n                    <InsertPhotoIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primaryTypographyProps={{\r\n                      sx: {\r\n                        color: \"black\",\r\n                        fontSize: \"12px\",\r\n                        fontFamily: \"Montserrat\",\r\n                        textAlign: \"center\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    Image\r\n                  </ListItemText>\r\n                </ListItemButton>\r\n\r\n                {/* 👆 ==== Add Photo ==== 👆   */}\r\n\r\n                {/*  👇==== Add text ====  👇    */}\r\n                <ListItemButton\r\n                  sx={{ ...ListItemButtonStyle }}\r\n                  onClick={addText}\r\n                >\r\n                  <ListItemIcon\r\n                    sx={{ color: \"#667087\", \"& svg\": { fontSize: \"50px\" } }}\r\n                  >\r\n                    <TbTextRecognition />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primaryTypographyProps={{\r\n                      sx: {\r\n                        color: \"black\",\r\n                        fontSize: \"12px\",\r\n                        fontFamily: \"Montserrat\",\r\n                        textAlign: \"center\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    Text\r\n                  </ListItemText>\r\n                </ListItemButton>\r\n                {/* 👆 ==== Add text ==== 👆   */}\r\n                {/*  👇==== Stickers ====  👇    */}\r\n                <ListItemButton\r\n                  sx={{ ...ListItemButtonStyle }}\r\n                  onClick={toggleStickersModal}\r\n                >\r\n                  <ListItemIcon\r\n                    sx={{ color: \"#667087\", \"& svg\": { fontSize: \"50px\" } }}\r\n                  >\r\n                    <ExtensionIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primaryTypographyProps={{\r\n                      sx: {\r\n                        color: \"black\",\r\n                        fontSize: \"12px\",\r\n                        fontFamily: \"Montserrat\",\r\n                        textAlign: \"center\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    Stickers\r\n                  </ListItemText>\r\n                </ListItemButton>\r\n                <StickersModal\r\n                  open={addStickersModal}\r\n                  handleClose={toggleStickersModal}\r\n                  addStickers={addStickers}\r\n                />\r\n\r\n                {/* 👆 ==== Stickers ==== 👆   */}\r\n                <Stack\r\n                  mt={1}\r\n                  alignItems={\"start\"}\r\n                  direction={{ xs: \"row\", sm: \"column\" }}\r\n                  width={{ xs: \"890px\", sm: \"100%\" }}\r\n                >\r\n                  {/*  👇==== Group Selected ====  👇    */}\r\n                  <ListItemButton\r\n                    sx={{ ...ListItemButtonStyle2 }}\r\n                    onClick={groupSelectedLayers}\r\n                  >\r\n                    <ListItemIcon sx={{ color: \"#667087\" }}>\r\n                      <ImMakeGroup />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primaryTypographyProps={{\r\n                        sx: {\r\n                          color: \"black\",\r\n                          fontSize: \"12px\",\r\n                          fontFamily: \"Montserrat\",\r\n                          textAlign: \"center\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      Group Selected\r\n                    </ListItemText>\r\n                  </ListItemButton>\r\n\r\n                  {/* 👆 ==== Group Selected ==== 👆   */}\r\n                  {/*  👇==== GroupAll ====  👇    */}\r\n                  <ListItemButton\r\n                    sx={{ ...ListItemButtonStyle2 }}\r\n                    onClick={groupAllLayers}\r\n                  >\r\n                    <ListItemIcon sx={{ color: \"#667087\" }}>\r\n                      <FaRegObjectGroup />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primaryTypographyProps={{\r\n                        sx: {\r\n                          color: \"black\",\r\n                          fontSize: \"12px\",\r\n                          fontFamily: \"Montserrat\",\r\n                          textAlign: \"center\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      Group ALL\r\n                    </ListItemText>\r\n                  </ListItemButton>\r\n\r\n                  {/* 👆 ==== GroupAll ==== 👆   */}\r\n                  {/*  👇==== UnGroup ====  👇    */}\r\n                  <ListItemButton\r\n                    sx={{ ...ListItemButtonStyle2 }}\r\n                    onClick={unGroup}\r\n                  >\r\n                    <ListItemIcon\r\n                      sx={{ color: \"#667087\", \"& svg\": { fontSize: \"50px\" } }}\r\n                    >\r\n                      <FaRegObjectUngroup />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primaryTypographyProps={{\r\n                        sx: {\r\n                          color: \"black\",\r\n                          fontSize: \"12px\",\r\n                          fontFamily: \"Montserrat\",\r\n                          textAlign: \"center\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      Ungroup\r\n                    </ListItemText>\r\n                  </ListItemButton>\r\n\r\n                  {/* 👆 ==== UnGroup ==== 👆   */}\r\n                  {/*  👇==== Bring To Top ====  👇    */}\r\n                  <ListItemButton\r\n                    onClick={bringToTop}\r\n                    sx={{ ...ListItemButtonStyle2 }}\r\n                  >\r\n                    <ListItemIcon sx={{ color: \"#667087\" }}>\r\n                      <BsLayerForward />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primaryTypographyProps={{\r\n                        sx: {\r\n                          color: \"black\",\r\n                          fontSize: \"12px\",\r\n                          fontWeight: \"800\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      Bring To Top\r\n                    </ListItemText>\r\n                  </ListItemButton>\r\n\r\n                  {/* 👆 ==== Bring To Top ==== 👆   */}\r\n                  {/*  👇==== move layer back  ====  👇    */}\r\n                  <ListItemButton\r\n                    onClick={moveBackward}\r\n                    sx={{ ...ListItemButtonStyle2 }}\r\n                  >\r\n                    <ListItemIcon sx={{ color: \"#667087\" }}>\r\n                      <BsLayerBackward />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primaryTypographyProps={{\r\n                        sx: {\r\n                          color: \"black\",\r\n                          fontSize: \"12px\",\r\n                          fontWeight: \"800\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      Move to back\r\n                    </ListItemText>\r\n                  </ListItemButton>\r\n                  {/* 👆 ==== move layer back ==== 👆   */}\r\n                  {/*  👇==== Clone Object  ====  👇    */}\r\n                  <ListItemButton\r\n                    onClick={clone}\r\n                    sx={{ ...ListItemButtonStyle2 }}\r\n                  >\r\n                    <ListItemIcon sx={{ color: \"#667087\" }}>\r\n                      <FileCopyIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primaryTypographyProps={{\r\n                        sx: {\r\n                          color: \"black\",\r\n                          fontSize: \"12px\",\r\n                          fontWeight: \"800\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      Clone\r\n                    </ListItemText>\r\n                  </ListItemButton>\r\n                  {/* 👆 ==== Clone Object ==== 👆   */}\r\n                  {/*  👇==== Remove ====  👇    */}\r\n                  <ListItemButton\r\n                    sx={{ ...ListItemButtonStyle2 }}\r\n                    onClick={removeSelectedObject}\r\n                  >\r\n                    <ListItemIcon\r\n                      sx={{ color: \"#667087\", \"& svg\": { fontSize: \"50px\" } }}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primaryTypographyProps={{\r\n                        sx: {\r\n                          color: \"black\",\r\n                          fontSize: \"12px\",\r\n                          fontFamily: \"Montserrat\",\r\n                          textAlign: \"center\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      Remove\r\n                    </ListItemText>\r\n                  </ListItemButton>\r\n                  {/* 👆 ==== Remove ==== 👆   */}\r\n                </Stack>\r\n              </List>\r\n            </Stack>\r\n            <Button\r\n              fullWidth\r\n              disableElevation\r\n              variant=\"contained\"\r\n              //  onClick={downloadImage}\r\n              // onClick={toJSON}\r\n              onClick={uploadImage}\r\n              sx={{ color: \"#fff\", mt: 2 }}\r\n            >\r\n              Update\r\n            </Button>\r\n            <Button\r\n              fullWidth\r\n              disableElevation\r\n              variant=\"outlined\"\r\n              onClick={() => navigate(\"/admin/template-list\")}\r\n              sx={{ mt: 1 }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n          {/* 👆 edit tools container 👆   */}\r\n          {/*  👇 image container  👇    */}\r\n          <Grid\r\n            item\r\n            xl={10}\r\n            lg={10}\r\n            md={10}\r\n            sm={10}\r\n            xs={12}\r\n            sx={{\r\n              boxSizing: \"border-box\",\r\n              //  padding: \"5px\",\r\n              width: \"100%\",\r\n              // height: \"70vh\",\r\n              order: 0,\r\n              paddingX: \"5px\",\r\n              \"& .fabCanvas\": {\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                border: \"1px solid #795DA8\",\r\n                boxSizing: \"border-box\",\r\n              },\r\n              \"& .upper-canvas\": {\r\n                background: \"none\",\r\n              },\r\n            }}\r\n          >\r\n            <Box\r\n              width={{ md: \"475px\", sm: \"475px\", xs: \"475px\" }}\r\n              height={\"600px\"}\r\n              ref={ref}\r\n              sx={{ margin: \"auto\", border: \"1px solid black\" }}\r\n            >\r\n              <FabricJSCanvas className=\"fabCanvas\" onReady={onReady} />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <Dialogue open={dialogueOpen} handleClose={handleShowDialogue} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TemplateEdit;\r\n\r\n// ***********************************************\r\n// ***********************************************\r\n// ***********************************************\r\n// ***********************************************\r\n// ***********************************************\r\n// ***********************************************\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { fabric } from \"fabric\";\r\n// import { FabricJSCanvas, useFabricJSEditor } from \"fabricjs-react\";\r\n// import axios from \"axios\";\r\n// import { Buffer } from \"buffer\";\r\n// import { useParams } from \"react-router-dom\";\r\n\r\n// const TemplateEdit = () => {\r\n//   const { editor, onReady, selectedObjects } = useFabricJSEditor();\r\n//   const [allImages, setAllImages] = useState([]);\r\n//   const [templateJson, setTemplateJson] = useState();\r\n//   const { templateId } = useParams();\r\n//   const onAddCircle = () => {\r\n//     editor?.addCircle();\r\n//   };\r\n//   const onAddRectangle = () => {\r\n//     const rectangle = new fabric.Rect({\r\n//       left: 100,\r\n//       top: 100,\r\n//       width: 200,\r\n//       height: 100,\r\n//     });\r\n//     editor?.canvas?.add(rectangle);\r\n//   };\r\n//   const deleteAll = () => {\r\n//     setAllImages([]);\r\n//     editor?.deleteAll();\r\n//   };\r\n//   const setFillColor = (e) => {\r\n//     editor?.setFillColor(e.target.value);\r\n//   };\r\n\r\n//   const addImage = (e) => {\r\n//     const reader = new FileReader();\r\n//     console.log(e.target.files[0]);\r\n//     setAllImages([...allImages, e.target.files[0]]);\r\n//     reader.onload = function (event) {\r\n//       var imgObj = new Image();\r\n//       imgObj.src = event.target.result;\r\n//       imgObj.setAttribute(\"crossOrigin\", \"anonymous\");\r\n//       imgObj.onload = function () {\r\n//         var image = new fabric.Image(imgObj);\r\n//         editor.canvas.centerObject(image);\r\n//         image.set({\r\n//           scaleX: editor?.canvas.getWidth() / image.width / 2,\r\n//           scaleY: editor?.canvas.getHeight() / image.height / 2,\r\n//           top: 0,\r\n//           left: 0,\r\n//           srcFromAttribute: true,\r\n//         });\r\n//         image.name = e.target.files[0].name;\r\n//         editor.canvas.add(image);\r\n//         editor?.canvas.renderAll();\r\n//       };\r\n//     };\r\n//     reader.readAsDataURL(e.target.files[0]);\r\n//   };\r\n//   const addText = () => {\r\n//     const text = new fabric.Textbox(\"text\", {\r\n//       editable: true,\r\n//     });\r\n//     editor?.canvas?.add(text);\r\n//   };\r\n//   const layerDown = () => {\r\n//     editor?.canvas?.sendBackwards(selectedObjects[0]);\r\n//     editor?.canvas?.sendToBack(selectedObjects[0]);\r\n//     editor?.canvas.discardActiveObject();\r\n//   };\r\n//   const layerUp = () => {\r\n//     console.log(selectedObjects);\r\n//     editor?.canvas?.bringForward(selectedObjects[0]);\r\n//     editor?.canvas?.bringToFront(selectedObjects[0]);\r\n//     editor?.canvas.discardActiveObject();\r\n//   };\r\n//   const deleteSelected = () => {\r\n//     console.log(selectedObjects[0].get(\"type\") === \"image\");\r\n//     if (selectedObjects[0] && selectedObjects[0].get(\"type\") === \"image\") {\r\n//       console.log(selectedObjects[0].name);\r\n//       setAllImages(\r\n//         allImages.filter((file) => file.name !== selectedObjects[0].name)\r\n//       );\r\n//     }\r\n//     editor?.deleteSelected();\r\n//   };\r\n//   const setBackgroundImage = (e) => {\r\n//     const reader = new FileReader();\r\n//     setAllImages([...allImages, e.target.files[0]]);\r\n//     // set background image options\r\n//     var bgImgOptions = {\r\n//       // set the background color to white\r\n//       backgroundColor: \"red\",\r\n//       // set the scaling mode to \"cover\"\r\n//       backgroundScaleMode: \"cover\",\r\n//     };\r\n//     // load the background image\r\n//     reader.onload = function (event) {\r\n//       var imgObj = new Image();\r\n//       imgObj.src = event.target.result;\r\n//       imgObj.setAttribute(\"crossOrigin\", \"anonymous\");\r\n//       imgObj.onload = function () {\r\n//         var image = new fabric.Image(imgObj);\r\n//         image.name = e.target.files[0].name;\r\n//         // set the image as the background of the canvas\r\n//         editor?.canvas?.setBackgroundImage(\r\n//           image,\r\n//           editor.canvas.renderAll.bind(editor.canvas),\r\n//           bgImgOptions\r\n//         );\r\n//       };\r\n//     };\r\n//     reader.readAsDataURL(e.target.files[0]);\r\n//   };\r\n//   const getTemplateJson = async () => {\r\n//     try {\r\n//       const { data } = await axios.get(`/template/${templateId}`);\r\n//       setTemplateJson(data.template.templateJson);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n//   useEffect(() => {\r\n//     editor?.canvas?.setDimensions({ height: 600, width: 900 });\r\n//   }, [editor]);\r\n\r\n//   useEffect(() => {\r\n//     editor?.canvas.loadFromJSON(templateJson);\r\n//   }, [templateJson]);\r\n//   useEffect(() => {\r\n//     getTemplateJson();\r\n//   }, []);\r\n//   async function saveTemplate(file) {\r\n//     try {\r\n//       fabric.Image.prototype.toObject = (function (toObject) {\r\n//         return function () {\r\n//           return fabric.util.object.extend(toObject.call(this), {\r\n//             name: this.name,\r\n//             src: `http://192.168.29.249:8085/template/sendImage/${this.name}`,\r\n//           });\r\n//         };\r\n//       })(fabric.Image.prototype.toObject);\r\n//       const formData = new FormData();\r\n//       formData.append(\"name\", \"badhiya template\");\r\n//       formData.append(\"description\", \"arre bahut badhiya template hai\");\r\n//       formData.append(\"templateJson\", JSON.stringify(editor?.canvas.toJSON()));\r\n//       formData.append(\"previewImage\", file);\r\n//       console.log(formData);\r\n//       const response = await axios.patch(`/template/${templateId}`, formData);\r\n//       console.log(editor?.canvas.toJSON());\r\n//       console.log(response);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   }\r\n//   const uploadImage = async (e) => {\r\n//     try {\r\n//       const formData = new FormData();\r\n//       allImages.forEach((v) => {\r\n//         console.log(v);\r\n//         formData.append(\"image\", v);\r\n//       });\r\n//       const res = await axios.post(\"/template/saveImage\", formData);\r\n//       console.log(res);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n//   const getPreviewImage = async () => {\r\n//     const canvasPng = editor?.canvas.toDataURL({\r\n//       format: \"png\",\r\n//     });\r\n\r\n//     // Making file object from the base64 string\r\n//     function dataURLtoFile(dataurl, filename) {\r\n//       const uint8Buffer = Buffer.from(dataurl.split(\",\")[1], \"base64\");\r\n//       return new File([uint8Buffer], filename, { type: \"image/png\" });\r\n//     }\r\n\r\n//     // Usage example:\r\n//     var file = dataURLtoFile(canvasPng, \"previewImage.png\");\r\n//     saveTemplate(file);\r\n//   };\r\n//   return (\r\n//     <div>\r\n//       <button onClick={onAddCircle}>Add circle</button>\r\n//       <button onClick={onAddRectangle}>Add Rectangle</button>\r\n//       <button onClick={deleteAll}>Delete all</button>\r\n//       <button onClick={addText}>Add Text</button>\r\n//       <button onClick={layerDown}>Layer Down</button>\r\n//       <button onClick={layerUp}>Layer Up</button>\r\n//       <button onClick={deleteSelected}>Delete</button>\r\n//       <button onClick={uploadImage}>Upload Images</button>\r\n//       <button onClick={getPreviewImage}>Preview Image</button>\r\n//       <label htmlFor=\"img\">Add Image</label>\r\n//       <input\r\n//         type=\"file\"\r\n//         id=\"img\"\r\n//         accept=\"image/png, image/jpeg ,image/jpg\"\r\n//         onChange={addImage}\r\n//       ></input>\r\n//       <label htmlFor=\"img\">Add Background Image</label>\r\n//       <input\r\n//         type=\"file\"\r\n//         id=\"img\"\r\n//         accept=\"image/png, image/jpeg ,image/jpg\"\r\n//         crossOrigin=\"anonymous\"\r\n//         onChange={setBackgroundImage}\r\n//       ></input>\r\n//       <label htmlFor=\"favcolor\">Select your favorite color:</label>\r\n//       <input\r\n//         type=\"color\"\r\n//         id=\"favcolor\"\r\n//         name=\"favcolor\"\r\n//         // value=\r\n//         onChange={setFillColor}\r\n//       ></input>\r\n//       <FabricJSCanvas className=\"sample-canvas\" onReady={onReady} />\r\n//     </div>\r\n//   );\r\n// };\r\n// export default TemplateEdit;\r\n","// export const url = \"http://192.168.29.149:8085\";\r\nexport const url = \"http://3.20.225.149:8085\";\r\n"],"names":["props","_jsxs","Dialog","open","onClose","handleClose","children","_jsx","DialogTitle","id","Stack","direction","alignItems","spacing","DialogContent","DialogContentText","_ref","addStickers","_useState","useState","_useState2","_slicedToArray","stickersData","setStickersData","snackbar","useContext","DataContext","getStickers","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","sent","stickers","t0","message","stop","apply","arguments","useEffect","Modal","Box","sx","position","top","left","transform","width","xs","sm","bgcolor","boxShadow","p","outline","height","boxSizing","Typography","variant","fontSize","fontWeight","textAlign","mt","flexWrap","overflow","map","stkr","index","MenuItem","onClick","e","value","concat","image","alt","src","_ref$current","_ref$current2","_editor$canvas31","_editor$canvas31$getA","ref","useRef","allImages","setAllImages","_useState3","_useState4","setColor","_useFabricJSEditor","useFabricJSEditor","editor","onReady","selectedObjects","_useState5","_useState6","_useState7","_useState8","templateData","setTemplateData","_useState9","_useState10","addStickersModal","setAddStickersModal","templateId","useParams","_useState11","_useState12","templateJson","setTemplateJson","_useState13","_useState14","selectedFont","setSelectedFont","fonts","_useState15","_useState16","dialogueOpen","setDialogueOpen","_useState17","_useState18","isLandscape","setIsLandscape","_useState19","current","clientWidth","clientHeight","_useState20","screenSize","console","log","handleShowDialogue","navigate","useNavigate","canvasEl","document","querySelector","toggleStickersModal","useDispatch","changeColor","_editor$canvas2","target","canvas","getActiveObject","set","setStrokeColor","renderAll","ListItemButtonStyle","padding","transition","border","maxWidth","marginY","display","flexDirection","borderColor","color","scale","ListItemButtonStyle2","marginRight","ListItemButtonStyle3","justifyContent","minWidth","uploadImage","formData","res","FormData","forEach","v","append","createPreview","_x","_callee2","canvasPng","dataURLtoFile","_context2","dataurl","filename","uint8Buffer","Buffer","split","File","type","toDataURL","format","quality","pixelRatio","multiplier","saveTemplate","_x2","_saveTemplate","_callee4","file","response","_context4","fabric","toObject","call","this","name","url","crossOrigin","description","JSON","stringify","toJSON","clear","status","getTemplateJson","_ref3","_callee3","_data","_context3","template","handleOrientationChange","isSmallScreen","window","innerWidth","isPortrait","matchMedia","matches","getElementById","style","zoom","loadFromJSON","addEventListener","removeEventListener","_Fragment","paddingX","align","mb","Grid","item","ListItemButton","_objectSpread","FormControl","fullWidth","InputLabel","Select","labelId","label","size","onChange","o","font","_editor$canvas3","_editor$canvas4","_editor$canvas5","_editor$canvas6","_editor$canvas7","ListItemIcon","FormatBoldIcon","_editor$canvas8","_editor$canvas9","_editor$canvas10","_editor$canvas11","_editor$canvas12","fontStyle","FormatItalicIcon","_editor$canvas13","_editor$canvas14","_editor$canvas15","_editor$canvas16","_editor$canvas17","underline","FormatUnderlinedIcon","_editor$canvas18","_editor$canvas19","_editor$canvas20","_editor$canvas21","_editor$canvas22","_editor$canvas23","linethrough","alert","StrikethroughSIcon","container","order","maxHeight","background","borderRadius","List","disablePadding","component","accept","reader","FileReader","_toConsumableArray","files","onload","event","imgObj","Image","result","Math","min","_editor$canvas","setBackgroundImage","bind","scaleX","scaleY","readAsDataURL","WallpaperIcon","ListItemText","primaryTypographyProps","fontFamily","centerObject","getWidth","getHeight","srcFromAttribute","add","onerror","err","InsertPhotoIcon","object","TbTextRecognition","ExtensionIcon","StickersModal","img","decodeURI","length","toGroup","ImMakeGroup","sel","getObjects","setActiveObject","FaRegObjectGroup","newItems","items","_objects","_restoreObjectsState","remove","i","FaRegObjectUngroup","myObject","bringToFront","BsLayerForward","sendBackwards","discardActiveObject","BsLayerBackward","_editor$canvas24","clone","cloned","_editor$canvas25","evented","FileCopyIcon","_editor$canvas28","_editor$canvas29","_editor$canvas30","get","filter","DeleteIcon","Button","disableElevation","xl","lg","md","margin","FabricJSCanvas","className","Dialogue"],"sourceRoot":""}