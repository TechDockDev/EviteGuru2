{"version":3,"file":"static/js/468.e3a88413.chunk.js","mappings":"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","sources":["screen/subscription/EditPricingContent.js","../node_modules/@mui/icons-material/Close.js"],"sourcesContent":["import { Box, Button, Paper, Typography, Grid, Input, Stack, Select, MenuItem, IconButton, TextField } from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { DataContext } from \"../../AppContext\";\r\nexport const EditPricingContent = () => {\r\n   const params = useParams();\r\n   const navigate = useNavigate();\r\n   const [value, setValue] = useState();\r\n   const [descriptionNumber, setDescriptionNumber] = useState([]);\r\n   const [description, setDescription] = useState({});\r\n  const {snackbar} = useContext(DataContext)\r\n   useEffect(() => {\r\n      (async () => {\r\n         try {\r\n            const { data } = await axios.get(`/plan/${params.id}`);\r\n            setValue(data.plan);\r\n            let temp = {};\r\n            data?.plan.description?.forEach((element, index) => {\r\n               temp = { ...temp, [`description${index}`]: element };\r\n            });\r\n            setDescription(temp);\r\n         } catch (error) {\r\n           snackbar(\"error\", error.message)\r\n         }\r\n      })();\r\n   }, []);\r\n   useEffect(() => {\r\n      setDescriptionNumber(Array.from({ length: Object.keys(description)?.length }, () => Math.random()));\r\n      return () => {\r\n         setDescriptionNumber([]);\r\n      };\r\n   }, [Object.keys(description)?.length]);\r\n\r\n   const addDescription = () => {\r\n      setDescriptionNumber([...descriptionNumber, Math.random()]);\r\n      setDescription({\r\n         ...description,\r\n         [`description${Object.keys(description)?.length}`]: \"\",\r\n      });\r\n   };\r\n\r\n   const handleChange = (e) => {\r\n      if (e.target.name === \"monthly\" || e.target.name === \"yearly\") {\r\n         return setValue({\r\n            ...value,\r\n            price: { ...value.price, [e.target.name]: e.target.value },\r\n         });\r\n      }\r\n      setValue({ ...value, [e.target.name]: e.target.value });\r\n   };\r\n   const handleDescription = (e, index) => {\r\n      setDescription({ ...description, [e.target.name]: e.target.value });\r\n   };\r\n\r\n   const removeDescription = (index) => {\r\n      setDescriptionNumber(descriptionNumber.filter((item, i) => i !== index));\r\n   };\r\n\r\n   const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      try {\r\n         const data = { ...value, description: Object.values(description) };\r\n         const res = await axios.patch(`/plan/${params.id}`, data);\r\n         snackbar(res.data.status, res.data.message)\r\n         navigate(\"/admin/pricing\");\r\n      } catch (error) {\r\n        snackbar(\"error\", error.message)\r\n      }\r\n   };\r\n   return (\r\n      <Stack width=\"100%\" margin=\"auto\" alignItems={\"center\"} padding={2} boxSizing={\"border-box\"}>\r\n         <Paper\r\n            sx={{\r\n               display: \"flex\",\r\n               justifyContent: \"center\",\r\n               flexDirection: \"column\",\r\n               p: 5,\r\n               bgcolor: \"white\",\r\n               borderRadius: \"20px\",\r\n            }}\r\n            elevation={10}>\r\n            <Box component=\"form\"  autoComplete=\"off\" onSubmit={handleSubmit}>\r\n               <Typography\r\n                  variant=\"h1\"\r\n                  align=\"center\"\r\n                  fontWeight=\"800\"\r\n                  fontSize={\"28px\"}\r\n                  sx={{\r\n                     color: \"#795da8\",\r\n                     width: \"100%\",\r\n                     mb: 2,\r\n                  }}>\r\n                  Edit Subscription\r\n               </Typography>\r\n               <Stack direction={\"column\"} spacing={2}>\r\n                  <TextField size=\"small\" label=\"Name\" name=\"name\" value={value?.name || \"\"} variant=\"outlined\"  onChange={handleChange} required />\r\n\r\n                  {descriptionNumber?.map((v, i) => (\r\n                     <Stack direction={\"row\"} alignItems={\"center\"} spacing={1} key={v} position={\"relative\"}>\r\n                        <>\r\n                           <TextField size=\"small\" label=\"Description\" name={`description${i}`} value={description[`description${i}`]} onChange={handleDescription} variant=\"outlined\" fullWidth />\r\n                      \r\n                              <IconButton\r\n                                 aria-label=\"remove\"\r\n                                 size=\"small\"\r\n                                 onClick={() => removeDescription(i)}\r\n                                 sx={{\r\n                                  padding:\"0\",\r\n                                   position: \"absolute\",\r\n                                   right:\"-5px\",\r\n                                   top:\"-5px\",\r\n                                   transition: \"all 200ms ease\",\r\n                                   backgroundColor: \"#795DA8\",\r\n                                   color: \"white\",\r\n                                   \"&:hover\": {\r\n                                      backgroundColor: \"#CEC5DC\",\r\n                                      color: \"#795DA8\",\r\n                                   },\r\n                                }}>\r\n                                   <CloseIcon sx={{fontSize:\"15px\"}} />\r\n                              </IconButton>\r\n                        \r\n                        </>\r\n                     </Stack>\r\n                  ))}\r\n                <Box width={\"100%\"} textAlign={\"right\"} sx={{\r\n                    marginTop:\"5px !important\",\r\n                    marginBottom:\"10px !important\"\r\n                  }} >\r\n                     <Button\r\n                        disableElevation\r\n\r\n                        size=\"small\"\r\n                        onClick={addDescription}\r\n                        sx={{\r\n                           \r\n                           \r\n                        }}>\r\n                        Add More Description\r\n                     </Button>\r\n                  </Box>\r\n               </Stack>\r\n               <Stack spacing={2} direction={\"row\"}>\r\n                  <TextField size=\"small\" label=\"Monthly Price\" name=\"monthly\" value={value?.price?.monthly || \"\"} variant=\"outlined\" type=\"number\" onChange={handleChange} />\r\n                  <TextField size=\"small\" label=\"Yearly Price\" name=\"yearly\" value={value?.price?.yearly || \"\"} type=\"number\" variant=\"outlined\" onChange={handleChange}  />\r\n               </Stack>\r\n               <Stack spacing={2} mt={2}  direction={\"row\"}>\r\n                  <TextField size=\"small\" label=\"Template Limit\" name=\"templateLimit\" value={value?.templateLimit || \"\"} variant=\"outlined\" type=\"number\" onChange={handleChange} />\r\n                  <TextField size=\"small\" label=\"Guest Limit\" name=\"guestLimit\" value={value?.guestLimit || \"\"} type=\"number\" variant=\"outlined\" onChange={handleChange}  />\r\n               </Stack>\r\n               <Box width={\"100%\"} display={\"flex\"} justifyContent={\"space-between\"}>\r\n                  <Button variant=\"contained\" type=\"submit\" sx={{ color: \"white\", my: \"20px\" }}>\r\n                     Submit\r\n                  </Button>\r\n                  <Button onClick={() => navigate(\"/admin/pricing\")} variant=\"outlined\" sx={{ my: \"20px\" }}>\r\n                     Cancel\r\n                  </Button>\r\n               </Box>\r\n            </Box>\r\n         </Paper>\r\n      </Stack>\r\n   );\r\n};\r\n\r\nexport default EditPricingContent;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexports.default = _default;"],"names":["EditPricingContent","_Object$keys2","_value$price","_value$price2","params","useParams","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","descriptionNumber","setDescriptionNumber","_useState5","_useState6","description","setDescription","snackbar","useContext","DataContext","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data$plan$descriptio","_yield$axios$get","data","temp","wrap","_context","prev","next","axios","concat","id","sent","plan","forEach","element","index","_objectSpread","_defineProperty","t0","message","stop","_Object$keys","Array","from","length","Object","keys","Math","random","handleChange","e","target","name","price","handleDescription","handleSubmit","_ref2","_callee2","res","_context2","preventDefault","values","status","_x","apply","arguments","_jsx","Stack","width","margin","alignItems","padding","boxSizing","children","Paper","sx","display","justifyContent","flexDirection","p","bgcolor","borderRadius","elevation","_jsxs","Box","component","autoComplete","onSubmit","Typography","variant","align","fontWeight","fontSize","color","mb","direction","spacing","TextField","size","label","onChange","required","map","v","i","position","_Fragment","fullWidth","IconButton","onClick","filter","item","right","top","transition","backgroundColor","CloseIcon","textAlign","marginTop","marginBottom","Button","disableElevation","_Object$keys3","_toConsumableArray","monthly","type","yearly","mt","templateLimit","guestLimit","my","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}